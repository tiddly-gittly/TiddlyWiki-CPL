{"title":"$:/plugins/wikilabs/keyvalues","author":"pmario","name":"Key Values","description":"improve data-tiddler handling","readme":"! ''keyvalues'' Operator\n\nThe \"keyvalues\" operator only works with DataTiddlers. Non data-tiddlers will be ignored!\n\nThe <<.op keyvalues>> operator uses an extended syntax that permits multiple fields and flags to be passed:\n\n```\n[keyvalues:<field list>:<separator>:<flag>[<operand>]]\n```\n\n* ''field list'': an ordered, comma delimited list. Either `key`, `value` or both\n** defaults to `key,value` if blank\n* ''separator'': a separator string used to combine the output string\n** defaults to `: ` = `<colon><space>` if blank <small>(new since V2.1.0)</small>\n** If a space is needed, use: `&nbsp;`\n** If a colon `:` is needed, use: `&#58;`\n* ''flag'': `usekey`, `usevalue` or `useboth`\n** (defaults to `usekey` if blank)\n** only 1 flag is allowed. The first one will be used\n* ''operand'': filter operand\n\nThe following example lists both the <<.field key>> and the <<.field value>>. It uses the string <<.op -xx->> as a separator between key and value. It uses the regexp operand: <<.op digit-pattern>> to filter by the <<.field key>> \n\n```\n<$set name=\"digit-pattern\" value=\"[0][3-9]:\">\n[keyvalues:key,value:-xx-:usekey<digit-pattern>]\n```\n\nThe available flags are:\n\n* ''usekey'' - the <<.field key>> will be used to filter the output. The `<operand>` contains a regexp filter\n* ''usevalue'' - the <<.field value>> will be used to filter the output. The `<operand>` contains a regexp filter\n* ''useboth'' - the <<.field key>>, the <<.field seperator>> and <<.field value>> will be used to filter the output. The `<operand>` contains a regexp filter","version":"2.2.1","plugin-type":"plugin","core-version":">=5.1.14","requires-reload":false,"category":"Unknown","type":"application/json","latest":"2.2.1","versions":["2.2.0","2.2.1"],"versions-size":{"2.2.0":7000,"2.2.1":7172}}