{"title":"$:/plugins/tiddlywiki/consent-banner","name":"Consent Banner","description":"Consent banner for GDPR etc","list":"readme docs youtube config","stability":"STABILITY_2_STABLE","version":"5.3.4","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/tiddlywiki/consent-banner/banner\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/banner\",\"tags\":\"$:/tags/PageTemplate\",\"text\":\"\\\\whitespace trim\\n\\n<$reveal state=\\\"$:/state/consent-banner/accepted\\\" type=\\\"match\\\" text=\\\"\\\" tag=\\\"div\\\">\\n\\n<div class=\\\"tc-consent-backdrop\\\">\\n\\n</div>\\n\\n<div class=\\\"tc-consent-banner tc-consent-banner-left\\\">\\n\\n<$transclude tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/greeting-message\\\" mode=\\\"block\\\"/>\\n\\n<div class=\\\"tc-consent-buttons\\\">\\n\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/ConsentBanner/Button]]\\\">\\n\\n<$transclude tiddler=<<currentTiddler>> mode=\\\"inline\\\"/>\\n\\n</$list>\\n\\n</div>\\n\\n</div>\\n\\n</$reveal>\\n\"},\"$:/plugins/tiddlywiki/consent-banner/blocked-embed-message-wrapper\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/blocked-embed-message-wrapper\",\"text\":\"\\\\define styles()\\nwidth:$(width)$;height:$(height)$;\\n\\\\end\\n\\n<div class=\\\"tc-blocked-embedded-content\\\" style=<<styles>>>\\n<div class=\\\"tc-blocked-embedded-content-inner\\\">\\n<div class=\\\"tc-blocked-embedded-content-inner-inner\\\">\\n<$transclude tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/blocked-embed-message\\\" mode=\\\"inline\\\"/>\\n</div>\\n</div>\\n</div>\\n\"},\"$:/plugins/tiddlywiki/consent-banner/buttons/accept\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/buttons/accept\",\"tags\":\"$:/tags/ConsentBanner/Button\",\"text\":\"<$button message=\\\"tm-consent-accept\\\" class=\\\"tc-consent-button tc-consent-button-default tc-btn-invisible\\\" tooltip={{$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/hint}}>\\n{{$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/caption}}\\n</$button>\\n\"},\"$:/plugins/tiddlywiki/consent-banner/buttons/decline\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/buttons/decline\",\"tags\":\"$:/tags/ConsentBanner/Button\",\"text\":\"<$button message=\\\"tm-consent-decline\\\" class=\\\"tc-consent-button tc-btn-invisible\\\" tooltip={{$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/hint}}>\\n{{$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/caption}}\\n</$button>\\n\"},\"$:/config/DefaultColourMappings/consent-banner-backdrop-background\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-backdrop-background\",\"text\":\"rgba(0,0,0,0.2)\"},\"$:/config/DefaultColourMappings/consent-banner-background\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-background\",\"text\":\"#009677\"},\"$:/config/DefaultColourMappings/consent-banner-button-background\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-background\",\"text\":\"transparent\"},\"$:/config/DefaultColourMappings/consent-banner-button-border\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-border\",\"text\":\"#fff\"},\"$:/config/DefaultColourMappings/consent-banner-button-default-background\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-default-background\",\"text\":\"#fff\"},\"$:/config/DefaultColourMappings/consent-banner-button-default-foreground\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-default-foreground\",\"text\":\"#009677\"},\"$:/config/DefaultColourMappings/consent-banner-button-foreground\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-foreground\",\"text\":\"#fff\"},\"$:/config/DefaultColourMappings/consent-banner-button-hover-background\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-hover-background\",\"text\":\"#fff\"},\"$:/config/DefaultColourMappings/consent-banner-button-hover-border\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-hover-border\",\"text\":\"#fff\"},\"$:/config/DefaultColourMappings/consent-banner-button-hover-foreground\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-button-hover-foreground\",\"text\":\"#009577\"},\"$:/config/DefaultColourMappings/consent-banner-foreground\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-foreground\",\"text\":\"#fff\"},\"$:/config/DefaultColourMappings/consent-banner-hr-background\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-hr-background\",\"text\":\"rgba(255,255,255,.25)\"},\"$:/config/DefaultColourMappings/consent-banner-link-foreground\":{\"title\":\"$:/config/DefaultColourMappings/consent-banner-link-foreground\",\"text\":\"#fff\"},\"$:/config/plugins/tiddlywiki/consent-banner/block-embedded-content\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/block-embedded-content\",\"text\":\"yes\"},\"$:/config/plugins/tiddlywiki/consent-banner/blocked-embed-message\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/blocked-embed-message\",\"text\":\"Blocked embedded content from<br/><a href=<<url>> class=\\\"tc-tiddlylink-external\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"><$text text=<<url>>/></a>\\n\\n<hr/>\\n\\n{{$:/plugins/tiddlywiki/consent-banner/buttons/accept}} cookies to unblock\"},\"$:/config/plugins/tiddlywiki/consent-banner/blocked-raw-message\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/blocked-raw-message\",\"text\":\"<div class=\\\"tc-blocked-embedded-content\\\" style=\\\"width:100%;\\\">\\n\\n<div class=\\\"tc-blocked-embedded-content-inner\\\">\\n\\n<div class=\\\"tc-blocked-embedded-content-inner-inner\\\">\\n\\nBlocked raw content\\n\\n<hr/>\\n\\n{{$:/plugins/tiddlywiki/consent-banner/buttons/accept}} cookies to unblock\\n\\n</div>\\n\\n</div>\\n\\n</div>\\n\"},\"$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/caption\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/caption\",\"text\":\"Accept\"},\"$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/hint\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/hint\",\"text\":\"Accept cookies\"},\"$:/config/plugins/tiddlywiki/consent-banner/buttons/clear/caption\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/buttons/clear/caption\",\"text\":\"Clear\"},\"$:/config/plugins/tiddlywiki/consent-banner/buttons/clear/hint\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/buttons/clear/hint\",\"text\":\"Clear cookies\"},\"$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/caption\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/caption\",\"text\":\"Decline\"},\"$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/hint\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/hint\",\"text\":\"Decline cookies\"},\"$:/config/cookie-consent-required\":{\"title\":\"$:/config/cookie-consent-required\",\"text\":\"yes\"},\"$:/config/plugins/tiddlywiki/consent-banner/greeting-message\":{\"title\":\"$:/config/plugins/tiddlywiki/consent-banner/greeting-message\",\"text\":\"! Our use of cookies\\n\\nWe use necessary cookies to make our site work. We’d also like to set optional analytics to help us improve it. We won’t set optional cookies unless you enable them. Using this tool will set a cookie on your device to remember your preferences.\\n\\n---\\n\\n!! Necessary cookies\\n\\nNecessary cookies enable core functionality such as security, network management, and accessibility. You may disable these by changing your browser settings, but this may affect how the website functions.\\n\\n---\\n\\n!! Analytics cookies\\n\\nWe’d like to set non-essential cookies, such as Google Analytics, to help us to improve our website by collecting and reporting information on how you use it. The cookies collect information in a way that does not directly identify anyone.\\n\\n---\\n\"},\"$:/plugins/tiddlywiki/consent-banner/tv-block-embedded-content\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/tv-block-embedded-content\",\"tags\":\"$:/tags/Macro\",\"text\":\"<$set name=\\\"tv-block-embedded-content\\\" value={{{ [{$:/config/cookie-consent-required}else[no]match[yes]then{$:/state/consent-banner/accepted}!match[yes]then[yes]] }}}/>\\n\"},\"$:/plugins/tiddlywiki/consent-banner/config\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/config\",\"text\":\"! [[Greeting Message|$:/config/plugins/tiddlywiki/consent-banner/greeting-message]]\\n\\n<div style=\\\"\\\">\\n\\n<div style=\\\"display:inline-block;vertical-align:top;width:45%;\\\">\\n\\n<$edit-text tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/greeting-message\\\" tag=\\\"textarea\\\" class=\\\"tc-edit-texteditor\\\"/>\\n\\n</div>\\n\\n<div style=\\\"display:inline-block;vertical-align:top;width:45%;margin:0.5em;border:1px solid black;padding:0.5em;\\\" class=\\\"tc-consent-banner\\\">\\n\\n<$transclude tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/greeting-message\\\" mode=\\\"block\\\"/>\\n\\n</div>\\n\\n</div>\\n\\n! Buttons\\n\\n|[[Accept caption|$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/caption]] |<$edit-text tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/caption\\\" tag=\\\"input\\\"/> |\\n|[[Accept hint|$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/hint]] |<$edit-text tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/hint\\\" tag=\\\"input\\\"/> |\\n|[[Decline caption|$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/caption]] |<$edit-text tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/caption\\\" tag=\\\"input\\\"/> |\\n|[[Decline hint|$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/hint]] |<$edit-text tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/hint\\\" tag=\\\"input\\\"/> |\\n\\n! [[Consent Accepted Status|$:/state/consent-banner/accepted]]\\n\\nCurrent status: {{$:/state/consent-banner/accepted}} (blank indicates that consent has not yet been granted or declined)\\n\\n<$button message=\\\"tm-consent-accept\\\" tooltip={{$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/hint}}>\\n{{$:/config/plugins/tiddlywiki/consent-banner/buttons/accept/caption}}\\n</$button>\\n\\n<$button message=\\\"tm-consent-decline\\\" tooltip={{$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/hint}}>\\n{{$:/config/plugins/tiddlywiki/consent-banner/buttons/decline/caption}}\\n</$button>\\n\\n<$button message=\\\"tm-consent-clear\\\" tooltip={{$:/config/plugins/tiddlywiki/consent-banner/buttons/clear/hint}}>\\n{{$:/config/plugins/tiddlywiki/consent-banner/buttons/clear/caption}}\\n</$button>\\n\\n! Embedded Content Blocking\\n\\n//Requires page reload//\\n\\n<$checkbox tiddler=\\\"$:/config/plugins/tiddlywiki/consent-banner/block-embedded-content\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Block all embedded content such as &lt;iframe>, &lt;embed> and &lt;object> unless consent has been granted</$checkbox>\\n\"},\"$:/plugins/tiddlywiki/consent-banner/docs\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/docs\",\"text\":\"! Features\\n\\nIf the same wiki is opened in multiple tabs then once the warning has been accepted or declined in one tab then the other tabs will autonatically follow suit.\\n\\nConsent is automatically granted if the user logged in (ie the tiddler [[$:/status/IsLoggedIn]] is set to `yes`).\\n\\n! Consent Banner Palette Entries\\n\\nAdd these entries to your current colour palette to change the colours used by the consent banner:\\n\\n* ''consent-banner-backdrop-background'' - the colour of the backdrop behind the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-backdrop-background}})\\n* ''consent-banner-background'' - the background colour of the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-background}})\\n* ''consent-banner-button-background'' - the background colour of buttons within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-background}})\\n* ''consent-banner-button-border'' - the border colour of buttons within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-border}})\\n* ''consent-banner-button-default-background'' - the background colour for the default button within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-default-background}})\\n* ''consent-banner-button-default-foreground'' - the foreground colour for the default button within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-default-foreground}})\\n* ''consent-banner-button-foreground'' - the foreground colour of buttons within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-foreground}})\\n* ''consent-banner-button-hover-background'' - the background colour of hovered buttons within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-hover-background}})\\n* ''consent-banner-button-hover-border'' - the border colour of hovered buttons within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-hover-border}})\\n* ''consent-banner-button-hover-foreground'' - the foreground colour of hovered buttons within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-button-hover-foreground}})\\n* ''consent-banner-foreground'' - the foreground colour of the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-foreground}})\\n* ''consent-banner-hr-background'' - the background colour of horizontal rules within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-hr-background}})\\n* ''consent-banner-link-foreground'' - the foreground colour of tiddler links within the consent banner (defaults to {{$:/config/DefaultColourMappings/consent-banner-link-foreground}})\\n\\n! Embedded Content Blocking\\n\\nUnless disabled via the config tab, content embedded via &lt;iframe>, &lt;embed> or &lt;object> is blocked until the user consents to accept cookies.\\n\\n!! Implementation Details\\n\\nEmbedded content is blocked if the variable `tv-block-embedded-content` is set to `yes`. It is set to the current consent status by a [[global macro|$:/plugins/tiddlywiki/consent-banner/tv-block-embedded-content]]:\\n\\n<$codeblock code={{$:/plugins/tiddlywiki/consent-banner/tv-block-embedded-content}}/>\\n\\n! ~YouTube macro\\n\\nA simple macro for embedding ~YouTube videos is provided to show how to adapt content according to whether consent has been granted. It works by checking the tiddler [[$:/state/consent-banner/accepted]] for the following values:\\n\\n* ''empty or missing'' - the user has yet to accept or decline to give their consent\\n* `yes` - the user has granted consent\\n* `no` - the user has declined consent\\n\\n! Customising banner buttons\\n\\nThe [[\\\"accept\\\"|$:/plugins/tiddlywiki/consent-banner/buttons/accept]] and [[\\\"decline\\\"|$:/plugins/tiddlywiki/consent-banner/buttons/decline]] buttons in the banner are individual tiddlers with the tag [[$:/tags/ConsentBanner/Button]], allowing them to be customised and extended.\\n\\nA common use case is to add a \\\"login\\\" button allowing users to login directly to bypass the banner. This could be implemented as a tiddler tagged [[$:/tags/ConsentBanner/Button]] with the following text:\\n\\n```\\n<$button message=\\\"tm-login\\\" class=\\\"tc-consent-button tc-btn-invisible\\\">\\nLogin\\n</$button>\\n```\\n\\n! Integration with other plugins\\n\\nThird party plugins that set cookies can configure themselves to defer setting cookies until the user grants consent. There are several parts to this mechanism:\\n\\n* The consent-banner plugin includes a shadow tiddler [[$:/config/cookie-consent-required]] with the text `yes`. The third-party plugin should inspect this tiddler at startup; if it is not set to \\\"yes\\\" then it can proceed to set tiddlers immediately\\n* Otherwise, the third-party plugin should listen for changes to the tiddler [[$:/state/consent-banner/accepted]] and only start setting cookies when and if the value changes to \\\"yes\\\"\\n\\nThe [[Google Analytics plugin|https://github.com/Jermolene/TiddlyWiki5/tree/master/plugins/tiddlywiki/googleanalytics]] shows an example of how this mechanism can be implemented.\\n\"},\"$:/core/modules/widgets/raw.js\":{\"title\":\"$:/core/modules/widgets/raw.js\",\"text\":\"/*\\\\\\ntitle: $:/core/modules/widgets/raw.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nAn override of the raw widget that blocks raw content until the user has consented to accept cookies\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar RawWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nRawWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nRawWidget.prototype.render = function(parent,nextSibling) {\\n\\tthis.parentDomNode = parent;\\n\\tthis.execute();\\n\\tthis.blocked = this.getVariable(\\\"tv-block-embedded-content\\\",\\\"no\\\") === \\\"yes\\\";\\n\\tif(this.blocked) {\\n\\t\\tthis.makeChildWidgets([{\\n\\t\\t\\ttype: \\\"transclude\\\",\\n\\t\\t\\tattributes: {\\n\\t\\t\\t\\ttiddler: {type: \\\"string\\\", value: \\\"$:/config/plugins/tiddlywiki/consent-banner/blocked-raw-message\\\"}\\n\\t\\t\\t}\\n\\t\\t}]);\\n\\t\\t// Render child widgets\\n\\t\\tthis.renderChildren(parent,null);\\n\\t} else {\\n\\t\\tvar div = this.document.createElement(\\\"div\\\");\\n\\t\\tdiv.innerHTML=this.parseTreeNode.html;\\n\\t\\tparent.insertBefore(div,nextSibling);\\n\\t\\tthis.domNodes.push(div);\\n\\t}\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nRawWidget.prototype.execute = function() {\\n};\\n\\n/*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\nRawWidget.prototype.refresh = function(changedTiddlers) {\\n\\tif(this.blocked) {\\n\\t\\treturn this.refreshChildren(changedTiddlers);\\n\\t} else {\\n\\t\\treturn false;\\t\\t\\n\\t}\\n};\\n\\nexports.raw = RawWidget;\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/tiddlywiki/consent-banner/readme\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/readme\",\"text\":\"The ''consent-banner'' plugin helps make websites that are compliant with \\\"cookie legislation\\\" such as the [[EU General Data Protection Regulation|https://gdpr.eu/cookies/]].\\nIt presents a banner inviting the user to accept or reject cookies, keeping track of their consent in local storage so that the banner can be hidden on subsequent visits.\\n\\nBy default, content embedded with &lt;iframe>, &lt;embed> and &lt;object> is blocked unless the user consents to accept cookies.\\n\\nConsent status is  available via a configuration tiddler so that it is possible to construct content that behaves differently depending upon whether consent has been granted. As an example, a macro is provided for embedding ~YouTube videos that automatically uses the youtube-nocookie.com variant of video URLs unless the user has accepted cookies.\\n\\nPlease note that using this plugin does not guarantee compliance with any particular legislation. You will need to understand the technical issues specific to your situation, and if necessary seek legal advice.\\n\"},\"$:/plugins/tiddlywiki/consent-banner/startup.js\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/startup.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/tiddlywiki/consent-banner/startup.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nStartup initialisation\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"consent-banner\\\";\\nexports.platforms = [\\\"browser\\\"];\\nexports.after = [\\\"startup\\\"];\\nexports.before = [\\\"render\\\"];\\nexports.synchronous = true;\\n\\nvar CHECK_CONSENT_INTERVAL = 1000, // Milliseconds between checking local storage\\n\\tIS_LOGGED_IN_TITLE = \\\"$:/status/IsLoggedIn\\\",\\n\\tCONSENT_KEY = \\\"COOKIE_CONSENT\\\", // Local storage keyname\\n\\tCONSENT_TITLE = \\\"$:/state/consent-banner/accepted\\\", // \\\"\\\": undeclared, \\\"yes\\\": accepted, \\\"no\\\": declined\\n\\tCONFIG_BLOCK_EMBEDDED_CONTENT_TITLE = \\\"$:/config/plugins/tiddlywiki/consent-banner/block-embedded-content\\\",\\n\\tEMBEDDED_MESSAGE_WRAPPER_TITLE = \\\"$:/plugins/tiddlywiki/consent-banner/blocked-embed-message-wrapper\\\";\\n\\nexports.startup = function() { \\n\\tvar consentState = \\\"\\\",\\n\\t\\tsetConsentStatus = function(state) {\\n\\t\\t\\tif(consentState !== state) {\\n\\t\\t\\t\\tconsentState = state;\\n\\t\\t\\t\\t// Write to local storage\\n\\t\\t\\t\\twindow.localStorage.setItem(CONSENT_KEY,state);\\n\\t\\t\\t\\t// Write to a state tiddler\\n\\t\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler({\\n\\t\\t\\t\\t\\ttitle: CONSENT_TITLE,\\n\\t\\t\\t\\t\\ttext: state\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tcalculateConsentStatus = function() {\\n\\t\\t\\t// Consent is implied for logged in users, otherwise we check local storage\\n\\t\\t\\treturn ($tw.wiki.getTiddlerText(IS_LOGGED_IN_TITLE) === \\\"yes\\\" && \\\"yes\\\") || window.localStorage.getItem(CONSENT_KEY) || \\\"\\\";\\n\\t\\t},\\n\\t\\tcheckConsentStatus = function() {\\n\\t\\t\\tsetConsentStatus(calculateConsentStatus());\\n\\t\\t\\tif(consentState === \\\"\\\") {\\n\\t\\t\\t\\tpollConsentStatus();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tpollConsentStatus = function() {\\n\\t\\t\\tsetTimeout(checkConsentStatus,CHECK_CONSENT_INTERVAL);\\n\\t\\t};\\n\\t// Set the current consent status\\n\\tcheckConsentStatus();\\n\\t// Listen for consent messages\\n\\t$tw.rootWidget.addEventListener(\\\"tm-consent-accept\\\",function(event) {\\n\\t\\tsetConsentStatus(\\\"yes\\\");\\n\\t});\\n\\t$tw.rootWidget.addEventListener(\\\"tm-consent-decline\\\",function(event) {\\n\\t\\tsetConsentStatus(\\\"no\\\");\\n\\t});\\n\\t$tw.rootWidget.addEventListener(\\\"tm-consent-clear\\\",function(event) {\\n\\t\\tsetConsentStatus(\\\"\\\");\\n\\t});\\n\\t// Add our element rendering hook\\n\\tif($tw.wiki.getTiddlerText(CONFIG_BLOCK_EMBEDDED_CONTENT_TITLE,\\\"no\\\") === \\\"yes\\\") {\\n\\t\\t$tw.hooks.addHook(\\\"th-rendering-element\\\",function(parseTreeNodes,widget) {\\n\\t\\t\\tif(parseTreeNodes) {\\n\\t\\t\\t\\treturn parseTreeNodes;\\n\\t\\t\\t}\\n\\t\\t\\tif([\\\"iframe\\\",\\\"object\\\",\\\"embed\\\"].indexOf(widget.tag) !== -1 && widget.getVariable(\\\"tv-block-embedded-content\\\",\\\"no\\\") === \\\"yes\\\") {\\n\\t\\t\\t\\tvar url = widget.getAttribute(\\\"src\\\"),\\n\\t\\t\\t\\t\\taddUnitsIfMissing = function(str) {\\n\\t\\t\\t\\t\\t\\tstr = \\\"\\\" + str;\\n\\t\\t\\t\\t\\t\\treturn str + ((\\\"\\\" + parseInt(str,10)) === str ? \\\"px\\\" : \\\"\\\");\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\twidth = addUnitsIfMissing(widget.getAttribute(\\\"width\\\",\\\"\\\")),\\n\\t\\t\\t\\t\\theight = addUnitsIfMissing(widget.getAttribute(\\\"height\\\",\\\"\\\"));\\n\\t\\t\\t\\treturn [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\ttype: \\\"vars\\\",\\n\\t\\t\\t\\t\\t\\tattributes: {\\n\\t\\t\\t\\t\\t\\t\\turl: {type: \\\"string\\\", value: url},\\n\\t\\t\\t\\t\\t\\t\\twidth: {type: \\\"string\\\", value: width},\\n\\t\\t\\t\\t\\t\\t\\theight: {type: \\\"string\\\", value: height}\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\tchildren: [\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\ttype: \\\"transclude\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\tattributes: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttiddler: {type: \\\"string\\\", value: EMBEDDED_MESSAGE_WRAPPER_TITLE},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmode: {type: \\\"string\\\", value: \\\"inline\\\"}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t];\\n\\t\\t\\t}\\n\\t\\t\\treturn null;\\n\\t\\t});\\n\\t}\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/tiddlywiki/consent-banner/styles\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/styles\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\".tc-consent-backdrop {\\n\\tz-index: 1999;\\n\\tposition: fixed;\\n\\tleft: 0;\\n\\tright: 0;\\n\\ttop: 0;\\n\\tbottom: 0;\\n\\tbackground: <<colour consent-banner-backdrop-background>>;\\n}\\n\\n.tc-consent-banner-left {\\n\\tz-index: 2000;\\n\\tposition: fixed;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tbottom: 0;\\n\\tmax-width: 500px;\\n\\toverflow-y: auto;\\n}\\n\\n.tc-consent-banner {\\n\\tpadding: 1em;\\n\\tbackground: <<colour consent-banner-background>>;\\n\\tcolor: <<colour consent-banner-foreground>>;\\n\\tbox-shadow: 0 0 20px rgba(0,0,0,.2);\\n}\\n\\n.tc-consent-banner a.tc-tiddlylink-external {\\n\\ttext-decoration: underline;\\n\\tcolor: <<colour consent-banner-link-foreground>>;\\n\\tbackground-color: inherit;\\n}\\n\\n.tc-consent-banner a.tc-tiddlylink-external:visited {\\n\\tcolor: <<colour consent-banner-link-foreground>>;\\n\\tbackground-color: inherit;\\n}\\n\\n.tc-consent-banner hr {\\n\\tclear: both;\\n\\tpadding: 0;\\n\\twidth: 100%;\\n\\toverflow: hidden;\\n\\ttext-align: left;\\n\\tborder: 0 none;\\n\\tmargin: 24px 0;\\n\\theight: 1px;\\n\\tmax-height: 1px;\\n\\tbackground: <<colour consent-banner-hr-background>>;\\n}\\n\\n.tc-consent-buttons {\\n\\t\\n}\\n\\n.tc-consent-banner .tc-consent-button {\\n\\tmargin-right: 1em;\\n}\\n\\n.tc-consent-button {\\n\\tborder: 1px solid <<colour consent-banner-button-border>>;\\n\\tmargin-top: 1em;\\n\\tpadding: 0.75em 1.5em;\\n\\tcolor: <<colour consent-banner-button-foreground>>;\\n\\tbackground: <<colour consent-banner-button-background>>;\\n\\tfont-weight: bold;\\n}\\n\\n.tc-consent-button:hover {\\n\\tcolor: <<colour consent-banner-button-hover-foreground>>;\\n\\tborder-color: <<colour consent-banner-button-hover-border>>;\\n\\tbackground: <<colour consent-banner-button-hover-background>>;\\n\\topacity: .6;\\n}\\n\\n.tc-consent-button-default {\\n\\tcolor: <<colour consent-banner-button-default-foreground>>;\\n\\tbackground: <<colour consent-banner-button-default-background>>;\\n}\\n\\n.tc-blocked-embedded-content {\\n\\tdisplay: inline-block;\\n\\toverflow: hidden;\\n\\tcolor: <<colour background>>;\\n\\tbackground: <<colour muted-foreground>>;\\n\\tborder: 1px solid <<colour foreground>>;\\n\\t<<box-shadow \\\"inset 0 0 8px rgba(0, 0, 0, 0.15)\\\">>\\n}\\n\\n.tc-blocked-embedded-content-inner {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.tc-blocked-embedded-content-inner-inner {\\n\\tdisplay: inline-block;\\n\\ttext-align: center;\\n}\\n\\n.tc-blocked-embedded-content-inner-inner hr {\\n    background: <<colour foreground>>;\\n    height: 1px;\\n    width: 80%;\\n    border: none;\\n}\\n\"},\"$:/plugins/tiddlywiki/consent-banner/youtube\":{\"title\":\"$:/plugins/tiddlywiki/consent-banner/youtube\",\"tags\":\"$:/tags/Macro\",\"text\":\"\\\\define embed-video-with-consent(code)\\n<$set name=\\\"tv-block-embedded-content\\\" value=\\\"no\\\">\\n<$reveal state=\\\"$:/state/consent-banner/accepted\\\" type=\\\"match\\\" text=\\\"yes\\\" tag=\\\"div\\\">\\n<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/$code$\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>\\n</$reveal>\\n<$reveal state=\\\"$:/state/consent-banner/accepted\\\" type=\\\"nomatch\\\" text=\\\"yes\\\" tag=\\\"div\\\">\\n<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube-nocookie.com/embed/$code$\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>\\n</$reveal>\\n</$set>\\n\\\\end\\n\\n! Macro source\\n\\n<$codeblock code={{$:/plugins/tiddlywiki/consent-banner/youtube}}/>\\n\\n! Example\\n\\n<<embed-video-with-consent KtCUr83XgyE>>\\n\"}}}","author":"tiddlywiki"}