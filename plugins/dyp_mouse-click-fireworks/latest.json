{"created":"20250514081132530","title":"$:/plugins/dyp/mouse-click-fireworks","stability":"STABILITY_2_STABLE","tags":"","modified":"20250514081341408","version":"0.0.1","name":"mouse-click-fireworks","description":"博客园鼠标点击烟花特效","author":"dyp","list":"readme usage","source":"https://github.com/dyp1121054136/dyp-plugins-library","packaged-by":"Gatha on 14th 五月 2025, 16:13:48","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"博客园鼠标点击烟花特效-mouse-click\":{\"title\":\"博客园鼠标点击烟花特效-mouse-click\",\"code-body\":\"yes\",\"created\":\"20250514073326106\",\"modified\":\"20250514074252584\",\"tags\":\"$:/tags/RawMarkup\",\"text\":\"<html>\\n<body>\\n<canvas width=\\\"1777\\\" height=\\\"841\\\" style=\\\"position: fixed; left: 0px; top: 0px; z-index: 2147483647; pointer-events: none;\\\"></canvas>\\n\\n<script>\\nclass Circle {\\n  constructor({ origin, speed, color, angle, context }) {\\n    this.origin = origin\\n    this.position = { ...this.origin }\\n    this.color = color\\n    this.speed = speed\\n    this.angle = angle\\n    this.context = context\\n    this.renderCount = 0\\n  }\\n\\n  draw() {\\n    this.context.fillStyle = this.color\\n    this.context.beginPath()\\n    this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)\\n    this.context.fill()\\n  }\\n\\n  move() {\\n    this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x\\n    this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)\\n    this.renderCount++\\n  }\\n}\\n\\nclass Boom {\\n  constructor ({ origin, context, circleCount = 10, area }) {\\n    this.origin = origin\\n    this.context = context\\n    this.circleCount = circleCount\\n    this.area = area\\n    this.stop = false\\n    this.circles = []\\n  }\\n\\n  randomArray(range) {\\n    const length = range.length\\n    const randomIndex = Math.floor(length * Math.random())\\n    return range[randomIndex]\\n  }\\n\\n  randomColor() {\\n    const range = ['8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\\n    return '#' + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)\\n  }\\n\\n  randomRange(start, end) {\\n    return (end - start) * Math.random() + start\\n  }\\n\\n  init() {\\n    for(let i = 0; i < this.circleCount; i++) {\\n      const circle = new Circle({\\n        context: this.context,\\n        origin: this.origin,\\n        color: this.randomColor(),\\n        angle: this.randomRange(Math.PI - 1, Math.PI + 1),\\n        speed: this.randomRange(1, 6)\\n      })\\n      this.circles.push(circle)\\n    }\\n  }\\n\\n  move() {\\n    this.circles.forEach((circle, index) => {\\n      if (circle.position.x > this.area.width || circle.position.y > this.area.height) {\\n        return this.circles.splice(index, 1)\\n      }\\n      circle.move()\\n    })\\n    if (this.circles.length == 0) {\\n      this.stop = true\\n    }\\n  }\\n\\n  draw() {\\n    this.circles.forEach(circle => circle.draw())\\n  }\\n}\\n\\nclass CursorSpecialEffects {\\n  constructor() {\\n    this.computerCanvas = document.createElement('canvas')\\n    this.renderCanvas = document.createElement('canvas')\\n\\n    this.computerContext = this.computerCanvas.getContext('2d')\\n    this.renderContext = this.renderCanvas.getContext('2d')\\n\\n    this.globalWidth = window.innerWidth\\n    this.globalHeight = window.innerHeight\\n\\n    this.booms = []\\n    this.running = false\\n  }\\n\\n  handleMouseDown(e) {\\n    const boom = new Boom({\\n      origin: { x: e.clientX, y: e.clientY },\\n      context: this.computerContext,\\n      area: {\\n        width: this.globalWidth,\\n        height: this.globalHeight\\n      }\\n    })\\n    boom.init()\\n    this.booms.push(boom)\\n    this.running || this.run()\\n  }\\n\\n  handlePageHide() {\\n    this.booms = []\\n    this.running = false\\n  }\\n\\n  init() {\\n    const style = this.renderCanvas.style\\n    style.position = 'fixed'\\n    style.top = style.left = 0\\n    style.zIndex = '999999999999999999999999999999999999999999'\\n    style.pointerEvents = 'none'\\n\\n    style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth\\n    style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight\\n\\n    document.body.append(this.renderCanvas)\\n\\n    window.addEventListener('mousedown', this.handleMouseDown.bind(this))\\n    window.addEventListener('pagehide', this.handlePageHide.bind(this))\\n  }\\n\\n  run() {\\n    this.running = true\\n    if (this.booms.length == 0) {\\n      return this.running = false\\n    }\\n\\n    requestAnimationFrame(this.run.bind(this))\\n\\n    this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\\n    this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\\n\\n    this.booms.forEach((boom, index) => {\\n      if (boom.stop) {\\n        return this.booms.splice(index, 1)\\n      }\\n      boom.move()\\n      boom.draw()\\n    })\\n    this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)\\n  }\\n}\\n\\nconst cursorSpecialEffects = new CursorSpecialEffects()\\ncursorSpecialEffects.init()\\n</script>\\n</body>\\n</html>\"},\"$:/plugins/dyp/mouse-click-fireworks/readme\":{\"title\":\"$:/plugins/dyp/mouse-click-fireworks/readme\",\"created\":\"20250514081255375\",\"modified\":\"20250514081304775\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"; 博客园鼠标点击烟花特效\"},\"$:/plugins/dyp/mouse-click-fireworks/usage\":{\"title\":\"$:/plugins/dyp/mouse-click-fireworks/usage\",\"created\":\"20250514081307251\",\"modified\":\"20250514081314809\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\"}}}"}