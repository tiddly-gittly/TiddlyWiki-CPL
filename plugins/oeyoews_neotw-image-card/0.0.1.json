{"title":"$:/plugins/oeyoews/neotw-image-card","description":"neotw-image-card","author":"oeyoews","version":"0.0.1","core-version":">=5.3.4","type":"application/json","plugin-type":"plugin","name":"neotw-image-card","meat#disabled":"yes","qrcode":"yes","created":"2025/02/16","dependents":"","stability":"STABILITY_2_STABLE","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-image-card/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-image-card/readme\",\"description\":\"neotw-image-card\",\"text\":\"[[在线文档|https://tiddlywiki-starter-kit.oeyoews.top/docs/plugins/neotw-image-card]]\"},\"$:/plugins/oeyoews/neotw-image-card/widget.js\":{\"title\":\"$:/plugins/oeyoews/neotw-image-card/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-image-card/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nneotw-image-card widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass NeotwImageCardWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n\\n    this.computeAttributes();\\n    this.execute();\\n    const ssr = this.document.isTiddlyWikiFakeDom;\\n    if (ssr) return;\\n\\n    const createElement = $tw.utils.domMaker;\\n\\n    // 获取 src 属性\\n    const src = this.getAttribute('src');\\n    const width = this.getAttribute('width') || 'auto';\\n\\n    // 创建拖放区域\\n    const dropZone = createElement('div', {\\n      class:\\n        'border-2 border-dashed border-gray-300 rounded-lg p-4 text-center cursor-pointer hover:border-blue-500 transition-colors',\\n      text: '拖放图片到这里或点击上传',\\n    });\\n\\n    // 创建预览区域\\n    const previewCanvas = createElement('canvas', {\\n      class: 'w-full h-auto hidden',\\n    });\\n\\n    // 创建复制按钮\\n    const copyBtn = createElement('button', {\\n      class:\\n        'mt-2 px-4 py-2 bg-blue-500 text-white rounded-sm hover:bg-blue-600 hidden',\\n      text: '复制图片',\\n    });\\n\\n    const domNode = createElement('div', {\\n      children: [dropZone, previewCanvas, copyBtn],\\n    });\\n\\n    // 处理文件拖放和点击上传\\n    const handleImage = (input) => {\\n      if (typeof input === 'string') {\\n        // 处理在线图片 URL\\n        const img = new Image();\\n        img.crossOrigin = 'anonymous';\\n        img.onload = () => {\\n          const canvas = previewCanvas;\\n          const ctx = canvas.getContext('2d');\\n\\n          // 设置画布尺寸\\n          const padding = 80;\\n          canvas.width = img.width + 2 * padding;\\n          canvas.height = img.height + 2 * padding;\\n\\n          // 创建渐变背景\\n          const gradient = ctx.createLinearGradient(\\n            0,\\n            0,\\n            canvas.width,\\n            canvas.height,\\n          );\\n          gradient.addColorStop(0, '#aee3ff');\\n          gradient.addColorStop(1, '#cefdb6');\\n\\n          // 绘制渐变背景\\n          ctx.fillStyle = gradient;\\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\\n\\n          // 计算居中位置\\n          const x = (canvas.width - img.width) / 2;\\n          const y = (canvas.height - img.height) / 2;\\n\\n          // 创建圆角裁剪路径\\n          ctx.beginPath();\\n          const radius = 20;\\n          ctx.moveTo(x + radius, y);\\n          ctx.lineTo(x + img.width - radius, y);\\n          ctx.arcTo(x + img.width, y, x + img.width, y + radius, radius);\\n          ctx.lineTo(x + img.width, y + img.height - radius);\\n          ctx.arcTo(\\n            x + img.width,\\n            y + img.height,\\n            x + img.width - radius,\\n            y + img.height,\\n            radius,\\n          );\\n          ctx.lineTo(x + radius, y + img.height);\\n          ctx.arcTo(x, y + img.height, x, y + img.height - radius, radius);\\n          ctx.lineTo(x, y + radius);\\n          ctx.arcTo(x, y, x + radius, y, radius);\\n          ctx.closePath();\\n          ctx.clip();\\n\\n          // 绘制图片在居中位置\\n          ctx.drawImage(img, x, y);\\n\\n          // 显示画布和复制按钮\\n          previewCanvas.classList.remove('hidden');\\n          copyBtn.classList.remove('hidden');\\n          dropZone.classList.add('hidden');\\n        };\\n        img.onerror = () => {\\n          console.error('图片加载失败:', input);\\n        };\\n        img.src = input;\\n        // img.width = width;\\n      } else {\\n        // 原有的文件处理逻辑\\n        const reader = new FileReader();\\n        reader.onload = (e) => {\\n          const img = new Image();\\n          img.style.borderRadius = '20px';\\n          img.onload = () => {\\n            const canvas = previewCanvas;\\n            const ctx = canvas.getContext('2d');\\n\\n            // 设置画布尺寸\\n            const padding = 80;\\n            canvas.width = img.width + 2 * padding;\\n            canvas.height = img.height + 2 * padding;\\n\\n            // 创建渐变背景\\n            const gradient = ctx.createLinearGradient(\\n              0,\\n              0,\\n              canvas.width,\\n              canvas.height,\\n            );\\n            gradient.addColorStop(0, '#aee3ff');\\n            gradient.addColorStop(1, '#cefdb6');\\n\\n            // 绘制渐变背景\\n            ctx.fillStyle = gradient;\\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\\n\\n            // 计算居中位置\\n            const x = (canvas.width - img.width) / 2;\\n            const y = (canvas.height - img.height) / 2;\\n\\n            // 创建圆角裁剪路径\\n            ctx.beginPath();\\n            const radius = 20; // 圆角半径\\n            ctx.moveTo(x + radius, y);\\n            ctx.lineTo(x + img.width - radius, y);\\n            ctx.arcTo(x + img.width, y, x + img.width, y + radius, radius);\\n            ctx.lineTo(x + img.width, y + img.height - radius);\\n            ctx.arcTo(\\n              x + img.width,\\n              y + img.height,\\n              x + img.width - radius,\\n              y + img.height,\\n              radius,\\n            );\\n            ctx.lineTo(x + radius, y + img.height);\\n            ctx.arcTo(x, y + img.height, x, y + img.height - radius, radius);\\n            ctx.lineTo(x, y + radius);\\n            ctx.arcTo(x, y, x + radius, y, radius);\\n            ctx.closePath();\\n            ctx.clip();\\n\\n            // 绘制图片在居中位置\\n            ctx.drawImage(img, x, y);\\n\\n            // 显示画布和复制按钮\\n            previewCanvas.classList.remove('hidden');\\n            copyBtn.classList.remove('hidden');\\n          };\\n          img.src = e.target.result;\\n        };\\n        reader.readAsDataURL(input); // 修改这里，使用 input 而不是 file\\n      }\\n    };\\n\\n    // 如果提供了 src，自动加载图片\\n    if (src) {\\n      handleImage(src);\\n      dropZone.classList.add('hidden');\\n    }\\n\\n    // 处理拖放事件\\n    dropZone.addEventListener('dragover', (e) => {\\n      e.preventDefault();\\n      dropZone.classList.add('border-blue-500');\\n    });\\n\\n    dropZone.addEventListener('dragleave', () => {\\n      dropZone.classList.remove('border-blue-500');\\n    });\\n\\n    dropZone.addEventListener('drop', (e) => {\\n      e.preventDefault();\\n      dropZone.classList.remove('border-blue-500');\\n      const file = e.dataTransfer.files[0];\\n      if (file && file.type.startsWith('image/')) {\\n        handleImage(file);\\n      }\\n    });\\n\\n    // 处理点击上传\\n    dropZone.addEventListener('click', () => {\\n      const input = createElement('input', {\\n        attributes: {\\n          type: 'file',\\n          accept: 'image/*',\\n          style: 'display: none',\\n        },\\n      });\\n      input.addEventListener('change', (e) => {\\n        if (e.target.files[0]) {\\n          handleImage(e.target.files[0]);\\n        }\\n      });\\n      input.click();\\n    });\\n\\n    // 处理复制功能\\n    copyBtn.addEventListener('click', () => {\\n      previewCanvas.toBlob(\\n        (blob) => {\\n          const item = new ClipboardItem({ 'image/png': blob });\\n          console.log(item, blob);\\n          // const link = document.createElement('a');\\n          // link.download = 'image-card.png';\\n          // link.href = previewCanvas.toDataURL('image/png');\\n          // link.click();\\n          navigator.clipboard\\n            .write([item])\\n            .then(() => {\\n              alert('图片已复制到剪贴板！');\\n            })\\n            .catch((err) => {\\n              console.error('复制失败:', err);\\n              // 提供备选下载方案\\n              const link = document.createElement('a');\\n              link.download = 'image-card.png';\\n              link.href = previewCanvas.toDataURL('image/png');\\n              link.click();\\n            });\\n        },\\n        'image/png',\\n        1.0,\\n      ); // 使用最高质量的 PNG 格式\\n    });\\n\\n    parent.insertBefore(domNode, nextSibling);\\n    this.domNodes.push(domNode);\\n  }\\n}\\n\\n/** @description neotw-image-card widget */\\nexports['neotw-image-card'] = NeotwImageCardWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}