{"title":"$:/plugins/oeyoews/vue-friendly-link","description":"vue-friendly-link","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"vue-friendly-link","meat#disabled":"yes","qrcode":"yes","created":"2024-03-07","dependents":"","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/vue-friendly-link/readme\":{\"title\":\"$:/plugins/oeyoews/vue-friendly-link/readme\",\"text\":\"<!-- plugin template readme -->\\n\\n## Motivation\\n\\n<!-- your plugin motivation, or why you write this plugin -->\\n\",\"type\":\"text/markdown\",\"description\":\"vue-friendly-link\"},\"$:/plugins/oeyoews/vue-friendly-link/app.js\":{\"title\":\"$:/plugins/oeyoews/vue-friendly-link/app.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/vue-friendly-link/app.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\nconst{watch:t,watchEffect:e,onMounted:o,toRaw:s,computed:d,ref:i}=window.Vue,n=()=>{let t=$tw.wiki.getTiddlerText(\\\"$:/plugins/oeyoews/neotw-vue-todo/todo.vue\\\").trim();return t.startsWith(\\\"<template>\\\")&&t.endsWith(\\\"</template>\\\")&&(t=t.slice(10,-11)),t};module.exports=(t=\\\"friendly-links.json\\\")=>({setup:()=>({}),methods:{},template:n()});\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/vue-friendly-link/widget.js\":{\"title\":\"$:/plugins/oeyoews/vue-friendly-link/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/vue-friendly-link/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nvue-friendly-link widget\\n\\n\\\\*/\\nconst{widget:e}=require(\\\"$:/core/modules/widgets/widget.js\\\");exports[\\\"vue-friendly-link\\\"]=class extends e{constructor(e,r){super(e,r)}render(e,r){if(!$tw.browser)return;if(this.computeAttributes(),this.execute(),this.document.isTiddlyWikiFakeDom)return;const t=(0,$tw.utils.domMaker)(\\\"div\\\");window.Vue||(window.Vue=require(\\\"$:/plugins/oeyoews/neotw-vue3/vue.global.prod.js\\\"));const{createApp:o}=window.Vue,{json:s}=this.attributes,i=require(\\\"./app.js\\\");try{const n=o(i(s));n.config.errorHandler=e=>{const r=`[Vue3](${n.version}): `+e;console.error(r),t.textContent=r,t.style.color=\\\"red\\\"},n.mount(t),e.insertBefore(t,r),this.domNodes.push(t)}catch(e){console.error(e.message)}}refresh(){return!1}};\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/oeyoews/vue-friendly-link/widget.vue\":{\"title\":\"$:/plugins/oeyoews/vue-friendly-link/widget.vue\",\"text\":\"<template>\\n  <div>\\n    <div v-for=\\\"link in links\\\" :key=\\\"link.id\\\" class=\\\"link-card\\\">\\n      <h3>{{ link.name }}</h3>\\n      <p>{{ link.url }}</p>\\n      <button @click=\\\"editLink(link.id)\\\">Edit</button>\\n      <button @click=\\\"deleteLink(link.id)\\\">Delete</button>\\n    </div>\\n    <div class=\\\"form\\\">\\n      <input v-model=\\\"form.name\\\" placeholder=\\\"Link Name\\\" />\\n      <input v-model=\\\"form.url\\\" placeholder=\\\"Link URL\\\" />\\n      <button @click=\\\"saveLink\\\">Save</button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      links: [],\\n      form: {\\n        id: null,\\n        name: '',\\n        url: ''\\n      }\\n    };\\n  },\\n  methods: {\\n    loadLinks() {\\n      // Suppose \\\"fetchLinks\\\" is a method to get links from a backend\\n      this.fetchLinks().then((links) => {\\n        this.links = links;\\n      });\\n    },\\n    fetchLinks() {\\n      // This should be replaced with an actual API call\\n      return Promise.resolve([\\n        { id: 1, name: 'Link 1', url: 'http://example.com' },\\n        { id: 2, name: 'Link 2', url: 'http://example.net' }\\n      ]);\\n    },\\n    saveLink() {\\n      if (this.form.id === null) {\\n        // Add new link logic here\\n        alert('Adding link...');\\n      } else {\\n        // Update existing link logic here\\n        alert('Updating link...');\\n      }\\n      // Reset form after save\\n      this.resetForm();\\n    },\\n    editLink(id) {\\n      const link = this.links.find((link) => link.id === id);\\n      this.form = { ...link }; // Copy the link data to the form\\n    },\\n    deleteLink(id) {\\n      // Delete link logic here\\n      alert('Deleting link...');\\n      this.loadLinks(); // Reload links to reflect changes\\n    },\\n    resetForm() {\\n      this.form = { id: null, name: '', url: '' };\\n    }\\n  },\\n  mounted() {\\n    this.loadLinks();\\n  }\\n};\\n</script>\\n\",\"type\":\".vue\"}}}"}