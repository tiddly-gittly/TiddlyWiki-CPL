{"title":"$:/plugins/oeyoews/tiddlywiki-full-text-search","description":"tiddlywiki-full-text-search","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"tiddlywiki-full-text-search","meat#disabled":"yes","qrcode":"yes","created":"2024-01-26","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/tiddlywiki-full-text-search/readme\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-full-text-search/readme\",\"text\":\"<!-- plugin template readme -->\\n\\nWIP\\n\\n## TODO\\n\\n* use minisearch rewrite directly.\\n\\n## Motivation\\n\\n* 原插件没有加上节流和缓存机制，100% 会导致搜索过程中页面卡死\\n\\n<!-- your plugin motivation, or why you write this plugin -->\\n\\n## Credit\\n\\n* https://github.com/danielo515/TW5-contextPlugin\\n\",\"type\":\"text/markdown\",\"description\":\"tiddlywiki-full-text-search\"},\"$:/plugins/oeyoews/full-text-search/ContextSearch\":{\"title\":\"$:/plugins/oeyoews/full-text-search/ContextSearch\",\"tags\":\"$:/tags/AdvancedSearch\",\"caption\":\"FullTextSearch\",\"text\":\"\\\\define lingo-base() $:/language/Search/\\n\\n\\\\define cancel-search-actions() <$list filter=\\\"[{$:/temp/advancedsearch}!match{$:/temp/advancedsearch/input}]\\\" emptyMessage=\\\"\\\"\\\"<$action-deletetiddler $filter=\\\"[[$:/temp/advancedsearch]] [[$:/temp/advancedsearch/input]] [[$:/temp/advancedsearch/selected-item]]\\\" />\\\"\\\"\\\"><$action-setfield $tiddler=\\\"$:/temp/advancedsearch/input\\\" text={{$:/temp/advancedsearch}}/><$action-setfield $tiddler=\\\"$:/temp/advancedsearch/refresh\\\" text=\\\"yes\\\"/></$list><$action-sendmessage $message=\\\"tm-focus-selector\\\" $param=\\\"\\\"\\\".tc-advanced-search input\\\"\\\"\\\"/>\\n\\n<$linkcatcher to=\\\"$:/temp/advancedsearch\\\">\\n\\n<<lingo Standard/Hint>>\\n\\n<div class=\\\"tc-search\\\">\\n<$keyboard key=\\\"((input-tab-right))\\\" actions=<<set-next-input-tab>>>\\n<$keyboard key=\\\"((input-tab-left))\\\" actions=<<set-next-input-tab \\\"before\\\">>>\\n<$macrocall $name=\\\"keyboard-driven-input\\\" tiddler=\\\"$:/temp/advancedsearch/input\\\" storeTitle=\\\"$:/temp/advancedsearch\\\"\\n\\t\\trefreshTitle=\\\"$:/temp/advancedsearch/refresh\\\" selectionStateTitle=\\\"$:/temp/advancedsearch/selected-item\\\"\\n\\t\\ttype=\\\"search\\\" tag=\\\"input\\\" focus={{$:/config/Search/AutoFocus}} configTiddlerFilter=\\\"[[$:/core/ui/AdvancedSearch/System]]\\\"\\n\\t\\tinputCancelActions=<<cancel-search-actions>> inputAcceptActions=<<input-accept-actions>>\\n\\t\\tinputAcceptVariantActions=<<input-accept-variant-actions>> filterMinLength={{$:/config/Search/MinLength}}/>\\n</$keyboard>\\n</$keyboard>\\n<$reveal state=\\\"$:/temp/advancedsearch\\\" type=\\\"nomatch\\\" text=\\\"\\\">\\n<$button class=\\\"tc-btn-invisible\\\">\\n<<cancel-search-actions>>\\n{{$:/core/images/close-button}}\\n</$button>\\n</$reveal>\\n</div>\\n\\n</$linkcatcher>\\n\\n<$reveal state=\\\"$:/temp/advancedsearch\\\" type=\\\"nomatch\\\" text=\\\"\\\">\\n\\n<$set name=\\\"resultCount\\\" value=\\\"\\\"\\\"<$count filter=\\\"[!is[system]search{$:/temp/advancedsearch}] \\\"/>\\\"\\\"\\\">\\n\\n<div class=\\\"tw-search-results\\\">\\n\\n<<lingo Standard/Matches>>\\n\\n<!-- NOTE: this is main performance -->\\n<$list filter=\\\"[!is[system]search{$:/temp/advancedsearch}sort[title]limit[250]]\\\">\\n{{!!title||$:/core/ui/ListItemTemplate}}\\n<$fulltextSearch term={{$:/temp/advancedsearch}}/>\\n</$list>\\n\\n</div>\\n\\n</$set>\\n\\n</$reveal>\\n\\n<$reveal state=\\\"$:/temp/advancedsearch\\\" type=\\\"match\\\" text=\\\"\\\">\\n\\n</$reveal>\"},\"$:/plugins/oeyoews/tiddlywiki-full-text-search/widget.js\":{\"title\":\"$:/plugins/oeyoews/tiddlywiki-full-text-search/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/tiddlywiki-full-text-search/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\ntiddlywiki-full-text-search widget\\n\\n\\\\*/\\nconst{widget:e}=require(\\\"$:/core/modules/widgets/widget.js\\\");exports.fulltextSearch=class extends e{constructor(e,t){super(e,t)}render(e,t){if($tw.browser&&(this.computeAttributes(),this.execute(),!e.isTiddlyWikiFakeDom&&this.term&&this.term.length>=Number(this.minTermLength))){this.createRegexp();const i=this.executeRegexp();i.length>0&&(this.domNode=this.document.createElement(this.element),this.domNode.className=\\\"tw-context\\\",this.composeResults(i),e.insertBefore(this.domNode,t),this.renderChildren(this.domNode,null),this.domNodes.push(this.domNode))}}searchBar(){const e=this.document.createElement(\\\"form\\\"),t=this.document.createElement(\\\"input\\\");return t.textContent=$tw.wiki.getTiddlerText(\\\"$:/temp/advancedsearch\\\"),e.append(t),e}execute(){this.matchedClass=this.getAttribute(\\\"matchClass\\\",\\\"matched\\\"),this.minTermLength=this.getAttribute(\\\"min-term-length\\\",\\\"3\\\"),this.tiddler=this.getAttribute(\\\"tiddler\\\",this.getVariable(\\\"currentTiddler\\\")),this.term=this.getAttribute(\\\"term\\\",this.getAttribute(\\\"searchTerm\\\")),this.contextLength=this.getAttribute(\\\"length\\\",\\\"50\\\"),this.before=this.getAttribute(\\\"before\\\",this.contextLength),this.after=this.getAttribute(\\\"after\\\",this.contextLength),this.maxMatches=this.getAttribute(\\\"maxMatches\\\",\\\"10\\\"),this.element=this.getAttribute(\\\"element\\\",\\\"pre\\\"),this.makeChildWidgets()}createRegexp(){var e=(e=\\\"(\\\\\\\\w+[\\\\\\\\s\\\\\\\\S]{0,#before#})?(#term#)([\\\\\\\\s\\\\\\\\S]{0,#after#}\\\\\\\\w+)?\\\").replace(\\\"#before#\\\",this.before).replace(\\\"#term#\\\",$tw.utils.escapeRegExp(this.term)).replace(\\\"#after#\\\",this.after);this.regexp=new RegExp(e,\\\"ig\\\")}executeRegexp(){const e=this.wiki.getTiddlerText(this.tiddler);let t=[];const i=[];for(;(t=this.regexp.exec(e))&&i.length<Number(this.maxMatches);)i.push(t);return i}composeResults(e){const t=this,i=this.domNode,s=n(\\\"...\\\\n\\\"),r=o(this.term);for(let t=0;t<e.length;t++)h(e[t]);function h(e){0!==e.index&&i.appendChild(s.cloneNode(!0));for(let s=1;s<e.length;s++)e[s]&&(e[s].toLowerCase()==t.term.toLowerCase()?i.appendChild(e[s]==t.term?r.cloneNode(!0):o(e[s])):i.appendChild(n(e[s])));e.index+e[0].length<e.input.length&&i.appendChild(s.cloneNode(!0))}function n(e){return t.document.createTextNode(e)}function o(e){const i=t.document.createElement(\\\"span\\\");return i.appendChild(n(e)),i.className=t.matchedClass,i}}refresh(e){return!1}debounce(e,t=400){let i=null;return function(...s){i&&clearTimeout(i),i=setTimeout((()=>{e(...s)}),t)}}};\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}