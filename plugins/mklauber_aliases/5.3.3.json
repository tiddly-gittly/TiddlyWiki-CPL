{"title":"$:/plugins/mklauber/aliases","description":"Aliases - Alias Manager","author":"Matthew Lauber","version":"5.3.3","core-version":">=5.3.2","plugin-type":"plugin","list":"","source":"https://github.com/mklauber/tiddly-aliases","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/mklauber/aliases/footer\":{\"title\":\"$:/plugins/mklauber/aliases/footer\",\"tags\":\"$:/tags/ViewTemplate\",\"text\":\"<$list filter=\\\"[all[shadows+tiddlers]contains:aliases{!!title}first[]]\\\" variable=\\\"\\\">\\nYou may have meant one of the following pages\\n<$list filter=\\\"[all[shadows+tiddlers]contains:aliases{!!title}]\\\">\\n<li><$link>{{!!title}}</$link></li>\\n</$list>\\n</$list>\\n\"},\"$:/plugins/mklauber/aliases/link.js\":{\"title\":\"$:/plugins/mklauber/aliases/link.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/mklauber/aliases/link.js\\ntype: application/javascript\\nmodule-type: widget-subclass\\n\\nWidget base class\\n\\n\\\\*/\\n(function(){\\n\\n\\t/*jslint node: true, browser: true */\\n\\t/*global $tw: false */\\n\\t\\\"use strict\\\";\\n\\n\\texports.baseClass = \\\"link\\\";\\n\\n\\texports.constructor = function(parseTreeNode,options) {\\n\\t\\tthis.initialise(parseTreeNode,options);\\n\\t};\\n\\n\\texports.prototype = {};\\n\\n\\texports.prototype.dispatchEvent = function(event) {\\n\\t\\t// Add the followAliases flag to the event.\\n\\t\\tevent['followAliases'] = this.followAliases;\\n\\n\\t\\tObject.getPrototypeOf(Object.getPrototypeOf(this)).dispatchEvent.call(this, event);\\n\\t};\\n\\n\\texports.prototype.execute = function() {\\n\\t\\t// Call the base class handleChangeEvent function\\n\\t\\tObject.getPrototypeOf(Object.getPrototypeOf(this)).execute.call(this);\\n\\n\\t\\tthis.followAliases = this.getAttribute(\\\"followAliases\\\", \\\"true\\\");\\n\\t\\tthis.isMissing = !this.wiki.tiddlerExists(this.to) && !(this.wiki.filterTiddlers(\\\"[title[\\\"+this.to+\\\"]listed[aliases]]\\\").length === 1);\\n\\t};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget-subclass\"},\"$:/plugins/mklauber/aliases/navigator.js\":{\"title\":\"$:/plugins/mklauber/aliases/navigator.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/mklauber/aliases/navigator.js\\ntype: application/javascript\\nmodule-type: widget-subclass\\n\\nWidget base class\\n\\n\\\\*/\\n(function(){\\n\\n\\t/*jslint node: true, browser: true */\\n\\t/*global $tw: false */\\n\\t\\\"use strict\\\";\\n\\n\\texports.baseClass = \\\"navigator\\\";\\n\\n\\texports.constructor = function(parseTreeNode,options) {\\n\\t\\tthis.initialise(parseTreeNode,options);\\n\\t};\\n\\n\\texports.prototype = {};\\n\\n\\texports.prototype.handleNavigateEvent = function(event) {\\n\\t\\tevent = $tw.hooks.invokeHook(\\\"th-navigating\\\",event);\\n\\t\\tif(event.navigateTo) {\\n\\t\\t\\tif (!this.wiki.tiddlerExists(event.navigateTo) && event.followAliases == \\\"true\\\") {\\n\\t\\t\\t\\tvar aliases = this.wiki.filterTiddlers(\\\"[title[\\\"+event.navigateTo+\\\"]listed[aliases]]\\\")\\n\\t\\t\\t\\tif (aliases.length === 1) {\\n\\t\\t\\t\\t\\tevent.navigateTo = aliases[0];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tthis.addToStory(event.navigateTo,event.navigateFromTitle);\\n\\t\\t\\tif(!event.navigateSuppressNavigation) {\\n\\t\\t\\t\\tthis.addToHistory(event.navigateTo,event.navigateFromClientRect);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget-subclass\"}}}","name":"aliases"}