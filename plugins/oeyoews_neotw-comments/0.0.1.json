{"title":"$:/plugins/oeyoews/neotw-comments","description":"neotw-comments","author":"oeyoews","version":"0.0.1","core-version":">=5.3.4","type":"application/json","plugin-type":"plugin","name":"neotw-comments","meat#disabled":"yes","qrcode":"yes","created":"20250301","dependents":"$:/plugins/oeyoews/neotw-vue3 $:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","stability":"STABILITY_2_STABLE","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-comments/components/CommentList.js\":{\"text\":\"const { ref, onMounted } = window.Vue;\\n\\nconst pluginTitle = '$:/plugins/oeyoews/neotw-comments';\\nconst getTemplate = require('../../neotw-vue3/getTemplate.js');\\n\\nmodule.exports = {\\n  props: {\\n    tiddler: {\\n      type: String,\\n      required: true,\\n    },\\n  },\\n\\n  setup(props) {\\n    const comments = ref([]);\\n    const newComment = ref('');\\n    const editingComment = ref(null);\\n    const editText = ref('');\\n\\n    const {\\n      getComments,\\n      addComment,\\n      deleteComment,\\n      editComment,\\n      getTime,\\n    } = require('../lib.js');\\n\\n    const loadComments = () => {\\n      comments.value = getComments(props.tiddler);\\n    };\\n\\n    const handleAddComment = () => {\\n      if (!newComment.value.trim()) return;\\n      // TODO: author\\n      addComment(props.tiddler, 'oeyoews', newComment.value);\\n      newComment.value = '';\\n      loadComments();\\n    };\\n\\n    const handleDeleteComment = (timestamp) => {\\n      deleteComment(props.tiddler, timestamp);\\n      loadComments();\\n    };\\n\\n    const startEditing = (comment) => {\\n      editingComment.value = comment.created;\\n      editText.value = comment.text;\\n    };\\n\\n    const handleEditComment = () => {\\n      if (!editText.value.trim()) return;\\n      editComment(props.tiddler, editingComment.value, editText.value);\\n      editingComment.value = null;\\n      loadComments();\\n    };\\n\\n    onMounted(() => {\\n      loadComments();\\n    });\\n\\n    return {\\n      comments,\\n      newComment,\\n      editingComment,\\n      editText,\\n      getTime,\\n      handleAddComment,\\n      handleDeleteComment,\\n      startEditing,\\n      handleEditComment,\\n      isHttps: window.location.protocol === 'https:',\\n    };\\n  },\\n\\n  template: getTemplate(`${pluginTitle}/templates/commentList.vue`),\\n};\\n\",\"title\":\"$:/plugins/oeyoews/neotw-comments/components/CommentList.js\",\"module-type\":\"library\",\"type\":\"application/javascript\"},\"$:/plugins/oeyoews/neotw-comments/templates/app.vue\":{\"text\":\"<div class=\\\"neotw-comments\\\">\\n  <CommentList :tiddler=\\\"currentTiddler\\\" />\\n</div>\",\"title\":\"$:/plugins/oeyoews/neotw-comments/templates/app.vue\",\"hide-body\":\"yes\"},\"$:/plugins/oeyoews/neotw-comments/templates/commentList.vue\":{\"text\":\"<div class=\\\"comments-container\\\">\\n\\t<div class=\\\"new-comment\\\" v-if=\\\"!isHttps\\\">\\n\\t\\t<textarea @keyup.ctrl.enter=\\\"handleAddComment\\\" v-model=\\\"newComment\\\" placeholder=\\\"写下你的评论...\\\"\\n\\t\\t\\tclass=\\\"w-full p-2 border rounded\\\"></textarea>\\n\\t\\t<div class=\\\"flex justify-end\\\">\\n\\t\\t\\t<button @click=\\\"handleAddComment\\\" class=\\\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\\\">\\n\\t\\t\\t\\t发表评论\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"comments-list mt-4\\\" v-if=\\\"comments?.length>0\\\">\\n\\t\\t<div v-for=\\\"comment in comments\\\" :key=\\\"comment.created\\\" class=\\\"comment-item border-b py-4\\\">\\n\\t\\t\\t<div class=\\\"flex justify-between items-start\\\">\\n\\t\\t\\t\\t<div class=\\\"comment-content\\\">\\n\\t\\t\\t\\t\\t<div v-if=\\\"editingComment !== comment.created\\\">\\n\\t\\t\\t\\t\\t\\t{{ comment.text }}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div v-else>\\n\\t\\t\\t\\t\\t\\t<textarea v-model=\\\"editText\\\" class=\\\"w-full p-2 border rounded\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t<button @click=\\\"handleEditComment\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\\\">\\n\\t\\t\\t\\t\\t\\t\\t保存\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"comment-actions\\\">\\n\\t\\t\\t\\t\\t<button v-if=\\\"editingComment !== comment.created\\\" @click=\\\"startEditing(comment)\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"text-blue-500 hover:text-blue-700 mr-2\\\">\\n\\t\\t\\t\\t\\t\\t编辑\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button @click=\\\"handleDeleteComment(comment.created)\\\" class=\\\"text-red-500 hover:text-red-700\\\">\\n\\t\\t\\t\\t\\t\\t删除\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"comment-meta text-sm text-gray-500 mt-2\\\">\\n\\t\\t\\t\\t{{ comment.author }} · {{getTime(comment.created)}}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\",\"title\":\"$:/plugins/oeyoews/neotw-comments/templates/commentList.vue\",\"hide-body\":\"yes\"},\"$:/plugins/oeyoews/neotw-comments/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-comments/readme\",\"description\":\"neotw-comments\",\"text\":\"[[在线文档|https://neotw.vercel.app/docs/plugins/neotw-comments]]\\n\\n* 不考虑重命名的问题：如果不使用 title, 而是使用其他的字段，在写入的时候还要重新根据字段去查找 title.\"},\"$:/plugins/oeyoews/neotw-comments/app.js\":{\"title\":\"$:/plugins/oeyoews/neotw-comments/app.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-comments/app.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n\\n// const { ref } = window.Vue;\\n\\n// 等价于 const getTemplate = require('$:/plugins/oeyoews/neotw-vue3/getTemplate.js');\\nconst getTemplate = require('../neotw-vue3/getTemplate.js');\\nconst pluginTitle = '$:/plugins/oeyoews/neotw-comments';\\nconst CommentList = require('./components/CommentList.js');\\n\\nconst app = ({ tiddler }) => {\\n  const component = {\\n    components: {\\n      CommentList,\\n    },\\n    template: getTemplate(`${pluginTitle}/templates/app.vue`),\\n\\n    setup() {\\n      return {\\n        currentTiddler: tiddler,\\n      };\\n    },\\n\\n    mounted() {},\\n  };\\n  return component;\\n};\\n\\nmodule.exports = app;\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-comments/lib.js\":{\"title\":\"$:/plugins/oeyoews/neotw-comments/lib.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-comments/lib.js\\ntype: application/javascript\\nmodule-type: library\\n\\\\*/\\n\\n/**\\n * 获取指定 Tiddler 的评论 Tiddler 标题\\n * @param {string} parentTiddler - 文章 Tiddler 的标题\\n * @returns {string} 评论 Tiddler 的标题\\n */\\nconst getCommentTiddlerTitle = (parentTiddler) =>\\n  `$:/comments-${parentTiddler}`;\\n\\n/**\\n * 获取评论数据\\n * @param {string} parentTiddler - 文章 Tiddler 的标题\\n * @returns {Array} 该 Tiddler 的评论列表\\n */\\nconst getComments = (parentTiddler) => {\\n  const commentTiddlerTitle = getCommentTiddlerTitle(parentTiddler);\\n  const commentTiddler = $tw.wiki.getTiddler(commentTiddlerTitle);\\n  return commentTiddler\\n    ? JSON.parse(commentTiddler.fields.comments || '[]')\\n    : [];\\n};\\n\\n/**\\n * 更新评论数据\\n * @param {string} parentTiddler - 文章 Tiddler 的标题\\n * @param {Array} comments - 更新后的评论列表\\n */\\nconst updateComments = (parentTiddler, comments) => {\\n  const commentTiddlerTitle = getCommentTiddlerTitle(parentTiddler);\\n\\n  if (comments.length === 0) {\\n    // 如果评论为空，则删除该 Tiddler\\n    $tw.wiki.deleteTiddler(commentTiddlerTitle);\\n  } else {\\n    // 否则更新 Tiddler\\n    $tw.wiki.addTiddler(\\n      new $tw.Tiddler({\\n        title: commentTiddlerTitle,\\n        type: 'application/json',\\n        comments: JSON.stringify(comments, null, 0),\\n      }),\\n    );\\n  }\\n};\\n\\n/**\\n * 添加评论\\n * @param {string} parentTiddler - 文章 Tiddler 的标题\\n * @param {string} author - 评论者\\n * @param {string} text - 评论内容\\n */\\nconst addComment = (parentTiddler, author, text) => {\\n  const timestamp = new Date().toISOString().replace(/[-T:.Z]/g, ''); // 生成唯一时间戳\\n  const comments = getComments(parentTiddler);\\n\\n  comments.push({ author, text, created: timestamp });\\n  updateComments(parentTiddler, comments);\\n};\\n\\n/**\\n * 删除评论\\n * @param {string} parentTiddler - 文章 Tiddler 的标题\\n * @param {string} timestamp - 需要删除的评论的时间戳\\n */\\nconst deleteComment = (parentTiddler, timestamp) => {\\n  const comments = getComments(parentTiddler);\\n  const filteredComments = comments.filter(\\n    (comment) => comment.created !== timestamp,\\n  );\\n\\n  if (filteredComments.length !== comments.length) {\\n    updateComments(parentTiddler, filteredComments);\\n  }\\n};\\n\\n/**\\n * 编辑评论\\n * @param {string} parentTiddler - 文章 Tiddler 的标题\\n * @param {string} timestamp - 需要编辑的评论的时间戳\\n * @param {string} newText - 新的评论内容\\n */\\nconst editComment = (parentTiddler, timestamp, newText) => {\\n  let comments = getComments(parentTiddler);\\n  let updated = false;\\n\\n  comments = comments.map((comment) => {\\n    if (comment.created === timestamp) {\\n      updated = true;\\n      return { ...comment, text: newText };\\n    }\\n    return comment;\\n  });\\n\\n  if (updated) {\\n    updateComments(parentTiddler, comments);\\n  }\\n};\\n\\nconst getTime = (timestamp) =>\\n  new Date(\\n    timestamp\\n      .slice(0, 14)\\n      .replace(\\n        /(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})/,\\n        '$1-$2-$3T$4:$5:$6Z',\\n      ),\\n  )\\n    .toISOString()\\n    .replace(RegExp(/[TZ]/g), ' ')\\n    .trim();\\n\\nmodule.exports = {\\n  addComment,\\n  getComments,\\n  deleteComment,\\n  editComment,\\n  getTime,\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-comments/viewTemplate\":{\"title\":\"$:/plugins/oeyoews/neotw-comments/viewTemplate\",\"tags\":\"$:/tags/ViewTemplate\",\"text\":\"<$list filter=\\\"[all[current]tag[Journal]] [all[current]tag[🤔thoughts]] [all[current]field:comments[yes]]\\\">\\n<$neotw-comments />\\n</$list>\"},\"$:/plugins/oeyoews/neotw-comments/widget.js\":{\"title\":\"$:/plugins/oeyoews/neotw-comments/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-comments/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nneotw-comments widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass NeotwCommentsWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const ssr = this.document.isTiddlyWikiFakeDom;\\n    if (ssr) return;\\n\\n    const vuelib = '$:/plugins/oeyoews/neotw-vue3/vue.global.prod.js';\\n    const tiddlerTitle = this.getVariable('currentTiddler');\\n\\n    if (!window.Vue) {\\n      window.Vue = require(vuelib);\\n    }\\n\\n    const { createApp } = window.Vue;\\n    const component = require('./app');\\n    const domNode = this.document.createElement('div');\\n\\n    try {\\n      /** @type {{ use: Function, component: (string, Object) }} */\\n      const app = createApp(\\n        component({\\n          tiddler: tiddlerTitle,\\n        }),\\n      );\\n\\n      app.config.errorHandler = (err) => {\\n        const text = `[Vue3](${app.version}): ` + err.message;\\n        console.error(text);\\n        domNode.textContent = text;\\n        domNode.style.color = 'red';\\n      };\\n\\n      // 挂载\\n      app.mount(domNode);\\n\\n      parent.insertBefore(domNode, nextSibling);\\n      this.domNodes.push(domNode);\\n    } catch (e) {\\n      console.error(e.message);\\n    }\\n  }\\n\\n  // TIP: 界面由 vue 接管， 不要在这里刷新\\n  refresh() {\\n    return false;\\n  }\\n}\\n\\n/** @description neotw-comments widget */\\nexports['neotw-comments'] = NeotwCommentsWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}