{"title":"$:/plugins/oeyoews/neotw-image-gallery","description":"neotw-image-gallery","author":"oeyoews","version":"0.1.2","core-version":">=5.3.1","type":"application/json","plugin-type":"plugin","name":"neotw-image-gallery","meta#disabled":"true","dependents":"$:/plugins/oeyoews/image-observer $:/plugins/oeyoews/tiddlywiki-tailwindcss-v4","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-image-gallery/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-image-gallery/readme\",\"text\":\"## Introducion\\n\\n## Usage\\n\\n```wikitext\\n<$gallery json=\\\"image-list.json\\\" />\\n```\\n\\n<$gallery json=\\\"image-list.json\\\" />\\n\",\"type\":\"text/markdown\",\"description\":\"neotw-image-gallery\"},\"$:/plugins/oeyoews/neotw-image-gallery/createImage.js\":{\"title\":\"$:/plugins/oeyoews/neotw-image-gallery/createImage.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-image-gallery/createImage.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n/**\\n * @function createImage\\n * @description Creates an image node.\\n * @param {string} title - The title of the image.\\n * @param {string} src - The source URL of the image.\\n * @returns {HTMLImageElement} The created image node.\\n */\\nmodule.exports = function createImage(title, src, standard = true) {\\n  const createElement = $tw.utils.domMaker;\\n\\n  const imageNode = createElement('img', {\\n    class: `object-cover w-full h-full spotlight rounded-md group-hover:scale-105 transition-all duration-800 ease-in-out shadow-md aspect-video`,\\n    attributes: {\\n      ['data-src']: src,\\n      title,\\n      loading: 'lazy'\\n    }\\n  });\\n\\n  standard === 'false' && imageNode.classList.remove('aspect-video');\\n  imageNode.addEventListener('contextmenu', (e) => {\\n    e.preventDefault();\\n  });\\n\\n  return imageNode;\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-image-gallery/widget.js\":{\"title\":\"$:/plugins/oeyoews/neotw-image-gallery/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-image-gallery/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nneotw-image-gallery widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\nconst createImage = require('./createImage');\\n\\nclass GalleryWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n    this.jsonfile = null;\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const { observer } = new $tw.ImageObserver();\\n\\n    const createElement = $tw.utils.domMaker;\\n    const { json = 'image-list.json' } = this.attributes;\\n    this.jsonfile = json;\\n\\n    // need check this file\\n    const isFile = $tw.wiki.tiddlerExists(json);\\n    if (!isFile) {\\n      console.warn(json, 'file not founded !');\\n      return;\\n    }\\n    const data = $tw.wiki.getTiddlerData(json);\\n    const imagesURL = Object.entries(data);\\n\\n    const children = [];\\n\\n    imagesURL.forEach(([title, src]) => {\\n      const imageNode = createImage(title, src);\\n      observer.observe(imageNode);\\n      children.push(imageNode);\\n    });\\n\\n    const domNode = createElement('div', {\\n      class: 'grid grid-cols-1 md:grid-cols-3 gap-4',\\n      children\\n    });\\n\\n    parent.insertBefore(domNode, nextSibling);\\n    this.domNodes.push(domNode);\\n  }\\n\\n  refresh(changedTiddlers) {\\n    if (Object.keys(changedTiddlers).includes(this.jsonfile)) {\\n      this.refreshSelf();\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n}\\n\\n/**\\n * @description neotw-image-gallery widget\\n * @param {json}\\n */\\nexports.gallery = GalleryWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}