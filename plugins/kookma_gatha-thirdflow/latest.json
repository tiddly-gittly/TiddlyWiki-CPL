{"title":"$:/plugins/kookma/gatha-thirdflow","version":"1.3.1","stability":"STABILITY_2_STABLE","name":"Gatha ThirdFlow","description":"A Gatha companion for plugin development under Node.JS","author":"TheDiveO, Mohammad Rahmani","source":"https://github.com/kookma/TW-Gatha","list":"readme license history","plugin-priority":"","parent-plugin":"$:/plugins/kookma/gatha","dependents":"$:/plugins/kookma/gatha","plugin-type":"plugin","core-version":">=5.3.5","packaged-by":"Gatha on 12th September 2024, 19:32:39","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/kookma/gatha-thirdflow/commands/releasedemowiki.js\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/commands/releasedemowiki.js\",\"text\":\"/*\\\\\\ncreated: 20180217143029574\\ntype: application/javascript\\ntitle: $:/plugins/kookma/gatha-thirdflow/commands/releasedemowiki.js\\ntags:\\nmodified: 20240820161500000\\nmodule-type: command\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n\\nexports.info = {\\n  name: \\\"releasedemowiki\\\",\\n  synchronous: true\\n};\\n\\n\\nvar RELEASE_CONFIG_TIDDLER = \\\"$:/config/gatha/DemoWiki\\\";\\nvar DEFAULT_DEMOWIKI_TEMPLATE = \\\"$:/plugins/kookma/gatha-thirdflow/templates/save-empty\\\";\\nvar DEFAULT_DEMOWIKI_RELEASENAME = \\\"index.html\\\";\\n\\n\\n/* Creates a new command instance to release a demo wiki. */\\nvar Command = function(params, commander) {\\n  this.params = params;\\n  this.commander = commander;\\n  this.logger = new $tw.utils.Logger(\\\"--\\\" + exports.info.name);\\n  this.warn = new $tw.utils.Logger(\\\"--\\\" + exports.info.name, {colour: \\\"brown/orange\\\"});\\n  this.ok = new $tw.utils.Logger(\\\"--\\\" + exports.info.name, {colour: \\\"green\\\"});\\n};\\n\\n\\n/* Releases this wiki as a plugin-demo wiki. */\\nCommand.prototype.execute = function() {\\n  var self = this;\\n  if (self.params.length) {\\n    self.warn.log(\\\"ignoring command parameter(s)\\\");\\n  }\\n\\n  var path = require(\\\"path\\\");\\n  var fs = require(\\\"fs\\\");\\n\\n  var config = $tw.wiki.getTiddler(RELEASE_CONFIG_TIDDLER);\\n  if (!config) {\\n    self.warn.log(\\\"skipping (disabled) demowiki\\\");\\n  } else {\\n    var release = config.fields[\\\"release\\\"] || \\\"\\\";\\n    var releaseName = config.fields.text.replace(/\\\\r?\\\\n|\\\\r/g, \\\"\\\") || DEFAULT_DEMOWIKI_RELEASENAME;\\n    var template = config.fields[\\\"template\\\"] || DEFAULT_DEMOWIKI_TEMPLATE;\\n\\n    if (!releaseName || release !== \\\"yes\\\") {\\n      self.warn.log(\\\"skipping demowiki\\\");\\n    } else {\\n      self.ok.log(\\\"packaging demowiki:\\\", releaseName, \\\" (template: \\\" + $tw.wiki.getTiddler(template).fields[\\\"caption\\\"] + \\\")\\\" );\\n      var filename = path.resolve(self.commander.outputPath, releaseName);\\n      self.logger.log(\\\"writing demowiki to:\\\", filename);\\n      var content = $tw.wiki.renderTiddler(\\\"text/plain\\\", template);\\n      var err = $tw.utils.createFileDirectories(filename);\\n      if (typeof err === \\\"string\\\") {\\n        self.logger.alert(\\\"cannot create file directories\\\");\\n        return err;\\n      }\\n      fs.writeFileSync(filename, content, { encoding: \\\"utf8\\\" });\\n    }\\n  }\\n\\n  return null; /* no error. */\\n};\\n\\n\\nexports.Command = Command;\\n\\n})();\\n\",\"created\":\"20180217143029574\",\"type\":\"application/javascript\",\"tags\":\"\",\"modified\":\"20240820161500000\",\"module-type\":\"command\"},\"$:/plugins/kookma/gatha-thirdflow/commands/releaseplugins.js\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/commands/releaseplugins.js\",\"text\":\"/*\\\\\\ncreated: 20180212171824929\\ntype: application/javascript\\ntitle: $:/plugins/kookma/gatha-thirdflow/commands/releaseplugins.js\\ntags:\\nmodified: 20180212172043868\\nmodule-type: command\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n\\n/* Exports our --releaseplugins command, which packages all plugins marked for\\n * release in this wiki, and then writes them to the local filesystem.\\n */\\nexports.info = {\\n  name: \\\"releaseplugins\\\",\\n  synchronous: true\\n};\\n\\n\\n/* Filter all plugin drafts and set default template */\\nvar RELEASE_CONFIG_FILTER = \\\"[has[plugin-draft]]\\\";\\nvar DEFAULT_TID_TEMPLATE = \\\"$:/plugins/kookma/gatha-thirdflow/templates/tid-tiddler\\\";\\n\\n\\n/* Creates a new command instance. */\\nvar Command = function(params, commander) {\\n  this.params = params;\\n  this.commander = commander;\\n  this.logger = new $tw.utils.Logger(\\\"--\\\" + exports.info.name);\\n  this.warn = new $tw.utils.Logger(\\\"--\\\" + exports.info.name, {colour: \\\"brown/orange\\\"});\\n  this.ok = new $tw.utils.Logger(\\\"--\\\" + exports.info.name, {colour: \\\"green\\\"});\\n};\\n\\n\\n/* Executes our command. */\\nCommand.prototype.execute = function() {\\n  var self = this;\\n  /* check your command parameters, which you will find in this.params */\\n  if (self.params.length) {\\n    self.warn.log(\\\"ignoring command parameter(s)\\\");\\n  }\\n\\n  var thirdflow = require(\\\"$:/plugins/kookma/gatha-thirdflow/libs/thirdflow.js\\\");\\n  var path = require(\\\"path\\\");\\n\\n  /* Retrieve the plugin draft tiddlers, then iterate over them and package and render those plugins for which release is enabled.\\n   * Plugin-draft config tiddler fields:\\n   *   release: must be \\\"yes\\\" to trigger release, otherwise the release config data gets ignored.\\n   *   template: optional title of a tempplate tiddler to be used for rendering the plugin output file.\\n   */\\n  var releaseConfigs = $tw.wiki.filterTiddlers(RELEASE_CONFIG_FILTER);\\n  self.logger.log(\\\"release config tiddlers found:\\\", releaseConfigs.length);\\n  $tw.utils.each(releaseConfigs, function(pluginTitle) {\\n    var config = $tw.wiki.getTiddler(pluginTitle);\\n    if (config) {    \\n      /* Create a temporary config tiddler to store plugin release data. It will be remove after demo is created. Mohammad 2024.08.20 */\\n      var pluginTempConfig = new $tw.Tiddler({\\n          \\\"title\\\": \\\"$:/config/gatha/release/\\\" + pluginTitle,\\n          \\\"plugin-draft\\\": config.fields[\\\"plugin-draft\\\"] ,\\n          \\\"release\\\": config.fields[\\\"release\\\"] || \\\"\\\" ,\\n          \\\"template\\\": config.fields[\\\"template\\\"] || \\\"\\\",\\n          \\\"extra-tiddlers\\\": config.fields[\\\"extra-tiddlers\\\"] || \\\"\\\"\\n        });\\n      $tw.wiki.addTiddler(pluginTempConfig);\\n      /* End of changes - Mohammad */\\n      \\n      var release = config.fields[\\\"release\\\"] || \\\"\\\";\\n      /* Etract the releseName from plugin tite: $:/plugins/publishername/pluginame */\\n      var titleParts = pluginTitle.split(\\\"/\\\");\\n      var releaseName = titleParts[titleParts.length - 1] + \\\".tid\\\"; // Get the last element of the array\\n      var template = config.fields[\\\"template\\\"] || DEFAULT_TID_TEMPLATE;\\n      /* BY MOHAMMAD: extra-tiddlers were added. 2024.08.17 ------------------------ */\\n      var pluginContentsFilter = [\\n        \\\"[prefix[\\\" + pluginTitle + \\\"/]]\\\",\\n        \\\"[subfilter{\\\" + pluginTitle + \\\"!!extra-tiddlers}]\\\" || \\\"\\\"\\n      ].join(\\\" \\\");\\n\\n      if (!releaseName || release !== \\\"yes\\\") {\\n        self.warn.log(\\\"skipping (disabled):\\\", pluginTitle);\\n      } else {\\n        /* (1) pack the plugin tiddler */\\n        self.ok.log(\\\"packaging\\\", pluginTitle, \\\" (template: \\\" + $tw.wiki.getTiddler(template).fields[\\\"caption\\\"] + \\\")\\\" );\\n        self.logger.log(\\\"  with:\\\", pluginContentsFilter);\\n        var err = thirdflow.packagePlugin($tw.wiki, pluginTitle, pluginContentsFilter);\\n        if (!err) {\\n          /* (1.1) nice log... */\\n          self.logger.log(\\\"  total:\\\",\\n            Object.keys(JSON.parse($tw.wiki.getTiddler(pluginTitle).fields.text).tiddlers).length,\\n            \\\"tiddlers\\\");\\n          /* (2) write the plugin tiddler */\\n          var filename = path.resolve(self.commander.outputPath, releaseName);\\n          self.logger.log(\\\"writing to:\\\", filename);\\n          err = thirdflow.renderTiddlerWithTemplate(\\n            self.commander.wiki, pluginTitle, template, filename\\n          );\\n          if (err) {\\n            self.logger.alert(\\\"writing failed:\\\", err);\\n            return err;\\n          }\\n        } else {\\n          self.logger.alert(\\\"packaging failed:\\\", err);\\n          return err;\\n        }\\n      }\\n    }\\n  });\\n\\n  return null; /* no error. */\\n};\\n\\n\\nexports.Command = Command;\\n\\n})();\\n\\n\",\"created\":\"20180212171824929\",\"type\":\"application/javascript\",\"tags\":\"\",\"modified\":\"20180212172043868\",\"module-type\":\"command\"},\"$:/plugins/kookma/gatha-thirdflow/history\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/history\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Full change log  https://kookma.github.io/TW-Gatha/gatha-thirdflow.html#ChangeLog\\n\\n* ''1.3.1'' -- 2024.09.12 -- moved to the new gatha-thirdflow\\n* ''1.3.0''  -- 2024.08.22 -- striped out to minimum features (thirdflow.js, realseplugins.js, releasedemowiki.js)\\n* ''1.2.11'' -- 2020.12.10 -- forked from TheODive ThirdFlow\\n\"},\"$:/plugins/kookma/gatha-thirdflow/icon\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/icon\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 128 128\\\">\\n    <g fill-rule=\\\"evenodd\\\">\\n    <path fill=\\\"#FFC865\\\"\\n       d=\\\"M 13.6875,0.21875 1.96875,7 l 0,13.53125 11.71875,6.78125 11.75,-6.78125 0,-13.53125 -11.75,-6.78125 z m -0.21875,2.9375 -0.21875,0.3125 -0.1875,0.21875 0.1875,0.25 0.15625,0.25 C 8.2238491,4.3516565 4.0625,8.5897663 4.0625,13.8125 c 0,1.53048 0.3643003,2.966927 1,4.25 l -0.25,0.53125 -0.625,-0.0625 C 3.4739437,17.106473 3.0625,15.512243 3.0625,13.8125 3.0625,8.028588 7.716283,3.2895221 13.46875,3.15625 z M 14.4375,3.1875 c 5.534617,0.369785 9.90625,4.9983374 9.90625,10.625 0,1.833581 -0.463357,3.557017 -1.28125,5.0625 l -0.125,-0.25 -0.125,-0.28125 -0.28125,0.03125 -0.34375,0.03125 c 0.739688,-1.363949 1.15625,-2.929057 1.15625,-4.59375 0,-5.0803341 -3.922604,-9.2511654 -8.90625,-9.625 l -0.375,-0.5 0.375,-0.5 z M 10.25,7.5 c 1.425042,0 2.639576,0.7576324 3.8125,1.40625 1.172923,0.6486176 2.283798,1.21875 3.09375,1.21875 C 19.100721,10.125 20,9.09375 20,9.09375 L 21.25,10.25 c 0,0 -1.500142,1.5625 -4.09375,1.5625 -1.459089,0 -2.728987,-0.755233 -3.90625,-1.40625 -1.177263,-0.6510172 -2.253123,-1.1875 -3,-1.1875 -1.8328368,0 -2.875,1.03125 -2.875,1.03125 L 6.1875,9.0625 c 0,0 1.5514984,-1.5625 4.0625,-1.5625 z m 0.0625,4.6875 c 1.28542,0 2.513683,0.725888 3.6875,1.375 1.173817,0.649112 2.306403,1.21875 3.25,1.21875 2.078117,0 3.09375,-1.125 3.09375,-1.125 l 0.71875,0.65625 c 0,0 -1.352537,1.46875 -3.8125,1.46875 -1.325443,0 -2.573631,-0.724477 -3.75,-1.375 -1.176369,-0.650523 -2.301,-1.21875 -3.1875,-1.21875 -1.9724586,0 -3.09375,1.15625 -3.09375,1.15625 L 6.5,13.625 c 0,0 1.4411209,-1.4375 3.8125,-1.4375 z m 0,3.84375 c 1.28542,0 2.482432,0.694638 3.65625,1.34375 1.173817,0.649112 2.306403,1.25 3.25,1.25 2.078118,0 3.09375,-1.15625 3.09375,-1.15625 l 0.75,0.6875 c 0,0 -1.383787,1.46875 -3.84375,1.46875 -1.325443,0 -2.54238,-0.724477 -3.71875,-1.375 -1.176369,-0.650523 -2.301001,-1.21875 -3.1875,-1.21875 -1.9724586,0 -3.125,1.125 -3.125,1.125 L 6.5,17.46875 c 0,0 1.4411209,-1.4375 3.8125,-1.4375 z M 5.53125,18.875 c 1.7052086,2.730869 4.727356,4.5625 8.1875,4.5625 3.288587,0 6.171115,-1.649342 7.90625,-4.15625 l 0.6875,-0.09375 0.25,0.53125 c -1.906345,2.846287 -5.161209,4.71875 -8.84375,4.71875 -3.8226661,0 -7.1815039,-2.032459 -9.0625,-5.0625 L 5,19.40625 5.3125,19.4375 5.40625,19.15625 5.53125,18.875 z\\\"\\n       transform=\\\"scale(4.6545455,4.6545455)\\\"\\n       id=\\\"path4245\\\"\\n       style=\\\"fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.80000001;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\" />\\n    </g>\\n</svg>\"},\"$:/plugins/kookma/gatha-thirdflow/libs/thirdflow.js\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/libs/thirdflow.js\",\"text\":\"/*\\\\\\ncreated: 20180212163414709\\ntype: application/javascript\\ntitle: $:/plugins/kookma/gatha-thirdflow/libs/thirdflow.js\\nmodule-type: library\\n\\nA library of (reusable) ThirdFlow plugin tiddler functions. These\\nfunctions can be used, for instance, through TW server commands.\\n\\nRevised Aug 18th, 2024\\nMohammad\\nThis library now works with Gatha\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n\\n/* Good Stuff(tm) we need */\\nif ($tw.node) {\\n  var fs = require(\\\"fs\\\");\\n  var path = require(\\\"path\\\");\\n}\\n\\n\\n/* Packages a plugin tiddler from its constituent individual tiddlers that exist\\n * inside the title sub-namespace of the plugin tiddler.\\n *\\n * Parameters:\\n *   wiki: TW instance.\\n *   pluginTitle: the plugin tiddler to be packed; this must be a valid\\n *       plugin tiddler which has its plugin-type correctly set, as well\\n *       as a type of \\\"application/json\\\".\\n *   filterExpression: optional TW filter expression to be used to decide\\n *       which tiddlers need to be packed into the plugin. If left unspecified,\\n *       it defaults to all sub-tiddlers of the plugin title.\\n *\\n * Result:\\n *   returns undefined when the plugin tiddler specified in pluginTitle has\\n *   been packed without issues. Otherwise, an error string is returned,\\n *   detailing what went wrong.\\n */\\nexports.packagePlugin = function(wiki, pluginTitle, filterExpression) {\\n  // Prepare input parameters...\\n  if (pluginTitle.substr(-1) === \\\"/\\\") {\\n    pluginTitle = pluginTitle.substr(0, pluginTitle.length - 1);\\n  }\\n  filterExpression = filterExpression\\n    || \\\"[all[tiddlers]prefix[\\\" + pluginTitle + \\\"/]]\\\";\\n  \\n    // Plugin tiddler sanity checks...\\n  var pluginTiddler = wiki.getTiddler(pluginTitle);\\n\\tif (!pluginTiddler) {\\n\\t\\treturn \\\"missing plugin tiddler: \\\" + pluginTitle;\\n\\t}\\n\\tif (pluginTiddler.fields.type !== \\\"application/json\\\"\\n      || !pluginTiddler.hasField(\\\"plugin-draft\\\")) {\\n\\t\\treturn \\\"not a plugin (skeleton) tiddler: \\\" + pluginTitle;\\n\\t}\\n\\t// Update the plugin content to contain all the tiddlers that match\\n\\t// the filter expression.\\n\\tvar filteredTiddlers = wiki.filterTiddlers(filterExpression);\\n\\tvar pluginTiddlers = {};\\n\\t$tw.utils.each(filteredTiddlers, function(title) {\\n\\t\\tvar tiddler = wiki.getTiddler(title);\\n\\t\\tvar fields = {};\\n\\t\\t$tw.utils.each(tiddler.fields, function(value, fieldname) {\\n\\t\\t\\tfields[fieldname] = tiddler.getFieldString(fieldname);\\n\\t\\t});\\n\\t\\tpluginTiddlers[title] = fields;\\n\\t});\\n  // This part modified by Mohammad to remove the plugin-draft and set the plugin-type. Date: 2024.08.17\\n  // Also other fields used in plugin development statge have been removed\\n\\tvar plugin = new $tw.Tiddler(\\n    pluginTiddler,\\n    {\\n      \\\"text\\\": JSON.stringify({ \\\"tiddlers\\\": pluginTiddlers }),\\n      \\\"plugin-type\\\": pluginTiddler.fields[\\\"plugin-draft\\\"] ,\\n      \\\"packaged-by\\\": \\\"Gatha on \\\" + $tw.utils.formatDateString(new Date(), \\\"DDth MMM YYYY, 0hh:0mm:0ss\\\"),\\n      \\\"release\\\": null,\\n      \\\"template\\\": null,\\n      \\\"plugin-draft\\\":null,\\n      \\\"extra-tiddlers\\\":null,\\n      \\\"resource-tiddlers\\\":null \\n    });\\n\\twiki.addTiddler(plugin);\\n\\t// We need to update the plugin info that TW had built up during boot...\\n\\twiki.readPluginInfo();\\n\\t// ...and we need to re-unpack the plugins into their shadow tiddlers in\\n\\t// order to make [is[shadow]] work correctly. Yes, that causes the plugin\\n  // tiddlers to exist two times: the original source tiddler, as well as\\n  // a corresponding shadow tiddler. However, this is just during release,\\n  // but never in a development wiki nor in a user wiki deploying this plugin.\\n\\twiki.unpackPluginTiddlers();\\n  return;\\n};\\n\\n\\n/* Renders a single tiddler using a template to a file. Please note that\\n * this function automatically creates the required subdirectories needed\\n * to contain the output file.\\n *\\n * Parameters:\\n *   wiki: TW instance.\\n *   title: the tiddler to be rendered.\\n *   template: the title of the template to be used for rendering.\\n *   filename: the output filename to which the tiddler gets rendered.\\n *\\n * Result:\\n *   returns undefined when the rendering and writing process finished\\n *   successfully. Otherwise, an error string is returned, detailing what\\n *   went wrong.\\n */\\nexports.renderTiddlerWithTemplate = function(wiki, title, template, filename) {\\n  var err = $tw.utils.createFileDirectories(filename);\\n  if (typeof err === \\\"string\\\") {\\n    return err;\\n  }\\n  var content = wiki.renderTiddler(\\n    \\\"text/plain\\\", template, { variables: { currentTiddler: title } });\\n  fs.writeFileSync(filename, content, { encoding: \\\"utf8\\\" });\\n  return;\\n};\\n\\n\\n})();\\n\",\"created\":\"20180212163414709\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/kookma/gatha-thirdflow/license\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/license\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Distributed under an MIT license.\\n\\nCopyright (c) 2021-2024 [[Mohammad Rahmani|https://github.com/kookma]]\\n\\n<<<\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n<<<\\n\\nMIT License Copyright (c) 2014-2020 [[TheDiveO|http://thediveo.github.io/ThirdFlow]]\\n\\n<<<\\nThe //Third Flow// plugin is covered by the following licenses:\\n\\n* The ''Third Flow plugin'' is licensed under the [[MIT license|http://opensource.org/licenses/MIT]].\\n* The ''hierarchical file system adapter'' is licensed under the [[TiddlyWiki 5 license|https://github.com/TiddlyWiki/TiddlyWiki5/tree/master/plugins/tiddlywiki/filesystem]] (links to ~GitHub TW5 repository).\\n* Other content of this ~TiddlyWiki which is not part of the plugin or ~TiddlyWiki 5 is covered by the [[CC BY 3.0|http://creativecommons.org/licenses/by/3.0/]] license.\\n<<<\"},\"$:/plugins/kookma/gatha-thirdflow/readme\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"; Gatha Thirdflow\\nUse the the Stripped Down ThirdFlow plugin in your Node.JS based TiddlyWikis to develop your plugins and packages inside browser using Gatha.\\n\\n;Code and demo\\nFor learning plugin features, syntax, tutorial and examples see the plugin demo and code pages\\n\\n* Demo: https://kookma.github.io/TW-Gatha/gatha-thirdflow.html\\n* Code: https://github.com/kookma/TW-Gatha\\n\\n\\n; Original ThirFlow\\n\\nThe //Third Flow// plugin supports your plugin development in that it organizes all your tiddler source files into a clear hierarchical folder structure based on tiddler titles.\\nAn additional plugin creation command module makes it easy to create the package plugin itself as well as a demonstration TiddlyWiki without the hassle of having to maintain\\nseparate and even multiple ``tiddlers/`` and ``plugin/`` folders. Also, the //Third Flow// relieves you from shuffling tiddler source code files around in your source code repository.\\nFor more information, please go to the [[Third Flow project website|http://thediveo.github.io/ThirdFlow]].\"},\"$:/plugins/kookma/gatha-thirdflow/templates/save-all\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/templates/save-all\",\"caption\":\"Save all\",\"code-body\":\"yes\",\"tags\":\"$:/tags/Gatha/Templates/PublishDemo\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!-- Aug 21, 2024\\nThis template exports all tiddlers into released demo. The disabled plugins with all shadow tiddlers\\nwill be excluded. The below filters are added as duplication and can be removed.\\n\\n [function[pluginsEnabledRelease]]\\n [subfilter<localPublishFilter>]\\n [function[globalPublishFilter]]\\n\\n Also the template takes care of excludeFilter and -[subfilter<excludeFilter>] is used as the last filter to make sure\\n exclude filter will be excluded.\\n\\nNOTE: This template has been deprecated. Instead, you can utilize Publish filters and apply the save-empty ​t​template to achieve a similar outcome.\\n-->\\n\\n\\n\\\\import [subfilter{$:/core/config/GlobalImportFilter}]\\n\\\\import $:/plugins/kookma/gatha-thirdflow/templates/utility-functions\\n\\n\\n\\\\define saveTiddlerFilter()\\n [is[tiddler]] -[prefix[$:/state/popup/]] -[prefix[$:/temp/]] -[prefix[$:/HistoryList]] -[status[pending]plugin-type[import]]\\n-[[$:/boot/boot.css]] -[is[system]type[application/javascript]library[yes]] -[[$:/boot/boot.js]]\\n-[[$:/boot/bootprefix.js]]\\n\\n [function[pluginsEnabledRelease]]\\n [subfilter<localPublishFilter>]\\n [function[globalPublishFilter]]\\n\\n\\n-[function[pluginsDisabledRelease]]\\n-[function[shadowInSync]]\\n\\n-[function[excludeFilter]]\\n\\n+[sort[title]]\\n\\\\end\\n{{$:/core/templates/tiddlywiki5.html}}\\n\\n<!--NOTE: This template has been deprecated.-->\"},\"$:/plugins/kookma/gatha-thirdflow/templates/save-empty\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/templates/save-empty\",\"caption\":\"Save empty\",\"code-body\":\"yes\",\"tags\":\"$:/tags/Gatha/Templates/PublishDemo\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\import $:/plugins/kookma/gatha-thirdflow/templates/utility-functions\\n\\n<!--This saveTiddlerFilter is used by template $:/core/templates/tiddlywiki5.html to create the single TiddlyWiki .html file-->\\n\\\\procedure saveTiddlerFilter()\\n    [[$:/core]] [[$:/isEncrypted]] [[$:/themes/tiddlywiki/snowwhite]] [[$:/themes/tiddlywiki/vanilla]]\\n   -[[$:/boot/boot.css]] -[type[application/javascript]library[yes]] -[[$:/boot/boot.js]]\\n   -[[$:/boot/bootprefix.js]]\\n\\n    [function[pluginsEnabledRelease]]\\n    [subfilter<localPublishFilter>]\\n    [function[globalPublishFilter]]\\n    \\n   -[function[pluginsDisabledRelease]]\\n   -[function[shadowInSync]]\\n\\n    +[sort[title]]\\n\\\\end\\n\\n\\\\procedure savingEmpty() yes\\n\\n{{$:/core/templates/tiddlywiki5.html}}\"},\"$:/plugins/kookma/gatha-thirdflow/templates/tid-tiddler\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/templates/tid-tiddler\",\"caption\":\"Default template\",\"code-body\":\"yes\",\"tags\":\"$:/tags/Gatha/Templates/PublishTiddler\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!--\\n\\nThis template is used for saving tiddlers in TiddlyWeb *.tid format\\n\\n--><$fields exclude='text bag' template='$name$: $value$\\n'></$fields>`\\n`<$view field=\\\"text\\\" format=\\\"text\\\" />\"},\"$:/plugins/kookma/gatha-thirdflow/templates/utility-functions\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/templates/utility-functions\",\"code-body\":\"yes\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<!-- Aug 21, 2024\\r\\nThis tiddler contains utility functions to be used by save templates e.g save-empty.\\r\\nIt generates the list of draft plugins, config tiddlers of draft plugins\\r\\ngenerated during release.\\r\\nThe functions also retrives the shadow tiddlers (prefixed by plugin title,\\r\\nor stored in extra-plugin tiddlers).\\r\\nFinally the global and local publish filters are retrived.\\r\\n-->\\n\\n\\r\\n\\\\function configPrefix() [[$:/config/gatha/release/]]\\n\\n\\\\function pluinsDisabledReleaseConfig() [prefix<configPrefix>has[plugin-draft]!release[yes]]\\r\\n\\\\function pluinsEnabledReleaseConfig()  [prefix<configPrefix>has[plugin-draft]release[yes]]\\n\\n\\\\function pluginsDisabledRelease() [function[pluinsDisabledReleaseConfig]removeprefix<configPrefix>]\\r\\n\\\\function pluginsEnabledRelease()  [function[pluinsEnabledReleaseConfig]removeprefix<configPrefix>]\\n\\n\\r\\n<!--This function collects all tiddlers listed in plugin PublishFilter-->\\r\\n\\\\function pluginsPublishFilter()\\r\\n    [function[pluginsEnabledRelease]]\\r\\n    :map[split[/]butfirst[2]join[/]addprefix[$:/config/]addsuffix[/PublishFilter]get[text]]\\r\\n\\\\end pluginsPublishFilter\\n\\n<!--These are tiddlers manually added to released demo through local and global publish filters -->\\r\\n\\\\function localPublishFilter()  [function[pluginsPublishFilter]] :and[join[ ]]\\r\\n\\\\function globalPublishFilter() [subfilter{$:/config/gatha/PublishFilter}]\\n\\n\\r\\n<!-- These are plugins shadow tiddlers and should be excluded from released demo -->\\r\\n\\\\function pluginShadowExtra() [function[pluinsEnabledReleaseConfig]] :map:flat[enlist{!!extra-tiddlers}]\\r\\n\\\\function pluginShadows()     [function[pluginsEnabledRelease]] :map:flat[all[tiddlers]prefix<currentTiddler>] -[function[pluginsEnabledRelease]]\\r\\n\\\\function shadowInSync()      [function[pluginShadows]] [function[pluginShadowExtra]]\\r\\n\"},\"$:/plugins/kookma/gatha-thirdflow/ui/controlpanel/released-demowiki\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/ui/controlpanel/released-demowiki\",\"caption\":\"Released Demowiki\",\"tags\":\"$:/tags/Gatha/Settings\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\import $:/plugins/kookma/gatha-thirdflow/ui/procedures\\n\\nSettings to customize //your// plugin, theme, and package development using //Gatha-Thirdflow// when work under Node.js.<br>\\nCustomize your ''plugin(s) release'', and ''demo wiki'' release.\\n\\n---\\n\\n''Select plugin for release''\\n\\nThese are plugins under development. Enable plugins for resale will pack them into the released Demowiki. The enabled plugins for release, will also be exported as separated packaged plugin (as .tid, or .json).\\n\\n<$transclude $variable=\\\"create-table\\\" inputFilter=\\\"[has[plugin-draft]!is[draft]]\\\" templateTag=\\\"$:/tags/Gatha/Templates/PublishTiddler\\\" />\\n\\n---\\n\\n''Release Demowiki''\\n\\nCreate a demonstration TiddlyWiki with selected plugins packaged into it. To pack additional tiddlers into your demo wiki during release phase, specify filter expression in the global [[PublishFilter|$:/config/gatha/PublishFilter]] (see General Settings).\\n\\n<$transclude $variable=\\\"create-table\\\" inputFilter=\\\"[[$:/config/gatha/DemoWiki]]\\\" templateTag=\\\"$:/tags/Gatha/Templates/PublishDemo\\\"/>\\n\"},\"$:/plugins/kookma/gatha-thirdflow/ui/procedures\":{\"title\":\"$:/plugins/kookma/gatha-thirdflow/ui/procedures\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\procedure select-template(targetTiddler, templateTag)\\n<$select tiddler=<<targetTiddler>> field=\\\"template\\\" default=\\\"\\\">\\n\\t<$list filter=\\\"[all[tiddlers+shadows]tag<templateTag>]\\\">\\n\\t\\t<option value=<<currentTiddler>> ><$text text={{{ [{!!caption}lowercase[]] }}}/></option>\\n\\t</$list>\\n</$select>\\n\\\\end select-template\\n\\n\\\\procedure create-table(inputFilter, templateTag)\\n<div class=\\\"tc-edit-fields\\\">\\n  <table class=\\\"tc-edit-fields\\\">\\n    <tbody>\\n\\t\\t<$list filter=<<inputFilter>> >\\n\\t\\t<tr class=\\\"tc-edit-field\\\">\\n      <td class=\\\"ga-plugin-edit-element-name\\\">release:</td>\\n      <td class=\\\"ga-plugin-edit-element-value\\\" style=\\\"white-space: nowrap;\\\">\\n\\t\\t\\t\\t<$checkbox field=\\\"release\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" /> <$link/>\\n      </td>\\n    </tr>\\n    <tr class=\\\"tc-edit-field\\\">\\n      <td class=\\\"ga-plugin-edit-element-name\\\">template:</td>\\n      <td class=\\\"ga-plugin-edit-element-value\\\" style=\\\"white-space: nowrap;\\\">\\n\\t\\t\\t\\t<$edit-text tiddler=<<targetTiddler>> field=\\\"template\\\" default=\\\"\\\" placeholder=\\\"\\\" tag=\\\"input\\\" class=\\\"ga-plugin-edit-element-type\\\" />\\n\\t\\t\\t\\t<$transclude $variable=\\\"select-template\\\" targetTiddler=<<currentTiddler>> templateTag=<<templateTag>> $mode=inline/>\\n      </td>\\n    </tr>\\n\\t\\t</$list>\\n\\t\\t</tbody>\\n\\t</table>\\t\\n</div>\\n\\\\end create-table\\n\"}}}"}