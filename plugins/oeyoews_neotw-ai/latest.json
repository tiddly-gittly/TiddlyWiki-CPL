{"title":"$:/plugins/oeyoews/neotw-ai","description":"文章摘要自动生成","summary":"文章摘要自动生成插件","author":"oeyoews","version":"0.2.0","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"neotw-ai","meat#disabled":"yes","qrcode":"yes","created":"2024-03-26","dependents":"$:/plugins/oeyoews/neotw-vue3 $:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-ai/lib/spark.min.js\":{\"text\":\"(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.spark = {}));\\n})(this, (function (exports) { 'use strict';\\n\\n    exports.ModelVersion = void 0;\\n    (function (ModelVersion) {\\n        ModelVersion[\\\"V1_5\\\"] = \\\"V1_5\\\";\\n        ModelVersion[\\\"V2\\\"] = \\\"V2\\\";\\n        ModelVersion[\\\"V3\\\"] = \\\"V3\\\";\\n        ModelVersion[\\\"V3_5\\\"] = \\\"V3_5\\\";\\n    })(exports.ModelVersion || (exports.ModelVersion = {}));\\n    const ModelVersionUrl = {\\n        [exports.ModelVersion.V1_5]: \\\"wss://spark-api.xf-yun.com/v1.1/chat\\\",\\n        [exports.ModelVersion.V2]: \\\"wss://spark-api.xf-yun.com/v2.1/chat\\\",\\n        [exports.ModelVersion.V3]: \\\"wss://spark-api.xf-yun.com/v3.1/chat\\\",\\n        [exports.ModelVersion.V3_5]: \\\"wss://spark-api.xf-yun.com/v3.5/chat\\\",\\n    };\\n    const ChatDomain = {\\n        [exports.ModelVersion.V1_5]: \\\"general\\\",\\n        [exports.ModelVersion.V2]: \\\"generalv2\\\",\\n        [exports.ModelVersion.V3]: \\\"generalv3\\\",\\n        [exports.ModelVersion.V3_5]: \\\"generalv3.5\\\",\\n    };\\n    exports.MessageRole = void 0;\\n    (function (MessageRole) {\\n        MessageRole[\\\"user\\\"] = \\\"user\\\";\\n        MessageRole[\\\"assistant\\\"] = \\\"assistant\\\";\\n    })(exports.MessageRole || (exports.MessageRole = {}));\\n\\n    class ChatMessage {\\n        static fromUser(content) {\\n            return {\\n                role: exports.MessageRole.user,\\n                content,\\n            };\\n        }\\n        static fromAssistant(content) {\\n            return {\\n                role: exports.MessageRole.assistant,\\n                content,\\n            };\\n        }\\n    }\\n\\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\\n\\n    function getDefaultExportFromCjs (x) {\\n    \\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\\n    }\\n\\n    var cryptoJs = {exports: {}};\\n\\n    function commonjsRequire(path) {\\n    \\tthrow new Error('Could not dynamically require \\\"' + path + '\\\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\\n    }\\n\\n    var core = {exports: {}};\\n\\n    var hasRequiredCore;\\n    function requireCore() {\\n      if (hasRequiredCore) return core.exports;\\n      hasRequiredCore = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory();\\n          }\\n        })(commonjsGlobal, function () {\\n          var CryptoJS = CryptoJS || function (Math, undefined$1) {\\n            var crypto;\\n            if (typeof window !== 'undefined' && window.crypto) {\\n              crypto = window.crypto;\\n            }\\n            if (typeof self !== 'undefined' && self.crypto) {\\n              crypto = self.crypto;\\n            }\\n            if (typeof globalThis !== 'undefined' && globalThis.crypto) {\\n              crypto = globalThis.crypto;\\n            }\\n            if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\\n              crypto = window.msCrypto;\\n            }\\n            if (!crypto && typeof commonjsGlobal !== 'undefined' && commonjsGlobal.crypto) {\\n              crypto = commonjsGlobal.crypto;\\n            }\\n            if (!crypto && typeof commonjsRequire === 'function') {\\n              try {\\n                crypto = require('crypto');\\n              } catch (err) {}\\n            }\\n            var cryptoSecureRandomInt = function () {\\n              if (crypto) {\\n                if (typeof crypto.getRandomValues === 'function') {\\n                  try {\\n                    return crypto.getRandomValues(new Uint32Array(1))[0];\\n                  } catch (err) {}\\n                }\\n                if (typeof crypto.randomBytes === 'function') {\\n                  try {\\n                    return crypto.randomBytes(4).readInt32LE();\\n                  } catch (err) {}\\n                }\\n              }\\n              throw new Error('Native crypto module could not be used to get secure random number.');\\n            };\\n            var create = Object.create || function () {\\n              function F() {}\\n              return function (obj) {\\n                var subtype;\\n                F.prototype = obj;\\n                subtype = new F();\\n                F.prototype = null;\\n                return subtype;\\n              };\\n            }();\\n            var C = {};\\n            var C_lib = C.lib = {};\\n            var Base = C_lib.Base = function () {\\n              return {\\n                extend: function (overrides) {\\n                  var subtype = create(this);\\n                  if (overrides) {\\n                    subtype.mixIn(overrides);\\n                  }\\n                  if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\\n                    subtype.init = function () {\\n                      subtype.$super.init.apply(this, arguments);\\n                    };\\n                  }\\n                  subtype.init.prototype = subtype;\\n                  subtype.$super = this;\\n                  return subtype;\\n                },\\n                create: function () {\\n                  var instance = this.extend();\\n                  instance.init.apply(instance, arguments);\\n                  return instance;\\n                },\\n                init: function () {},\\n                mixIn: function (properties) {\\n                  for (var propertyName in properties) {\\n                    if (properties.hasOwnProperty(propertyName)) {\\n                      this[propertyName] = properties[propertyName];\\n                    }\\n                  }\\n                  if (properties.hasOwnProperty('toString')) {\\n                    this.toString = properties.toString;\\n                  }\\n                },\\n                clone: function () {\\n                  return this.init.prototype.extend(this);\\n                }\\n              };\\n            }();\\n            var WordArray = C_lib.WordArray = Base.extend({\\n              init: function (words, sigBytes) {\\n                words = this.words = words || [];\\n                if (sigBytes != undefined$1) {\\n                  this.sigBytes = sigBytes;\\n                } else {\\n                  this.sigBytes = words.length * 4;\\n                }\\n              },\\n              toString: function (encoder) {\\n                return (encoder || Hex).stringify(this);\\n              },\\n              concat: function (wordArray) {\\n                var thisWords = this.words;\\n                var thatWords = wordArray.words;\\n                var thisSigBytes = this.sigBytes;\\n                var thatSigBytes = wordArray.sigBytes;\\n                this.clamp();\\n                if (thisSigBytes % 4) {\\n                  for (var i = 0; i < thatSigBytes; i++) {\\n                    var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\\n                    thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;\\n                  }\\n                } else {\\n                  for (var j = 0; j < thatSigBytes; j += 4) {\\n                    thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];\\n                  }\\n                }\\n                this.sigBytes += thatSigBytes;\\n                return this;\\n              },\\n              clamp: function () {\\n                var words = this.words;\\n                var sigBytes = this.sigBytes;\\n                words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;\\n                words.length = Math.ceil(sigBytes / 4);\\n              },\\n              clone: function () {\\n                var clone = Base.clone.call(this);\\n                clone.words = this.words.slice(0);\\n                return clone;\\n              },\\n              random: function (nBytes) {\\n                var words = [];\\n                for (var i = 0; i < nBytes; i += 4) {\\n                  words.push(cryptoSecureRandomInt());\\n                }\\n                return new WordArray.init(words, nBytes);\\n              }\\n            });\\n            var C_enc = C.enc = {};\\n            var Hex = C_enc.Hex = {\\n              stringify: function (wordArray) {\\n                var words = wordArray.words;\\n                var sigBytes = wordArray.sigBytes;\\n                var hexChars = [];\\n                for (var i = 0; i < sigBytes; i++) {\\n                  var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\\n                  hexChars.push((bite >>> 4).toString(16));\\n                  hexChars.push((bite & 0x0f).toString(16));\\n                }\\n                return hexChars.join('');\\n              },\\n              parse: function (hexStr) {\\n                var hexStrLength = hexStr.length;\\n                var words = [];\\n                for (var i = 0; i < hexStrLength; i += 2) {\\n                  words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;\\n                }\\n                return new WordArray.init(words, hexStrLength / 2);\\n              }\\n            };\\n            var Latin1 = C_enc.Latin1 = {\\n              stringify: function (wordArray) {\\n                var words = wordArray.words;\\n                var sigBytes = wordArray.sigBytes;\\n                var latin1Chars = [];\\n                for (var i = 0; i < sigBytes; i++) {\\n                  var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\\n                  latin1Chars.push(String.fromCharCode(bite));\\n                }\\n                return latin1Chars.join('');\\n              },\\n              parse: function (latin1Str) {\\n                var latin1StrLength = latin1Str.length;\\n                var words = [];\\n                for (var i = 0; i < latin1StrLength; i++) {\\n                  words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;\\n                }\\n                return new WordArray.init(words, latin1StrLength);\\n              }\\n            };\\n            var Utf8 = C_enc.Utf8 = {\\n              stringify: function (wordArray) {\\n                try {\\n                  return decodeURIComponent(escape(Latin1.stringify(wordArray)));\\n                } catch (e) {\\n                  throw new Error('Malformed UTF-8 data');\\n                }\\n              },\\n              parse: function (utf8Str) {\\n                return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\\n              }\\n            };\\n            var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\\n              reset: function () {\\n                this._data = new WordArray.init();\\n                this._nDataBytes = 0;\\n              },\\n              _append: function (data) {\\n                if (typeof data == 'string') {\\n                  data = Utf8.parse(data);\\n                }\\n                this._data.concat(data);\\n                this._nDataBytes += data.sigBytes;\\n              },\\n              _process: function (doFlush) {\\n                var processedWords;\\n                var data = this._data;\\n                var dataWords = data.words;\\n                var dataSigBytes = data.sigBytes;\\n                var blockSize = this.blockSize;\\n                var blockSizeBytes = blockSize * 4;\\n                var nBlocksReady = dataSigBytes / blockSizeBytes;\\n                if (doFlush) {\\n                  nBlocksReady = Math.ceil(nBlocksReady);\\n                } else {\\n                  nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\\n                }\\n                var nWordsReady = nBlocksReady * blockSize;\\n                var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\\n                if (nWordsReady) {\\n                  for (var offset = 0; offset < nWordsReady; offset += blockSize) {\\n                    this._doProcessBlock(dataWords, offset);\\n                  }\\n                  processedWords = dataWords.splice(0, nWordsReady);\\n                  data.sigBytes -= nBytesReady;\\n                }\\n                return new WordArray.init(processedWords, nBytesReady);\\n              },\\n              clone: function () {\\n                var clone = Base.clone.call(this);\\n                clone._data = this._data.clone();\\n                return clone;\\n              },\\n              _minBufferSize: 0\\n            });\\n            C_lib.Hasher = BufferedBlockAlgorithm.extend({\\n              cfg: Base.extend(),\\n              init: function (cfg) {\\n                this.cfg = this.cfg.extend(cfg);\\n                this.reset();\\n              },\\n              reset: function () {\\n                BufferedBlockAlgorithm.reset.call(this);\\n                this._doReset();\\n              },\\n              update: function (messageUpdate) {\\n                this._append(messageUpdate);\\n                this._process();\\n                return this;\\n              },\\n              finalize: function (messageUpdate) {\\n                if (messageUpdate) {\\n                  this._append(messageUpdate);\\n                }\\n                var hash = this._doFinalize();\\n                return hash;\\n              },\\n              blockSize: 512 / 32,\\n              _createHelper: function (hasher) {\\n                return function (message, cfg) {\\n                  return new hasher.init(cfg).finalize(message);\\n                };\\n              },\\n              _createHmacHelper: function (hasher) {\\n                return function (message, key) {\\n                  return new C_algo.HMAC.init(hasher, key).finalize(message);\\n                };\\n              }\\n            });\\n            var C_algo = C.algo = {};\\n            return C;\\n          }(Math);\\n          return CryptoJS;\\n        });\\n      })(core);\\n      return core.exports;\\n    }\\n\\n    var x64Core = {exports: {}};\\n\\n    var hasRequiredX64Core;\\n    function requireX64Core() {\\n      if (hasRequiredX64Core) return x64Core.exports;\\n      hasRequiredX64Core = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function (undefined$1) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var Base = C_lib.Base;\\n            var X32WordArray = C_lib.WordArray;\\n            var C_x64 = C.x64 = {};\\n            C_x64.Word = Base.extend({\\n              init: function (high, low) {\\n                this.high = high;\\n                this.low = low;\\n              }\\n            });\\n            C_x64.WordArray = Base.extend({\\n              init: function (words, sigBytes) {\\n                words = this.words = words || [];\\n                if (sigBytes != undefined$1) {\\n                  this.sigBytes = sigBytes;\\n                } else {\\n                  this.sigBytes = words.length * 8;\\n                }\\n              },\\n              toX32: function () {\\n                var x64Words = this.words;\\n                var x64WordsLength = x64Words.length;\\n                var x32Words = [];\\n                for (var i = 0; i < x64WordsLength; i++) {\\n                  var x64Word = x64Words[i];\\n                  x32Words.push(x64Word.high);\\n                  x32Words.push(x64Word.low);\\n                }\\n                return X32WordArray.create(x32Words, this.sigBytes);\\n              },\\n              clone: function () {\\n                var clone = Base.clone.call(this);\\n                var words = clone.words = this.words.slice(0);\\n                var wordsLength = words.length;\\n                for (var i = 0; i < wordsLength; i++) {\\n                  words[i] = words[i].clone();\\n                }\\n                return clone;\\n              }\\n            });\\n          })();\\n          return CryptoJS;\\n        });\\n      })(x64Core);\\n      return x64Core.exports;\\n    }\\n\\n    var libTypedarrays = {exports: {}};\\n\\n    var hasRequiredLibTypedarrays;\\n    function requireLibTypedarrays() {\\n      if (hasRequiredLibTypedarrays) return libTypedarrays.exports;\\n      hasRequiredLibTypedarrays = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            if (typeof ArrayBuffer != 'function') {\\n              return;\\n            }\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var superInit = WordArray.init;\\n            var subInit = WordArray.init = function (typedArray) {\\n              if (typedArray instanceof ArrayBuffer) {\\n                typedArray = new Uint8Array(typedArray);\\n              }\\n              if (typedArray instanceof Int8Array || typeof Uint8ClampedArray !== \\\"undefined\\\" && typedArray instanceof Uint8ClampedArray || typedArray instanceof Int16Array || typedArray instanceof Uint16Array || typedArray instanceof Int32Array || typedArray instanceof Uint32Array || typedArray instanceof Float32Array || typedArray instanceof Float64Array) {\\n                typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\\n              }\\n              if (typedArray instanceof Uint8Array) {\\n                var typedArrayByteLength = typedArray.byteLength;\\n                var words = [];\\n                for (var i = 0; i < typedArrayByteLength; i++) {\\n                  words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;\\n                }\\n                superInit.call(this, words, typedArrayByteLength);\\n              } else {\\n                superInit.apply(this, arguments);\\n              }\\n            };\\n            subInit.prototype = WordArray;\\n          })();\\n          return CryptoJS.lib.WordArray;\\n        });\\n      })(libTypedarrays);\\n      return libTypedarrays.exports;\\n    }\\n\\n    var encUtf16 = {exports: {}};\\n\\n    var hasRequiredEncUtf16;\\n    function requireEncUtf16() {\\n      if (hasRequiredEncUtf16) return encUtf16.exports;\\n      hasRequiredEncUtf16 = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var C_enc = C.enc;\\n            C_enc.Utf16 = C_enc.Utf16BE = {\\n              stringify: function (wordArray) {\\n                var words = wordArray.words;\\n                var sigBytes = wordArray.sigBytes;\\n                var utf16Chars = [];\\n                for (var i = 0; i < sigBytes; i += 2) {\\n                  var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;\\n                  utf16Chars.push(String.fromCharCode(codePoint));\\n                }\\n                return utf16Chars.join('');\\n              },\\n              parse: function (utf16Str) {\\n                var utf16StrLength = utf16Str.length;\\n                var words = [];\\n                for (var i = 0; i < utf16StrLength; i++) {\\n                  words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;\\n                }\\n                return WordArray.create(words, utf16StrLength * 2);\\n              }\\n            };\\n            C_enc.Utf16LE = {\\n              stringify: function (wordArray) {\\n                var words = wordArray.words;\\n                var sigBytes = wordArray.sigBytes;\\n                var utf16Chars = [];\\n                for (var i = 0; i < sigBytes; i += 2) {\\n                  var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);\\n                  utf16Chars.push(String.fromCharCode(codePoint));\\n                }\\n                return utf16Chars.join('');\\n              },\\n              parse: function (utf16Str) {\\n                var utf16StrLength = utf16Str.length;\\n                var words = [];\\n                for (var i = 0; i < utf16StrLength; i++) {\\n                  words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);\\n                }\\n                return WordArray.create(words, utf16StrLength * 2);\\n              }\\n            };\\n            function swapEndian(word) {\\n              return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;\\n            }\\n          })();\\n          return CryptoJS.enc.Utf16;\\n        });\\n      })(encUtf16);\\n      return encUtf16.exports;\\n    }\\n\\n    var encBase64 = {exports: {}};\\n\\n    var hasRequiredEncBase64;\\n    function requireEncBase64() {\\n      if (hasRequiredEncBase64) return encBase64.exports;\\n      hasRequiredEncBase64 = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var C_enc = C.enc;\\n            C_enc.Base64 = {\\n              stringify: function (wordArray) {\\n                var words = wordArray.words;\\n                var sigBytes = wordArray.sigBytes;\\n                var map = this._map;\\n                wordArray.clamp();\\n                var base64Chars = [];\\n                for (var i = 0; i < sigBytes; i += 3) {\\n                  var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\\n                  var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;\\n                  var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;\\n                  var triplet = byte1 << 16 | byte2 << 8 | byte3;\\n                  for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {\\n                    base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));\\n                  }\\n                }\\n                var paddingChar = map.charAt(64);\\n                if (paddingChar) {\\n                  while (base64Chars.length % 4) {\\n                    base64Chars.push(paddingChar);\\n                  }\\n                }\\n                return base64Chars.join('');\\n              },\\n              parse: function (base64Str) {\\n                var base64StrLength = base64Str.length;\\n                var map = this._map;\\n                var reverseMap = this._reverseMap;\\n                if (!reverseMap) {\\n                  reverseMap = this._reverseMap = [];\\n                  for (var j = 0; j < map.length; j++) {\\n                    reverseMap[map.charCodeAt(j)] = j;\\n                  }\\n                }\\n                var paddingChar = map.charAt(64);\\n                if (paddingChar) {\\n                  var paddingIndex = base64Str.indexOf(paddingChar);\\n                  if (paddingIndex !== -1) {\\n                    base64StrLength = paddingIndex;\\n                  }\\n                }\\n                return parseLoop(base64Str, base64StrLength, reverseMap);\\n              },\\n              _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\\n            };\\n            function parseLoop(base64Str, base64StrLength, reverseMap) {\\n              var words = [];\\n              var nBytes = 0;\\n              for (var i = 0; i < base64StrLength; i++) {\\n                if (i % 4) {\\n                  var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;\\n                  var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;\\n                  var bitsCombined = bits1 | bits2;\\n                  words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;\\n                  nBytes++;\\n                }\\n              }\\n              return WordArray.create(words, nBytes);\\n            }\\n          })();\\n          return CryptoJS.enc.Base64;\\n        });\\n      })(encBase64);\\n      return encBase64.exports;\\n    }\\n\\n    var encBase64url = {exports: {}};\\n\\n    var hasRequiredEncBase64url;\\n    function requireEncBase64url() {\\n      if (hasRequiredEncBase64url) return encBase64url.exports;\\n      hasRequiredEncBase64url = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var C_enc = C.enc;\\n            C_enc.Base64url = {\\n              stringify: function (wordArray, urlSafe = true) {\\n                var words = wordArray.words;\\n                var sigBytes = wordArray.sigBytes;\\n                var map = urlSafe ? this._safe_map : this._map;\\n                wordArray.clamp();\\n                var base64Chars = [];\\n                for (var i = 0; i < sigBytes; i += 3) {\\n                  var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\\n                  var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;\\n                  var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;\\n                  var triplet = byte1 << 16 | byte2 << 8 | byte3;\\n                  for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {\\n                    base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));\\n                  }\\n                }\\n                var paddingChar = map.charAt(64);\\n                if (paddingChar) {\\n                  while (base64Chars.length % 4) {\\n                    base64Chars.push(paddingChar);\\n                  }\\n                }\\n                return base64Chars.join('');\\n              },\\n              parse: function (base64Str, urlSafe = true) {\\n                var base64StrLength = base64Str.length;\\n                var map = urlSafe ? this._safe_map : this._map;\\n                var reverseMap = this._reverseMap;\\n                if (!reverseMap) {\\n                  reverseMap = this._reverseMap = [];\\n                  for (var j = 0; j < map.length; j++) {\\n                    reverseMap[map.charCodeAt(j)] = j;\\n                  }\\n                }\\n                var paddingChar = map.charAt(64);\\n                if (paddingChar) {\\n                  var paddingIndex = base64Str.indexOf(paddingChar);\\n                  if (paddingIndex !== -1) {\\n                    base64StrLength = paddingIndex;\\n                  }\\n                }\\n                return parseLoop(base64Str, base64StrLength, reverseMap);\\n              },\\n              _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\\n              _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'\\n            };\\n            function parseLoop(base64Str, base64StrLength, reverseMap) {\\n              var words = [];\\n              var nBytes = 0;\\n              for (var i = 0; i < base64StrLength; i++) {\\n                if (i % 4) {\\n                  var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;\\n                  var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;\\n                  var bitsCombined = bits1 | bits2;\\n                  words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;\\n                  nBytes++;\\n                }\\n              }\\n              return WordArray.create(words, nBytes);\\n            }\\n          })();\\n          return CryptoJS.enc.Base64url;\\n        });\\n      })(encBase64url);\\n      return encBase64url.exports;\\n    }\\n\\n    var md5 = {exports: {}};\\n\\n    var hasRequiredMd5;\\n    function requireMd5() {\\n      if (hasRequiredMd5) return md5.exports;\\n      hasRequiredMd5 = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function (Math) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var Hasher = C_lib.Hasher;\\n            var C_algo = C.algo;\\n            var T = [];\\n            (function () {\\n              for (var i = 0; i < 64; i++) {\\n                T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;\\n              }\\n            })();\\n            var MD5 = C_algo.MD5 = Hasher.extend({\\n              _doReset: function () {\\n                this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                for (var i = 0; i < 16; i++) {\\n                  var offset_i = offset + i;\\n                  var M_offset_i = M[offset_i];\\n                  M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;\\n                }\\n                var H = this._hash.words;\\n                var M_offset_0 = M[offset + 0];\\n                var M_offset_1 = M[offset + 1];\\n                var M_offset_2 = M[offset + 2];\\n                var M_offset_3 = M[offset + 3];\\n                var M_offset_4 = M[offset + 4];\\n                var M_offset_5 = M[offset + 5];\\n                var M_offset_6 = M[offset + 6];\\n                var M_offset_7 = M[offset + 7];\\n                var M_offset_8 = M[offset + 8];\\n                var M_offset_9 = M[offset + 9];\\n                var M_offset_10 = M[offset + 10];\\n                var M_offset_11 = M[offset + 11];\\n                var M_offset_12 = M[offset + 12];\\n                var M_offset_13 = M[offset + 13];\\n                var M_offset_14 = M[offset + 14];\\n                var M_offset_15 = M[offset + 15];\\n                var a = H[0];\\n                var b = H[1];\\n                var c = H[2];\\n                var d = H[3];\\n                a = FF(a, b, c, d, M_offset_0, 7, T[0]);\\n                d = FF(d, a, b, c, M_offset_1, 12, T[1]);\\n                c = FF(c, d, a, b, M_offset_2, 17, T[2]);\\n                b = FF(b, c, d, a, M_offset_3, 22, T[3]);\\n                a = FF(a, b, c, d, M_offset_4, 7, T[4]);\\n                d = FF(d, a, b, c, M_offset_5, 12, T[5]);\\n                c = FF(c, d, a, b, M_offset_6, 17, T[6]);\\n                b = FF(b, c, d, a, M_offset_7, 22, T[7]);\\n                a = FF(a, b, c, d, M_offset_8, 7, T[8]);\\n                d = FF(d, a, b, c, M_offset_9, 12, T[9]);\\n                c = FF(c, d, a, b, M_offset_10, 17, T[10]);\\n                b = FF(b, c, d, a, M_offset_11, 22, T[11]);\\n                a = FF(a, b, c, d, M_offset_12, 7, T[12]);\\n                d = FF(d, a, b, c, M_offset_13, 12, T[13]);\\n                c = FF(c, d, a, b, M_offset_14, 17, T[14]);\\n                b = FF(b, c, d, a, M_offset_15, 22, T[15]);\\n                a = GG(a, b, c, d, M_offset_1, 5, T[16]);\\n                d = GG(d, a, b, c, M_offset_6, 9, T[17]);\\n                c = GG(c, d, a, b, M_offset_11, 14, T[18]);\\n                b = GG(b, c, d, a, M_offset_0, 20, T[19]);\\n                a = GG(a, b, c, d, M_offset_5, 5, T[20]);\\n                d = GG(d, a, b, c, M_offset_10, 9, T[21]);\\n                c = GG(c, d, a, b, M_offset_15, 14, T[22]);\\n                b = GG(b, c, d, a, M_offset_4, 20, T[23]);\\n                a = GG(a, b, c, d, M_offset_9, 5, T[24]);\\n                d = GG(d, a, b, c, M_offset_14, 9, T[25]);\\n                c = GG(c, d, a, b, M_offset_3, 14, T[26]);\\n                b = GG(b, c, d, a, M_offset_8, 20, T[27]);\\n                a = GG(a, b, c, d, M_offset_13, 5, T[28]);\\n                d = GG(d, a, b, c, M_offset_2, 9, T[29]);\\n                c = GG(c, d, a, b, M_offset_7, 14, T[30]);\\n                b = GG(b, c, d, a, M_offset_12, 20, T[31]);\\n                a = HH(a, b, c, d, M_offset_5, 4, T[32]);\\n                d = HH(d, a, b, c, M_offset_8, 11, T[33]);\\n                c = HH(c, d, a, b, M_offset_11, 16, T[34]);\\n                b = HH(b, c, d, a, M_offset_14, 23, T[35]);\\n                a = HH(a, b, c, d, M_offset_1, 4, T[36]);\\n                d = HH(d, a, b, c, M_offset_4, 11, T[37]);\\n                c = HH(c, d, a, b, M_offset_7, 16, T[38]);\\n                b = HH(b, c, d, a, M_offset_10, 23, T[39]);\\n                a = HH(a, b, c, d, M_offset_13, 4, T[40]);\\n                d = HH(d, a, b, c, M_offset_0, 11, T[41]);\\n                c = HH(c, d, a, b, M_offset_3, 16, T[42]);\\n                b = HH(b, c, d, a, M_offset_6, 23, T[43]);\\n                a = HH(a, b, c, d, M_offset_9, 4, T[44]);\\n                d = HH(d, a, b, c, M_offset_12, 11, T[45]);\\n                c = HH(c, d, a, b, M_offset_15, 16, T[46]);\\n                b = HH(b, c, d, a, M_offset_2, 23, T[47]);\\n                a = II(a, b, c, d, M_offset_0, 6, T[48]);\\n                d = II(d, a, b, c, M_offset_7, 10, T[49]);\\n                c = II(c, d, a, b, M_offset_14, 15, T[50]);\\n                b = II(b, c, d, a, M_offset_5, 21, T[51]);\\n                a = II(a, b, c, d, M_offset_12, 6, T[52]);\\n                d = II(d, a, b, c, M_offset_3, 10, T[53]);\\n                c = II(c, d, a, b, M_offset_10, 15, T[54]);\\n                b = II(b, c, d, a, M_offset_1, 21, T[55]);\\n                a = II(a, b, c, d, M_offset_8, 6, T[56]);\\n                d = II(d, a, b, c, M_offset_15, 10, T[57]);\\n                c = II(c, d, a, b, M_offset_6, 15, T[58]);\\n                b = II(b, c, d, a, M_offset_13, 21, T[59]);\\n                a = II(a, b, c, d, M_offset_4, 6, T[60]);\\n                d = II(d, a, b, c, M_offset_11, 10, T[61]);\\n                c = II(c, d, a, b, M_offset_2, 15, T[62]);\\n                b = II(b, c, d, a, M_offset_9, 21, T[63]);\\n                H[0] = H[0] + a | 0;\\n                H[1] = H[1] + b | 0;\\n                H[2] = H[2] + c | 0;\\n                H[3] = H[3] + d | 0;\\n              },\\n              _doFinalize: function () {\\n                var data = this._data;\\n                var dataWords = data.words;\\n                var nBitsTotal = this._nDataBytes * 8;\\n                var nBitsLeft = data.sigBytes * 8;\\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\\n                var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\\n                var nBitsTotalL = nBitsTotal;\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;\\n                data.sigBytes = (dataWords.length + 1) * 4;\\n                this._process();\\n                var hash = this._hash;\\n                var H = hash.words;\\n                for (var i = 0; i < 4; i++) {\\n                  var H_i = H[i];\\n                  H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;\\n                }\\n                return hash;\\n              },\\n              clone: function () {\\n                var clone = Hasher.clone.call(this);\\n                clone._hash = this._hash.clone();\\n                return clone;\\n              }\\n            });\\n            function FF(a, b, c, d, x, s, t) {\\n              var n = a + (b & c | ~b & d) + x + t;\\n              return (n << s | n >>> 32 - s) + b;\\n            }\\n            function GG(a, b, c, d, x, s, t) {\\n              var n = a + (b & d | c & ~d) + x + t;\\n              return (n << s | n >>> 32 - s) + b;\\n            }\\n            function HH(a, b, c, d, x, s, t) {\\n              var n = a + (b ^ c ^ d) + x + t;\\n              return (n << s | n >>> 32 - s) + b;\\n            }\\n            function II(a, b, c, d, x, s, t) {\\n              var n = a + (c ^ (b | ~d)) + x + t;\\n              return (n << s | n >>> 32 - s) + b;\\n            }\\n            C.MD5 = Hasher._createHelper(MD5);\\n            C.HmacMD5 = Hasher._createHmacHelper(MD5);\\n          })(Math);\\n          return CryptoJS.MD5;\\n        });\\n      })(md5);\\n      return md5.exports;\\n    }\\n\\n    var sha1 = {exports: {}};\\n\\n    var hasRequiredSha1;\\n    function requireSha1() {\\n      if (hasRequiredSha1) return sha1.exports;\\n      hasRequiredSha1 = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var Hasher = C_lib.Hasher;\\n            var C_algo = C.algo;\\n            var W = [];\\n            var SHA1 = C_algo.SHA1 = Hasher.extend({\\n              _doReset: function () {\\n                this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                var H = this._hash.words;\\n                var a = H[0];\\n                var b = H[1];\\n                var c = H[2];\\n                var d = H[3];\\n                var e = H[4];\\n                for (var i = 0; i < 80; i++) {\\n                  if (i < 16) {\\n                    W[i] = M[offset + i] | 0;\\n                  } else {\\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\\n                    W[i] = n << 1 | n >>> 31;\\n                  }\\n                  var t = (a << 5 | a >>> 27) + e + W[i];\\n                  if (i < 20) {\\n                    t += (b & c | ~b & d) + 0x5a827999;\\n                  } else if (i < 40) {\\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\\n                  } else if (i < 60) {\\n                    t += (b & c | b & d | c & d) - 0x70e44324;\\n                  } else {\\n                      t += (b ^ c ^ d) - 0x359d3e2a;\\n                    }\\n                  e = d;\\n                  d = c;\\n                  c = b << 30 | b >>> 2;\\n                  b = a;\\n                  a = t;\\n                }\\n                H[0] = H[0] + a | 0;\\n                H[1] = H[1] + b | 0;\\n                H[2] = H[2] + c | 0;\\n                H[3] = H[3] + d | 0;\\n                H[4] = H[4] + e | 0;\\n              },\\n              _doFinalize: function () {\\n                var data = this._data;\\n                var dataWords = data.words;\\n                var nBitsTotal = this._nDataBytes * 8;\\n                var nBitsLeft = data.sigBytes * 8;\\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\\n                data.sigBytes = dataWords.length * 4;\\n                this._process();\\n                return this._hash;\\n              },\\n              clone: function () {\\n                var clone = Hasher.clone.call(this);\\n                clone._hash = this._hash.clone();\\n                return clone;\\n              }\\n            });\\n            C.SHA1 = Hasher._createHelper(SHA1);\\n            C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\\n          })();\\n          return CryptoJS.SHA1;\\n        });\\n      })(sha1);\\n      return sha1.exports;\\n    }\\n\\n    var sha256 = {exports: {}};\\n\\n    var hasRequiredSha256;\\n    function requireSha256() {\\n      if (hasRequiredSha256) return sha256.exports;\\n      hasRequiredSha256 = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function (Math) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var Hasher = C_lib.Hasher;\\n            var C_algo = C.algo;\\n            var H = [];\\n            var K = [];\\n            (function () {\\n              function isPrime(n) {\\n                var sqrtN = Math.sqrt(n);\\n                for (var factor = 2; factor <= sqrtN; factor++) {\\n                  if (!(n % factor)) {\\n                    return false;\\n                  }\\n                }\\n                return true;\\n              }\\n              function getFractionalBits(n) {\\n                return (n - (n | 0)) * 0x100000000 | 0;\\n              }\\n              var n = 2;\\n              var nPrime = 0;\\n              while (nPrime < 64) {\\n                if (isPrime(n)) {\\n                  if (nPrime < 8) {\\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\\n                  }\\n                  K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\\n                  nPrime++;\\n                }\\n                n++;\\n              }\\n            })();\\n            var W = [];\\n            var SHA256 = C_algo.SHA256 = Hasher.extend({\\n              _doReset: function () {\\n                this._hash = new WordArray.init(H.slice(0));\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                var H = this._hash.words;\\n                var a = H[0];\\n                var b = H[1];\\n                var c = H[2];\\n                var d = H[3];\\n                var e = H[4];\\n                var f = H[5];\\n                var g = H[6];\\n                var h = H[7];\\n                for (var i = 0; i < 64; i++) {\\n                  if (i < 16) {\\n                    W[i] = M[offset + i] | 0;\\n                  } else {\\n                    var gamma0x = W[i - 15];\\n                    var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;\\n                    var gamma1x = W[i - 2];\\n                    var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\\n                  }\\n                  var ch = e & f ^ ~e & g;\\n                  var maj = a & b ^ a & c ^ b & c;\\n                  var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\\n                  var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\\n                  var t1 = h + sigma1 + ch + K[i] + W[i];\\n                  var t2 = sigma0 + maj;\\n                  h = g;\\n                  g = f;\\n                  f = e;\\n                  e = d + t1 | 0;\\n                  d = c;\\n                  c = b;\\n                  b = a;\\n                  a = t1 + t2 | 0;\\n                }\\n                H[0] = H[0] + a | 0;\\n                H[1] = H[1] + b | 0;\\n                H[2] = H[2] + c | 0;\\n                H[3] = H[3] + d | 0;\\n                H[4] = H[4] + e | 0;\\n                H[5] = H[5] + f | 0;\\n                H[6] = H[6] + g | 0;\\n                H[7] = H[7] + h | 0;\\n              },\\n              _doFinalize: function () {\\n                var data = this._data;\\n                var dataWords = data.words;\\n                var nBitsTotal = this._nDataBytes * 8;\\n                var nBitsLeft = data.sigBytes * 8;\\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\\n                data.sigBytes = dataWords.length * 4;\\n                this._process();\\n                return this._hash;\\n              },\\n              clone: function () {\\n                var clone = Hasher.clone.call(this);\\n                clone._hash = this._hash.clone();\\n                return clone;\\n              }\\n            });\\n            C.SHA256 = Hasher._createHelper(SHA256);\\n            C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\\n          })(Math);\\n          return CryptoJS.SHA256;\\n        });\\n      })(sha256);\\n      return sha256.exports;\\n    }\\n\\n    var sha224 = {exports: {}};\\n\\n    var hasRequiredSha224;\\n    function requireSha224() {\\n      if (hasRequiredSha224) return sha224.exports;\\n      hasRequiredSha224 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireSha256());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var C_algo = C.algo;\\n            var SHA256 = C_algo.SHA256;\\n            var SHA224 = C_algo.SHA224 = SHA256.extend({\\n              _doReset: function () {\\n                this._hash = new WordArray.init([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);\\n              },\\n              _doFinalize: function () {\\n                var hash = SHA256._doFinalize.call(this);\\n                hash.sigBytes -= 4;\\n                return hash;\\n              }\\n            });\\n            C.SHA224 = SHA256._createHelper(SHA224);\\n            C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\\n          })();\\n          return CryptoJS.SHA224;\\n        });\\n      })(sha224);\\n      return sha224.exports;\\n    }\\n\\n    var sha512 = {exports: {}};\\n\\n    var hasRequiredSha512;\\n    function requireSha512() {\\n      if (hasRequiredSha512) return sha512.exports;\\n      hasRequiredSha512 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireX64Core());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var Hasher = C_lib.Hasher;\\n            var C_x64 = C.x64;\\n            var X64Word = C_x64.Word;\\n            var X64WordArray = C_x64.WordArray;\\n            var C_algo = C.algo;\\n            function X64Word_create() {\\n              return X64Word.create.apply(X64Word, arguments);\\n            }\\n            var K = [X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd), X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc), X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019), X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118), X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe), X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2), X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1), X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694), X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3), X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65), X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483), X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5), X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210), X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4), X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725), X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70), X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926), X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df), X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8), X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b), X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001), X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30), X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910), X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8), X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53), X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8), X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb), X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3), X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60), X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec), X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9), X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b), X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207), X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178), X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6), X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b), X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493), X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c), X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a), X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];\\n            var W = [];\\n            (function () {\\n              for (var i = 0; i < 80; i++) {\\n                W[i] = X64Word_create();\\n              }\\n            })();\\n            var SHA512 = C_algo.SHA512 = Hasher.extend({\\n              _doReset: function () {\\n                this._hash = new X64WordArray.init([new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b), new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1), new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f), new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                var H = this._hash.words;\\n                var H0 = H[0];\\n                var H1 = H[1];\\n                var H2 = H[2];\\n                var H3 = H[3];\\n                var H4 = H[4];\\n                var H5 = H[5];\\n                var H6 = H[6];\\n                var H7 = H[7];\\n                var H0h = H0.high;\\n                var H0l = H0.low;\\n                var H1h = H1.high;\\n                var H1l = H1.low;\\n                var H2h = H2.high;\\n                var H2l = H2.low;\\n                var H3h = H3.high;\\n                var H3l = H3.low;\\n                var H4h = H4.high;\\n                var H4l = H4.low;\\n                var H5h = H5.high;\\n                var H5l = H5.low;\\n                var H6h = H6.high;\\n                var H6l = H6.low;\\n                var H7h = H7.high;\\n                var H7l = H7.low;\\n                var ah = H0h;\\n                var al = H0l;\\n                var bh = H1h;\\n                var bl = H1l;\\n                var ch = H2h;\\n                var cl = H2l;\\n                var dh = H3h;\\n                var dl = H3l;\\n                var eh = H4h;\\n                var el = H4l;\\n                var fh = H5h;\\n                var fl = H5l;\\n                var gh = H6h;\\n                var gl = H6l;\\n                var hh = H7h;\\n                var hl = H7l;\\n                for (var i = 0; i < 80; i++) {\\n                  var Wil;\\n                  var Wih;\\n                  var Wi = W[i];\\n                  if (i < 16) {\\n                    Wih = Wi.high = M[offset + i * 2] | 0;\\n                    Wil = Wi.low = M[offset + i * 2 + 1] | 0;\\n                  } else {\\n                    var gamma0x = W[i - 15];\\n                    var gamma0xh = gamma0x.high;\\n                    var gamma0xl = gamma0x.low;\\n                    var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;\\n                    var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);\\n                    var gamma1x = W[i - 2];\\n                    var gamma1xh = gamma1x.high;\\n                    var gamma1xl = gamma1x.low;\\n                    var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;\\n                    var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);\\n                    var Wi7 = W[i - 7];\\n                    var Wi7h = Wi7.high;\\n                    var Wi7l = Wi7.low;\\n                    var Wi16 = W[i - 16];\\n                    var Wi16h = Wi16.high;\\n                    var Wi16l = Wi16.low;\\n                    Wil = gamma0l + Wi7l;\\n                    Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);\\n                    Wil = Wil + gamma1l;\\n                    Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);\\n                    Wil = Wil + Wi16l;\\n                    Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);\\n                    Wi.high = Wih;\\n                    Wi.low = Wil;\\n                  }\\n                  var chh = eh & fh ^ ~eh & gh;\\n                  var chl = el & fl ^ ~el & gl;\\n                  var majh = ah & bh ^ ah & ch ^ bh & ch;\\n                  var majl = al & bl ^ al & cl ^ bl & cl;\\n                  var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);\\n                  var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);\\n                  var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);\\n                  var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);\\n                  var Ki = K[i];\\n                  var Kih = Ki.high;\\n                  var Kil = Ki.low;\\n                  var t1l = hl + sigma1l;\\n                  var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);\\n                  var t1l = t1l + chl;\\n                  var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);\\n                  var t1l = t1l + Kil;\\n                  var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);\\n                  var t1l = t1l + Wil;\\n                  var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);\\n                  var t2l = sigma0l + majl;\\n                  var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);\\n                  hh = gh;\\n                  hl = gl;\\n                  gh = fh;\\n                  gl = fl;\\n                  fh = eh;\\n                  fl = el;\\n                  el = dl + t1l | 0;\\n                  eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;\\n                  dh = ch;\\n                  dl = cl;\\n                  ch = bh;\\n                  cl = bl;\\n                  bh = ah;\\n                  bl = al;\\n                  al = t1l + t2l | 0;\\n                  ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;\\n                }\\n                H0l = H0.low = H0l + al;\\n                H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);\\n                H1l = H1.low = H1l + bl;\\n                H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);\\n                H2l = H2.low = H2l + cl;\\n                H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);\\n                H3l = H3.low = H3l + dl;\\n                H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);\\n                H4l = H4.low = H4l + el;\\n                H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);\\n                H5l = H5.low = H5l + fl;\\n                H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);\\n                H6l = H6.low = H6l + gl;\\n                H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);\\n                H7l = H7.low = H7l + hl;\\n                H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);\\n              },\\n              _doFinalize: function () {\\n                var data = this._data;\\n                var dataWords = data.words;\\n                var nBitsTotal = this._nDataBytes * 8;\\n                var nBitsLeft = data.sigBytes * 8;\\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\\n                dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\\n                dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;\\n                data.sigBytes = dataWords.length * 4;\\n                this._process();\\n                var hash = this._hash.toX32();\\n                return hash;\\n              },\\n              clone: function () {\\n                var clone = Hasher.clone.call(this);\\n                clone._hash = this._hash.clone();\\n                return clone;\\n              },\\n              blockSize: 1024 / 32\\n            });\\n            C.SHA512 = Hasher._createHelper(SHA512);\\n            C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\\n          })();\\n          return CryptoJS.SHA512;\\n        });\\n      })(sha512);\\n      return sha512.exports;\\n    }\\n\\n    var sha384 = {exports: {}};\\n\\n    var hasRequiredSha384;\\n    function requireSha384() {\\n      if (hasRequiredSha384) return sha384.exports;\\n      hasRequiredSha384 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireX64Core(), requireSha512());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_x64 = C.x64;\\n            var X64Word = C_x64.Word;\\n            var X64WordArray = C_x64.WordArray;\\n            var C_algo = C.algo;\\n            var SHA512 = C_algo.SHA512;\\n            var SHA384 = C_algo.SHA384 = SHA512.extend({\\n              _doReset: function () {\\n                this._hash = new X64WordArray.init([new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507), new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939), new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511), new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);\\n              },\\n              _doFinalize: function () {\\n                var hash = SHA512._doFinalize.call(this);\\n                hash.sigBytes -= 16;\\n                return hash;\\n              }\\n            });\\n            C.SHA384 = SHA512._createHelper(SHA384);\\n            C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\\n          })();\\n          return CryptoJS.SHA384;\\n        });\\n      })(sha384);\\n      return sha384.exports;\\n    }\\n\\n    var sha3 = {exports: {}};\\n\\n    var hasRequiredSha3;\\n    function requireSha3() {\\n      if (hasRequiredSha3) return sha3.exports;\\n      hasRequiredSha3 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireX64Core());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function (Math) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var Hasher = C_lib.Hasher;\\n            var C_x64 = C.x64;\\n            var X64Word = C_x64.Word;\\n            var C_algo = C.algo;\\n            var RHO_OFFSETS = [];\\n            var PI_INDEXES = [];\\n            var ROUND_CONSTANTS = [];\\n            (function () {\\n              var x = 1,\\n                y = 0;\\n              for (var t = 0; t < 24; t++) {\\n                RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;\\n                var newX = y % 5;\\n                var newY = (2 * x + 3 * y) % 5;\\n                x = newX;\\n                y = newY;\\n              }\\n              for (var x = 0; x < 5; x++) {\\n                for (var y = 0; y < 5; y++) {\\n                  PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;\\n                }\\n              }\\n              var LFSR = 0x01;\\n              for (var i = 0; i < 24; i++) {\\n                var roundConstantMsw = 0;\\n                var roundConstantLsw = 0;\\n                for (var j = 0; j < 7; j++) {\\n                  if (LFSR & 0x01) {\\n                    var bitPosition = (1 << j) - 1;\\n                    if (bitPosition < 32) {\\n                      roundConstantLsw ^= 1 << bitPosition;\\n                    } else {\\n                        roundConstantMsw ^= 1 << bitPosition - 32;\\n                      }\\n                  }\\n                  if (LFSR & 0x80) {\\n                    LFSR = LFSR << 1 ^ 0x71;\\n                  } else {\\n                    LFSR <<= 1;\\n                  }\\n                }\\n                ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\\n              }\\n            })();\\n            var T = [];\\n            (function () {\\n              for (var i = 0; i < 25; i++) {\\n                T[i] = X64Word.create();\\n              }\\n            })();\\n            var SHA3 = C_algo.SHA3 = Hasher.extend({\\n              cfg: Hasher.cfg.extend({\\n                outputLength: 512\\n              }),\\n              _doReset: function () {\\n                var state = this._state = [];\\n                for (var i = 0; i < 25; i++) {\\n                  state[i] = new X64Word.init();\\n                }\\n                this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                var state = this._state;\\n                var nBlockSizeLanes = this.blockSize / 2;\\n                for (var i = 0; i < nBlockSizeLanes; i++) {\\n                  var M2i = M[offset + 2 * i];\\n                  var M2i1 = M[offset + 2 * i + 1];\\n                  M2i = (M2i << 8 | M2i >>> 24) & 0x00ff00ff | (M2i << 24 | M2i >>> 8) & 0xff00ff00;\\n                  M2i1 = (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff | (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;\\n                  var lane = state[i];\\n                  lane.high ^= M2i1;\\n                  lane.low ^= M2i;\\n                }\\n                for (var round = 0; round < 24; round++) {\\n                  for (var x = 0; x < 5; x++) {\\n                    var tMsw = 0,\\n                      tLsw = 0;\\n                    for (var y = 0; y < 5; y++) {\\n                      var lane = state[x + 5 * y];\\n                      tMsw ^= lane.high;\\n                      tLsw ^= lane.low;\\n                    }\\n                    var Tx = T[x];\\n                    Tx.high = tMsw;\\n                    Tx.low = tLsw;\\n                  }\\n                  for (var x = 0; x < 5; x++) {\\n                    var Tx4 = T[(x + 4) % 5];\\n                    var Tx1 = T[(x + 1) % 5];\\n                    var Tx1Msw = Tx1.high;\\n                    var Tx1Lsw = Tx1.low;\\n                    var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);\\n                    var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);\\n                    for (var y = 0; y < 5; y++) {\\n                      var lane = state[x + 5 * y];\\n                      lane.high ^= tMsw;\\n                      lane.low ^= tLsw;\\n                    }\\n                  }\\n                  for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\\n                    var tMsw;\\n                    var tLsw;\\n                    var lane = state[laneIndex];\\n                    var laneMsw = lane.high;\\n                    var laneLsw = lane.low;\\n                    var rhoOffset = RHO_OFFSETS[laneIndex];\\n                    if (rhoOffset < 32) {\\n                      tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;\\n                      tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;\\n                    } else {\\n                        tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;\\n                        tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;\\n                      }\\n                    var TPiLane = T[PI_INDEXES[laneIndex]];\\n                    TPiLane.high = tMsw;\\n                    TPiLane.low = tLsw;\\n                  }\\n                  var T0 = T[0];\\n                  var state0 = state[0];\\n                  T0.high = state0.high;\\n                  T0.low = state0.low;\\n                  for (var x = 0; x < 5; x++) {\\n                    for (var y = 0; y < 5; y++) {\\n                      var laneIndex = x + 5 * y;\\n                      var lane = state[laneIndex];\\n                      var TLane = T[laneIndex];\\n                      var Tx1Lane = T[(x + 1) % 5 + 5 * y];\\n                      var Tx2Lane = T[(x + 2) % 5 + 5 * y];\\n                      lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;\\n                      lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;\\n                    }\\n                  }\\n                  var lane = state[0];\\n                  var roundConstant = ROUND_CONSTANTS[round];\\n                  lane.high ^= roundConstant.high;\\n                  lane.low ^= roundConstant.low;\\n                }\\n              },\\n              _doFinalize: function () {\\n                var data = this._data;\\n                var dataWords = data.words;\\n                this._nDataBytes * 8;\\n                var nBitsLeft = data.sigBytes * 8;\\n                var blockSizeBits = this.blockSize * 32;\\n                dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;\\n                dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;\\n                data.sigBytes = dataWords.length * 4;\\n                this._process();\\n                var state = this._state;\\n                var outputLengthBytes = this.cfg.outputLength / 8;\\n                var outputLengthLanes = outputLengthBytes / 8;\\n                var hashWords = [];\\n                for (var i = 0; i < outputLengthLanes; i++) {\\n                  var lane = state[i];\\n                  var laneMsw = lane.high;\\n                  var laneLsw = lane.low;\\n                  laneMsw = (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff | (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;\\n                  laneLsw = (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff | (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;\\n                  hashWords.push(laneLsw);\\n                  hashWords.push(laneMsw);\\n                }\\n                return new WordArray.init(hashWords, outputLengthBytes);\\n              },\\n              clone: function () {\\n                var clone = Hasher.clone.call(this);\\n                var state = clone._state = this._state.slice(0);\\n                for (var i = 0; i < 25; i++) {\\n                  state[i] = state[i].clone();\\n                }\\n                return clone;\\n              }\\n            });\\n            C.SHA3 = Hasher._createHelper(SHA3);\\n            C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\\n          })(Math);\\n          return CryptoJS.SHA3;\\n        });\\n      })(sha3);\\n      return sha3.exports;\\n    }\\n\\n    var ripemd160 = {exports: {}};\\n\\n    var hasRequiredRipemd160;\\n    function requireRipemd160() {\\n      if (hasRequiredRipemd160) return ripemd160.exports;\\n      hasRequiredRipemd160 = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          /** @preserve\\n          (c) 2012 by Cédric Mesnil. All rights reserved.\\n          \\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\n          \\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\n              - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\n          \\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n          */\\n          (function (Math) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var Hasher = C_lib.Hasher;\\n            var C_algo = C.algo;\\n            var _zl = WordArray.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\\n            var _zr = WordArray.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\\n            var _sl = WordArray.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\\n            var _sr = WordArray.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\\n            var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\\n            var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\\n            var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\\n              _doReset: function () {\\n                this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                for (var i = 0; i < 16; i++) {\\n                  var offset_i = offset + i;\\n                  var M_offset_i = M[offset_i];\\n                  M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;\\n                }\\n                var H = this._hash.words;\\n                var hl = _hl.words;\\n                var hr = _hr.words;\\n                var zl = _zl.words;\\n                var zr = _zr.words;\\n                var sl = _sl.words;\\n                var sr = _sr.words;\\n                var al, bl, cl, dl, el;\\n                var ar, br, cr, dr, er;\\n                ar = al = H[0];\\n                br = bl = H[1];\\n                cr = cl = H[2];\\n                dr = dl = H[3];\\n                er = el = H[4];\\n                var t;\\n                for (var i = 0; i < 80; i += 1) {\\n                  t = al + M[offset + zl[i]] | 0;\\n                  if (i < 16) {\\n                    t += f1(bl, cl, dl) + hl[0];\\n                  } else if (i < 32) {\\n                    t += f2(bl, cl, dl) + hl[1];\\n                  } else if (i < 48) {\\n                    t += f3(bl, cl, dl) + hl[2];\\n                  } else if (i < 64) {\\n                    t += f4(bl, cl, dl) + hl[3];\\n                  } else {\\n                    t += f5(bl, cl, dl) + hl[4];\\n                  }\\n                  t = t | 0;\\n                  t = rotl(t, sl[i]);\\n                  t = t + el | 0;\\n                  al = el;\\n                  el = dl;\\n                  dl = rotl(cl, 10);\\n                  cl = bl;\\n                  bl = t;\\n                  t = ar + M[offset + zr[i]] | 0;\\n                  if (i < 16) {\\n                    t += f5(br, cr, dr) + hr[0];\\n                  } else if (i < 32) {\\n                    t += f4(br, cr, dr) + hr[1];\\n                  } else if (i < 48) {\\n                    t += f3(br, cr, dr) + hr[2];\\n                  } else if (i < 64) {\\n                    t += f2(br, cr, dr) + hr[3];\\n                  } else {\\n                    t += f1(br, cr, dr) + hr[4];\\n                  }\\n                  t = t | 0;\\n                  t = rotl(t, sr[i]);\\n                  t = t + er | 0;\\n                  ar = er;\\n                  er = dr;\\n                  dr = rotl(cr, 10);\\n                  cr = br;\\n                  br = t;\\n                }\\n                t = H[1] + cl + dr | 0;\\n                H[1] = H[2] + dl + er | 0;\\n                H[2] = H[3] + el + ar | 0;\\n                H[3] = H[4] + al + br | 0;\\n                H[4] = H[0] + bl + cr | 0;\\n                H[0] = t;\\n              },\\n              _doFinalize: function () {\\n                var data = this._data;\\n                var dataWords = data.words;\\n                var nBitsTotal = this._nDataBytes * 8;\\n                var nBitsLeft = data.sigBytes * 8;\\n                dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\\n                dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff | (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;\\n                data.sigBytes = (dataWords.length + 1) * 4;\\n                this._process();\\n                var hash = this._hash;\\n                var H = hash.words;\\n                for (var i = 0; i < 5; i++) {\\n                  var H_i = H[i];\\n                  H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;\\n                }\\n                return hash;\\n              },\\n              clone: function () {\\n                var clone = Hasher.clone.call(this);\\n                clone._hash = this._hash.clone();\\n                return clone;\\n              }\\n            });\\n            function f1(x, y, z) {\\n              return x ^ y ^ z;\\n            }\\n            function f2(x, y, z) {\\n              return x & y | ~x & z;\\n            }\\n            function f3(x, y, z) {\\n              return (x | ~y) ^ z;\\n            }\\n            function f4(x, y, z) {\\n              return x & z | y & ~z;\\n            }\\n            function f5(x, y, z) {\\n              return x ^ (y | ~z);\\n            }\\n            function rotl(x, n) {\\n              return x << n | x >>> 32 - n;\\n            }\\n            C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\\n            C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\\n          })();\\n          return CryptoJS.RIPEMD160;\\n        });\\n      })(ripemd160);\\n      return ripemd160.exports;\\n    }\\n\\n    var hmac = {exports: {}};\\n\\n    var hasRequiredHmac;\\n    function requireHmac() {\\n      if (hasRequiredHmac) return hmac.exports;\\n      hasRequiredHmac = 1;\\n      (function (module, exports) {\\n        (function (root, factory) {\\n          {\\n            module.exports = factory(requireCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var Base = C_lib.Base;\\n            var C_enc = C.enc;\\n            var Utf8 = C_enc.Utf8;\\n            var C_algo = C.algo;\\n            C_algo.HMAC = Base.extend({\\n              init: function (hasher, key) {\\n                hasher = this._hasher = new hasher.init();\\n                if (typeof key == 'string') {\\n                  key = Utf8.parse(key);\\n                }\\n                var hasherBlockSize = hasher.blockSize;\\n                var hasherBlockSizeBytes = hasherBlockSize * 4;\\n                if (key.sigBytes > hasherBlockSizeBytes) {\\n                  key = hasher.finalize(key);\\n                }\\n                key.clamp();\\n                var oKey = this._oKey = key.clone();\\n                var iKey = this._iKey = key.clone();\\n                var oKeyWords = oKey.words;\\n                var iKeyWords = iKey.words;\\n                for (var i = 0; i < hasherBlockSize; i++) {\\n                  oKeyWords[i] ^= 0x5c5c5c5c;\\n                  iKeyWords[i] ^= 0x36363636;\\n                }\\n                oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\\n                this.reset();\\n              },\\n              reset: function () {\\n                var hasher = this._hasher;\\n                hasher.reset();\\n                hasher.update(this._iKey);\\n              },\\n              update: function (messageUpdate) {\\n                this._hasher.update(messageUpdate);\\n                return this;\\n              },\\n              finalize: function (messageUpdate) {\\n                var hasher = this._hasher;\\n                var innerHash = hasher.finalize(messageUpdate);\\n                hasher.reset();\\n                var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\\n                return hmac;\\n              }\\n            });\\n          })();\\n        });\\n      })(hmac);\\n      return hmac.exports;\\n    }\\n\\n    var pbkdf2 = {exports: {}};\\n\\n    var hasRequiredPbkdf2;\\n    function requirePbkdf2() {\\n      if (hasRequiredPbkdf2) return pbkdf2.exports;\\n      hasRequiredPbkdf2 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireSha1(), requireHmac());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var Base = C_lib.Base;\\n            var WordArray = C_lib.WordArray;\\n            var C_algo = C.algo;\\n            var SHA1 = C_algo.SHA1;\\n            var HMAC = C_algo.HMAC;\\n            var PBKDF2 = C_algo.PBKDF2 = Base.extend({\\n              cfg: Base.extend({\\n                keySize: 128 / 32,\\n                hasher: SHA1,\\n                iterations: 1\\n              }),\\n              init: function (cfg) {\\n                this.cfg = this.cfg.extend(cfg);\\n              },\\n              compute: function (password, salt) {\\n                var cfg = this.cfg;\\n                var hmac = HMAC.create(cfg.hasher, password);\\n                var derivedKey = WordArray.create();\\n                var blockIndex = WordArray.create([0x00000001]);\\n                var derivedKeyWords = derivedKey.words;\\n                var blockIndexWords = blockIndex.words;\\n                var keySize = cfg.keySize;\\n                var iterations = cfg.iterations;\\n                while (derivedKeyWords.length < keySize) {\\n                  var block = hmac.update(salt).finalize(blockIndex);\\n                  hmac.reset();\\n                  var blockWords = block.words;\\n                  var blockWordsLength = blockWords.length;\\n                  var intermediate = block;\\n                  for (var i = 1; i < iterations; i++) {\\n                    intermediate = hmac.finalize(intermediate);\\n                    hmac.reset();\\n                    var intermediateWords = intermediate.words;\\n                    for (var j = 0; j < blockWordsLength; j++) {\\n                      blockWords[j] ^= intermediateWords[j];\\n                    }\\n                  }\\n                  derivedKey.concat(block);\\n                  blockIndexWords[0]++;\\n                }\\n                derivedKey.sigBytes = keySize * 4;\\n                return derivedKey;\\n              }\\n            });\\n            C.PBKDF2 = function (password, salt, cfg) {\\n              return PBKDF2.create(cfg).compute(password, salt);\\n            };\\n          })();\\n          return CryptoJS.PBKDF2;\\n        });\\n      })(pbkdf2);\\n      return pbkdf2.exports;\\n    }\\n\\n    var evpkdf = {exports: {}};\\n\\n    var hasRequiredEvpkdf;\\n    function requireEvpkdf() {\\n      if (hasRequiredEvpkdf) return evpkdf.exports;\\n      hasRequiredEvpkdf = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireSha1(), requireHmac());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var Base = C_lib.Base;\\n            var WordArray = C_lib.WordArray;\\n            var C_algo = C.algo;\\n            var MD5 = C_algo.MD5;\\n            var EvpKDF = C_algo.EvpKDF = Base.extend({\\n              cfg: Base.extend({\\n                keySize: 128 / 32,\\n                hasher: MD5,\\n                iterations: 1\\n              }),\\n              init: function (cfg) {\\n                this.cfg = this.cfg.extend(cfg);\\n              },\\n              compute: function (password, salt) {\\n                var block;\\n                var cfg = this.cfg;\\n                var hasher = cfg.hasher.create();\\n                var derivedKey = WordArray.create();\\n                var derivedKeyWords = derivedKey.words;\\n                var keySize = cfg.keySize;\\n                var iterations = cfg.iterations;\\n                while (derivedKeyWords.length < keySize) {\\n                  if (block) {\\n                    hasher.update(block);\\n                  }\\n                  block = hasher.update(password).finalize(salt);\\n                  hasher.reset();\\n                  for (var i = 1; i < iterations; i++) {\\n                    block = hasher.finalize(block);\\n                    hasher.reset();\\n                  }\\n                  derivedKey.concat(block);\\n                }\\n                derivedKey.sigBytes = keySize * 4;\\n                return derivedKey;\\n              }\\n            });\\n            C.EvpKDF = function (password, salt, cfg) {\\n              return EvpKDF.create(cfg).compute(password, salt);\\n            };\\n          })();\\n          return CryptoJS.EvpKDF;\\n        });\\n      })(evpkdf);\\n      return evpkdf.exports;\\n    }\\n\\n    var cipherCore = {exports: {}};\\n\\n    var hasRequiredCipherCore;\\n    function requireCipherCore() {\\n      if (hasRequiredCipherCore) return cipherCore.exports;\\n      hasRequiredCipherCore = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireEvpkdf());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.lib.Cipher || function (undefined$1) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var Base = C_lib.Base;\\n            var WordArray = C_lib.WordArray;\\n            var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\\n            var C_enc = C.enc;\\n            C_enc.Utf8;\\n            var Base64 = C_enc.Base64;\\n            var C_algo = C.algo;\\n            var EvpKDF = C_algo.EvpKDF;\\n            var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\\n              cfg: Base.extend(),\\n              createEncryptor: function (key, cfg) {\\n                return this.create(this._ENC_XFORM_MODE, key, cfg);\\n              },\\n              createDecryptor: function (key, cfg) {\\n                return this.create(this._DEC_XFORM_MODE, key, cfg);\\n              },\\n              init: function (xformMode, key, cfg) {\\n                this.cfg = this.cfg.extend(cfg);\\n                this._xformMode = xformMode;\\n                this._key = key;\\n                this.reset();\\n              },\\n              reset: function () {\\n                BufferedBlockAlgorithm.reset.call(this);\\n                this._doReset();\\n              },\\n              process: function (dataUpdate) {\\n                this._append(dataUpdate);\\n                return this._process();\\n              },\\n              finalize: function (dataUpdate) {\\n                if (dataUpdate) {\\n                  this._append(dataUpdate);\\n                }\\n                var finalProcessedData = this._doFinalize();\\n                return finalProcessedData;\\n              },\\n              keySize: 128 / 32,\\n              ivSize: 128 / 32,\\n              _ENC_XFORM_MODE: 1,\\n              _DEC_XFORM_MODE: 2,\\n              _createHelper: function () {\\n                function selectCipherStrategy(key) {\\n                  if (typeof key == 'string') {\\n                    return PasswordBasedCipher;\\n                  } else {\\n                    return SerializableCipher;\\n                  }\\n                }\\n                return function (cipher) {\\n                  return {\\n                    encrypt: function (message, key, cfg) {\\n                      return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\\n                    },\\n                    decrypt: function (ciphertext, key, cfg) {\\n                      return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\\n                    }\\n                  };\\n                };\\n              }()\\n            });\\n            C_lib.StreamCipher = Cipher.extend({\\n              _doFinalize: function () {\\n                var finalProcessedBlocks = this._process(!!'flush');\\n                return finalProcessedBlocks;\\n              },\\n              blockSize: 1\\n            });\\n            var C_mode = C.mode = {};\\n            var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\\n              createEncryptor: function (cipher, iv) {\\n                return this.Encryptor.create(cipher, iv);\\n              },\\n              createDecryptor: function (cipher, iv) {\\n                return this.Decryptor.create(cipher, iv);\\n              },\\n              init: function (cipher, iv) {\\n                this._cipher = cipher;\\n                this._iv = iv;\\n              }\\n            });\\n            var CBC = C_mode.CBC = function () {\\n              var CBC = BlockCipherMode.extend();\\n              CBC.Encryptor = CBC.extend({\\n                processBlock: function (words, offset) {\\n                  var cipher = this._cipher;\\n                  var blockSize = cipher.blockSize;\\n                  xorBlock.call(this, words, offset, blockSize);\\n                  cipher.encryptBlock(words, offset);\\n                  this._prevBlock = words.slice(offset, offset + blockSize);\\n                }\\n              });\\n              CBC.Decryptor = CBC.extend({\\n                processBlock: function (words, offset) {\\n                  var cipher = this._cipher;\\n                  var blockSize = cipher.blockSize;\\n                  var thisBlock = words.slice(offset, offset + blockSize);\\n                  cipher.decryptBlock(words, offset);\\n                  xorBlock.call(this, words, offset, blockSize);\\n                  this._prevBlock = thisBlock;\\n                }\\n              });\\n              function xorBlock(words, offset, blockSize) {\\n                var block;\\n                var iv = this._iv;\\n                if (iv) {\\n                  block = iv;\\n                  this._iv = undefined$1;\\n                } else {\\n                  block = this._prevBlock;\\n                }\\n                for (var i = 0; i < blockSize; i++) {\\n                  words[offset + i] ^= block[i];\\n                }\\n              }\\n              return CBC;\\n            }();\\n            var C_pad = C.pad = {};\\n            var Pkcs7 = C_pad.Pkcs7 = {\\n              pad: function (data, blockSize) {\\n                var blockSizeBytes = blockSize * 4;\\n                var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\\n                var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;\\n                var paddingWords = [];\\n                for (var i = 0; i < nPaddingBytes; i += 4) {\\n                  paddingWords.push(paddingWord);\\n                }\\n                var padding = WordArray.create(paddingWords, nPaddingBytes);\\n                data.concat(padding);\\n              },\\n              unpad: function (data) {\\n                var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\\n                data.sigBytes -= nPaddingBytes;\\n              }\\n            };\\n            C_lib.BlockCipher = Cipher.extend({\\n              cfg: Cipher.cfg.extend({\\n                mode: CBC,\\n                padding: Pkcs7\\n              }),\\n              reset: function () {\\n                var modeCreator;\\n                Cipher.reset.call(this);\\n                var cfg = this.cfg;\\n                var iv = cfg.iv;\\n                var mode = cfg.mode;\\n                if (this._xformMode == this._ENC_XFORM_MODE) {\\n                  modeCreator = mode.createEncryptor;\\n                } else {\\n                    modeCreator = mode.createDecryptor;\\n                    this._minBufferSize = 1;\\n                  }\\n                if (this._mode && this._mode.__creator == modeCreator) {\\n                  this._mode.init(this, iv && iv.words);\\n                } else {\\n                  this._mode = modeCreator.call(mode, this, iv && iv.words);\\n                  this._mode.__creator = modeCreator;\\n                }\\n              },\\n              _doProcessBlock: function (words, offset) {\\n                this._mode.processBlock(words, offset);\\n              },\\n              _doFinalize: function () {\\n                var finalProcessedBlocks;\\n                var padding = this.cfg.padding;\\n                if (this._xformMode == this._ENC_XFORM_MODE) {\\n                  padding.pad(this._data, this.blockSize);\\n                  finalProcessedBlocks = this._process(!!'flush');\\n                } else {\\n                    finalProcessedBlocks = this._process(!!'flush');\\n                    padding.unpad(finalProcessedBlocks);\\n                  }\\n                return finalProcessedBlocks;\\n              },\\n              blockSize: 128 / 32\\n            });\\n            var CipherParams = C_lib.CipherParams = Base.extend({\\n              init: function (cipherParams) {\\n                this.mixIn(cipherParams);\\n              },\\n              toString: function (formatter) {\\n                return (formatter || this.formatter).stringify(this);\\n              }\\n            });\\n            var C_format = C.format = {};\\n            var OpenSSLFormatter = C_format.OpenSSL = {\\n              stringify: function (cipherParams) {\\n                var wordArray;\\n                var ciphertext = cipherParams.ciphertext;\\n                var salt = cipherParams.salt;\\n                if (salt) {\\n                  wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\\n                } else {\\n                  wordArray = ciphertext;\\n                }\\n                return wordArray.toString(Base64);\\n              },\\n              parse: function (openSSLStr) {\\n                var salt;\\n                var ciphertext = Base64.parse(openSSLStr);\\n                var ciphertextWords = ciphertext.words;\\n                if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\\n                  salt = WordArray.create(ciphertextWords.slice(2, 4));\\n                  ciphertextWords.splice(0, 4);\\n                  ciphertext.sigBytes -= 16;\\n                }\\n                return CipherParams.create({\\n                  ciphertext: ciphertext,\\n                  salt: salt\\n                });\\n              }\\n            };\\n            var SerializableCipher = C_lib.SerializableCipher = Base.extend({\\n              cfg: Base.extend({\\n                format: OpenSSLFormatter\\n              }),\\n              encrypt: function (cipher, message, key, cfg) {\\n                cfg = this.cfg.extend(cfg);\\n                var encryptor = cipher.createEncryptor(key, cfg);\\n                var ciphertext = encryptor.finalize(message);\\n                var cipherCfg = encryptor.cfg;\\n                return CipherParams.create({\\n                  ciphertext: ciphertext,\\n                  key: key,\\n                  iv: cipherCfg.iv,\\n                  algorithm: cipher,\\n                  mode: cipherCfg.mode,\\n                  padding: cipherCfg.padding,\\n                  blockSize: cipher.blockSize,\\n                  formatter: cfg.format\\n                });\\n              },\\n              decrypt: function (cipher, ciphertext, key, cfg) {\\n                cfg = this.cfg.extend(cfg);\\n                ciphertext = this._parse(ciphertext, cfg.format);\\n                var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\\n                return plaintext;\\n              },\\n              _parse: function (ciphertext, format) {\\n                if (typeof ciphertext == 'string') {\\n                  return format.parse(ciphertext, this);\\n                } else {\\n                  return ciphertext;\\n                }\\n              }\\n            });\\n            var C_kdf = C.kdf = {};\\n            var OpenSSLKdf = C_kdf.OpenSSL = {\\n              execute: function (password, keySize, ivSize, salt) {\\n                if (!salt) {\\n                  salt = WordArray.random(64 / 8);\\n                }\\n                var key = EvpKDF.create({\\n                  keySize: keySize + ivSize\\n                }).compute(password, salt);\\n                var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\\n                key.sigBytes = keySize * 4;\\n                return CipherParams.create({\\n                  key: key,\\n                  iv: iv,\\n                  salt: salt\\n                });\\n              }\\n            };\\n            var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\\n              cfg: SerializableCipher.cfg.extend({\\n                kdf: OpenSSLKdf\\n              }),\\n              encrypt: function (cipher, message, password, cfg) {\\n                cfg = this.cfg.extend(cfg);\\n                var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\\n                cfg.iv = derivedParams.iv;\\n                var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\\n                ciphertext.mixIn(derivedParams);\\n                return ciphertext;\\n              },\\n              decrypt: function (cipher, ciphertext, password, cfg) {\\n                cfg = this.cfg.extend(cfg);\\n                ciphertext = this._parse(ciphertext, cfg.format);\\n                var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\\n                cfg.iv = derivedParams.iv;\\n                var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\\n                return plaintext;\\n              }\\n            });\\n          }();\\n        });\\n      })(cipherCore);\\n      return cipherCore.exports;\\n    }\\n\\n    var modeCfb = {exports: {}};\\n\\n    var hasRequiredModeCfb;\\n    function requireModeCfb() {\\n      if (hasRequiredModeCfb) return modeCfb.exports;\\n      hasRequiredModeCfb = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.mode.CFB = function () {\\n            var CFB = CryptoJS.lib.BlockCipherMode.extend();\\n            CFB.Encryptor = CFB.extend({\\n              processBlock: function (words, offset) {\\n                var cipher = this._cipher;\\n                var blockSize = cipher.blockSize;\\n                generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\\n                this._prevBlock = words.slice(offset, offset + blockSize);\\n              }\\n            });\\n            CFB.Decryptor = CFB.extend({\\n              processBlock: function (words, offset) {\\n                var cipher = this._cipher;\\n                var blockSize = cipher.blockSize;\\n                var thisBlock = words.slice(offset, offset + blockSize);\\n                generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\\n                this._prevBlock = thisBlock;\\n              }\\n            });\\n            function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\\n              var keystream;\\n              var iv = this._iv;\\n              if (iv) {\\n                keystream = iv.slice(0);\\n                this._iv = undefined;\\n              } else {\\n                keystream = this._prevBlock;\\n              }\\n              cipher.encryptBlock(keystream, 0);\\n              for (var i = 0; i < blockSize; i++) {\\n                words[offset + i] ^= keystream[i];\\n              }\\n            }\\n            return CFB;\\n          }();\\n          return CryptoJS.mode.CFB;\\n        });\\n      })(modeCfb);\\n      return modeCfb.exports;\\n    }\\n\\n    var modeCtr = {exports: {}};\\n\\n    var hasRequiredModeCtr;\\n    function requireModeCtr() {\\n      if (hasRequiredModeCtr) return modeCtr.exports;\\n      hasRequiredModeCtr = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.mode.CTR = function () {\\n            var CTR = CryptoJS.lib.BlockCipherMode.extend();\\n            var Encryptor = CTR.Encryptor = CTR.extend({\\n              processBlock: function (words, offset) {\\n                var cipher = this._cipher;\\n                var blockSize = cipher.blockSize;\\n                var iv = this._iv;\\n                var counter = this._counter;\\n                if (iv) {\\n                  counter = this._counter = iv.slice(0);\\n                  this._iv = undefined;\\n                }\\n                var keystream = counter.slice(0);\\n                cipher.encryptBlock(keystream, 0);\\n                counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;\\n                for (var i = 0; i < blockSize; i++) {\\n                  words[offset + i] ^= keystream[i];\\n                }\\n              }\\n            });\\n            CTR.Decryptor = Encryptor;\\n            return CTR;\\n          }();\\n          return CryptoJS.mode.CTR;\\n        });\\n      })(modeCtr);\\n      return modeCtr.exports;\\n    }\\n\\n    var modeCtrGladman = {exports: {}};\\n\\n    var hasRequiredModeCtrGladman;\\n    function requireModeCtrGladman() {\\n      if (hasRequiredModeCtrGladman) return modeCtrGladman.exports;\\n      hasRequiredModeCtrGladman = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          /** @preserve\\n           * Counter block mode compatible with  Dr Brian Gladman fileenc.c\\n           * derived from CryptoJS.mode.CTR\\n           * Jan Hruby jhruby.web@gmail.com\\n           */\\n          CryptoJS.mode.CTRGladman = function () {\\n            var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\\n            function incWord(word) {\\n              if ((word >> 24 & 0xff) === 0xff) {\\n                var b1 = word >> 16 & 0xff;\\n                var b2 = word >> 8 & 0xff;\\n                var b3 = word & 0xff;\\n                if (b1 === 0xff)\\n                  {\\n                    b1 = 0;\\n                    if (b2 === 0xff) {\\n                      b2 = 0;\\n                      if (b3 === 0xff) {\\n                        b3 = 0;\\n                      } else {\\n                        ++b3;\\n                      }\\n                    } else {\\n                      ++b2;\\n                    }\\n                  } else {\\n                  ++b1;\\n                }\\n                word = 0;\\n                word += b1 << 16;\\n                word += b2 << 8;\\n                word += b3;\\n              } else {\\n                word += 0x01 << 24;\\n              }\\n              return word;\\n            }\\n            function incCounter(counter) {\\n              if ((counter[0] = incWord(counter[0])) === 0) {\\n                counter[1] = incWord(counter[1]);\\n              }\\n              return counter;\\n            }\\n            var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\\n              processBlock: function (words, offset) {\\n                var cipher = this._cipher;\\n                var blockSize = cipher.blockSize;\\n                var iv = this._iv;\\n                var counter = this._counter;\\n                if (iv) {\\n                  counter = this._counter = iv.slice(0);\\n                  this._iv = undefined;\\n                }\\n                incCounter(counter);\\n                var keystream = counter.slice(0);\\n                cipher.encryptBlock(keystream, 0);\\n                for (var i = 0; i < blockSize; i++) {\\n                  words[offset + i] ^= keystream[i];\\n                }\\n              }\\n            });\\n            CTRGladman.Decryptor = Encryptor;\\n            return CTRGladman;\\n          }();\\n          return CryptoJS.mode.CTRGladman;\\n        });\\n      })(modeCtrGladman);\\n      return modeCtrGladman.exports;\\n    }\\n\\n    var modeOfb = {exports: {}};\\n\\n    var hasRequiredModeOfb;\\n    function requireModeOfb() {\\n      if (hasRequiredModeOfb) return modeOfb.exports;\\n      hasRequiredModeOfb = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.mode.OFB = function () {\\n            var OFB = CryptoJS.lib.BlockCipherMode.extend();\\n            var Encryptor = OFB.Encryptor = OFB.extend({\\n              processBlock: function (words, offset) {\\n                var cipher = this._cipher;\\n                var blockSize = cipher.blockSize;\\n                var iv = this._iv;\\n                var keystream = this._keystream;\\n                if (iv) {\\n                  keystream = this._keystream = iv.slice(0);\\n                  this._iv = undefined;\\n                }\\n                cipher.encryptBlock(keystream, 0);\\n                for (var i = 0; i < blockSize; i++) {\\n                  words[offset + i] ^= keystream[i];\\n                }\\n              }\\n            });\\n            OFB.Decryptor = Encryptor;\\n            return OFB;\\n          }();\\n          return CryptoJS.mode.OFB;\\n        });\\n      })(modeOfb);\\n      return modeOfb.exports;\\n    }\\n\\n    var modeEcb = {exports: {}};\\n\\n    var hasRequiredModeEcb;\\n    function requireModeEcb() {\\n      if (hasRequiredModeEcb) return modeEcb.exports;\\n      hasRequiredModeEcb = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.mode.ECB = function () {\\n            var ECB = CryptoJS.lib.BlockCipherMode.extend();\\n            ECB.Encryptor = ECB.extend({\\n              processBlock: function (words, offset) {\\n                this._cipher.encryptBlock(words, offset);\\n              }\\n            });\\n            ECB.Decryptor = ECB.extend({\\n              processBlock: function (words, offset) {\\n                this._cipher.decryptBlock(words, offset);\\n              }\\n            });\\n            return ECB;\\n          }();\\n          return CryptoJS.mode.ECB;\\n        });\\n      })(modeEcb);\\n      return modeEcb.exports;\\n    }\\n\\n    var padAnsix923 = {exports: {}};\\n\\n    var hasRequiredPadAnsix923;\\n    function requirePadAnsix923() {\\n      if (hasRequiredPadAnsix923) return padAnsix923.exports;\\n      hasRequiredPadAnsix923 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.pad.AnsiX923 = {\\n            pad: function (data, blockSize) {\\n              var dataSigBytes = data.sigBytes;\\n              var blockSizeBytes = blockSize * 4;\\n              var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\\n              var lastBytePos = dataSigBytes + nPaddingBytes - 1;\\n              data.clamp();\\n              data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;\\n              data.sigBytes += nPaddingBytes;\\n            },\\n            unpad: function (data) {\\n              var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\\n              data.sigBytes -= nPaddingBytes;\\n            }\\n          };\\n          return CryptoJS.pad.Ansix923;\\n        });\\n      })(padAnsix923);\\n      return padAnsix923.exports;\\n    }\\n\\n    var padIso10126 = {exports: {}};\\n\\n    var hasRequiredPadIso10126;\\n    function requirePadIso10126() {\\n      if (hasRequiredPadIso10126) return padIso10126.exports;\\n      hasRequiredPadIso10126 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.pad.Iso10126 = {\\n            pad: function (data, blockSize) {\\n              var blockSizeBytes = blockSize * 4;\\n              var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\\n              data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\\n            },\\n            unpad: function (data) {\\n              var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\\n              data.sigBytes -= nPaddingBytes;\\n            }\\n          };\\n          return CryptoJS.pad.Iso10126;\\n        });\\n      })(padIso10126);\\n      return padIso10126.exports;\\n    }\\n\\n    var padIso97971 = {exports: {}};\\n\\n    var hasRequiredPadIso97971;\\n    function requirePadIso97971() {\\n      if (hasRequiredPadIso97971) return padIso97971.exports;\\n      hasRequiredPadIso97971 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.pad.Iso97971 = {\\n            pad: function (data, blockSize) {\\n              data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\\n              CryptoJS.pad.ZeroPadding.pad(data, blockSize);\\n            },\\n            unpad: function (data) {\\n              CryptoJS.pad.ZeroPadding.unpad(data);\\n              data.sigBytes--;\\n            }\\n          };\\n          return CryptoJS.pad.Iso97971;\\n        });\\n      })(padIso97971);\\n      return padIso97971.exports;\\n    }\\n\\n    var padZeropadding = {exports: {}};\\n\\n    var hasRequiredPadZeropadding;\\n    function requirePadZeropadding() {\\n      if (hasRequiredPadZeropadding) return padZeropadding.exports;\\n      hasRequiredPadZeropadding = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.pad.ZeroPadding = {\\n            pad: function (data, blockSize) {\\n              var blockSizeBytes = blockSize * 4;\\n              data.clamp();\\n              data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);\\n            },\\n            unpad: function (data) {\\n              var dataWords = data.words;\\n              var i = data.sigBytes - 1;\\n              for (var i = data.sigBytes - 1; i >= 0; i--) {\\n                if (dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff) {\\n                  data.sigBytes = i + 1;\\n                  break;\\n                }\\n              }\\n            }\\n          };\\n          return CryptoJS.pad.ZeroPadding;\\n        });\\n      })(padZeropadding);\\n      return padZeropadding.exports;\\n    }\\n\\n    var padNopadding = {exports: {}};\\n\\n    var hasRequiredPadNopadding;\\n    function requirePadNopadding() {\\n      if (hasRequiredPadNopadding) return padNopadding.exports;\\n      hasRequiredPadNopadding = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          CryptoJS.pad.NoPadding = {\\n            pad: function () {},\\n            unpad: function () {}\\n          };\\n          return CryptoJS.pad.NoPadding;\\n        });\\n      })(padNopadding);\\n      return padNopadding.exports;\\n    }\\n\\n    var formatHex = {exports: {}};\\n\\n    var hasRequiredFormatHex;\\n    function requireFormatHex() {\\n      if (hasRequiredFormatHex) return formatHex.exports;\\n      hasRequiredFormatHex = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function (undefined$1) {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var CipherParams = C_lib.CipherParams;\\n            var C_enc = C.enc;\\n            var Hex = C_enc.Hex;\\n            var C_format = C.format;\\n            C_format.Hex = {\\n              stringify: function (cipherParams) {\\n                return cipherParams.ciphertext.toString(Hex);\\n              },\\n              parse: function (input) {\\n                var ciphertext = Hex.parse(input);\\n                return CipherParams.create({\\n                  ciphertext: ciphertext\\n                });\\n              }\\n            };\\n          })();\\n          return CryptoJS.format.Hex;\\n        });\\n      })(formatHex);\\n      return formatHex.exports;\\n    }\\n\\n    var aes = {exports: {}};\\n\\n    var hasRequiredAes;\\n    function requireAes() {\\n      if (hasRequiredAes) return aes.exports;\\n      hasRequiredAes = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var BlockCipher = C_lib.BlockCipher;\\n            var C_algo = C.algo;\\n            var SBOX = [];\\n            var INV_SBOX = [];\\n            var SUB_MIX_0 = [];\\n            var SUB_MIX_1 = [];\\n            var SUB_MIX_2 = [];\\n            var SUB_MIX_3 = [];\\n            var INV_SUB_MIX_0 = [];\\n            var INV_SUB_MIX_1 = [];\\n            var INV_SUB_MIX_2 = [];\\n            var INV_SUB_MIX_3 = [];\\n            (function () {\\n              var d = [];\\n              for (var i = 0; i < 256; i++) {\\n                if (i < 128) {\\n                  d[i] = i << 1;\\n                } else {\\n                  d[i] = i << 1 ^ 0x11b;\\n                }\\n              }\\n              var x = 0;\\n              var xi = 0;\\n              for (var i = 0; i < 256; i++) {\\n                var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\\n                sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\\n                SBOX[x] = sx;\\n                INV_SBOX[sx] = x;\\n                var x2 = d[x];\\n                var x4 = d[x2];\\n                var x8 = d[x4];\\n                var t = d[sx] * 0x101 ^ sx * 0x1010100;\\n                SUB_MIX_0[x] = t << 24 | t >>> 8;\\n                SUB_MIX_1[x] = t << 16 | t >>> 16;\\n                SUB_MIX_2[x] = t << 8 | t >>> 24;\\n                SUB_MIX_3[x] = t;\\n                var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\\n                INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;\\n                INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;\\n                INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;\\n                INV_SUB_MIX_3[sx] = t;\\n                if (!x) {\\n                  x = xi = 1;\\n                } else {\\n                  x = x2 ^ d[d[d[x8 ^ x2]]];\\n                  xi ^= d[d[xi]];\\n                }\\n              }\\n            })();\\n            var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\\n            var AES = C_algo.AES = BlockCipher.extend({\\n              _doReset: function () {\\n                var t;\\n                if (this._nRounds && this._keyPriorReset === this._key) {\\n                  return;\\n                }\\n                var key = this._keyPriorReset = this._key;\\n                var keyWords = key.words;\\n                var keySize = key.sigBytes / 4;\\n                var nRounds = this._nRounds = keySize + 6;\\n                var ksRows = (nRounds + 1) * 4;\\n                var keySchedule = this._keySchedule = [];\\n                for (var ksRow = 0; ksRow < ksRows; ksRow++) {\\n                  if (ksRow < keySize) {\\n                    keySchedule[ksRow] = keyWords[ksRow];\\n                  } else {\\n                    t = keySchedule[ksRow - 1];\\n                    if (!(ksRow % keySize)) {\\n                      t = t << 8 | t >>> 24;\\n                      t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];\\n                      t ^= RCON[ksRow / keySize | 0] << 24;\\n                    } else if (keySize > 6 && ksRow % keySize == 4) {\\n                      t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];\\n                    }\\n                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\\n                  }\\n                }\\n                var invKeySchedule = this._invKeySchedule = [];\\n                for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\\n                  var ksRow = ksRows - invKsRow;\\n                  if (invKsRow % 4) {\\n                    var t = keySchedule[ksRow];\\n                  } else {\\n                    var t = keySchedule[ksRow - 4];\\n                  }\\n                  if (invKsRow < 4 || ksRow <= 4) {\\n                    invKeySchedule[invKsRow] = t;\\n                  } else {\\n                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^ INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\\n                  }\\n                }\\n              },\\n              encryptBlock: function (M, offset) {\\n                this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\\n              },\\n              decryptBlock: function (M, offset) {\\n                var t = M[offset + 1];\\n                M[offset + 1] = M[offset + 3];\\n                M[offset + 3] = t;\\n                this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\\n                var t = M[offset + 1];\\n                M[offset + 1] = M[offset + 3];\\n                M[offset + 3] = t;\\n              },\\n              _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\\n                var nRounds = this._nRounds;\\n                var s0 = M[offset] ^ keySchedule[0];\\n                var s1 = M[offset + 1] ^ keySchedule[1];\\n                var s2 = M[offset + 2] ^ keySchedule[2];\\n                var s3 = M[offset + 3] ^ keySchedule[3];\\n                var ksRow = 4;\\n                for (var round = 1; round < nRounds; round++) {\\n                  var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\\n                  var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\\n                  var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\\n                  var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\\n                  s0 = t0;\\n                  s1 = t1;\\n                  s2 = t2;\\n                  s3 = t3;\\n                }\\n                var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\\n                var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\\n                var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\\n                var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\\n                M[offset] = t0;\\n                M[offset + 1] = t1;\\n                M[offset + 2] = t2;\\n                M[offset + 3] = t3;\\n              },\\n              keySize: 256 / 32\\n            });\\n            C.AES = BlockCipher._createHelper(AES);\\n          })();\\n          return CryptoJS.AES;\\n        });\\n      })(aes);\\n      return aes.exports;\\n    }\\n\\n    var tripledes = {exports: {}};\\n\\n    var hasRequiredTripledes;\\n    function requireTripledes() {\\n      if (hasRequiredTripledes) return tripledes.exports;\\n      hasRequiredTripledes = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var WordArray = C_lib.WordArray;\\n            var BlockCipher = C_lib.BlockCipher;\\n            var C_algo = C.algo;\\n            var PC1 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];\\n            var PC2 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];\\n            var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\\n            var SBOX_P = [{\\n              0x0: 0x808200,\\n              0x10000000: 0x8000,\\n              0x20000000: 0x808002,\\n              0x30000000: 0x2,\\n              0x40000000: 0x200,\\n              0x50000000: 0x808202,\\n              0x60000000: 0x800202,\\n              0x70000000: 0x800000,\\n              0x80000000: 0x202,\\n              0x90000000: 0x800200,\\n              0xa0000000: 0x8200,\\n              0xb0000000: 0x808000,\\n              0xc0000000: 0x8002,\\n              0xd0000000: 0x800002,\\n              0xe0000000: 0x0,\\n              0xf0000000: 0x8202,\\n              0x8000000: 0x0,\\n              0x18000000: 0x808202,\\n              0x28000000: 0x8202,\\n              0x38000000: 0x8000,\\n              0x48000000: 0x808200,\\n              0x58000000: 0x200,\\n              0x68000000: 0x808002,\\n              0x78000000: 0x2,\\n              0x88000000: 0x800200,\\n              0x98000000: 0x8200,\\n              0xa8000000: 0x808000,\\n              0xb8000000: 0x800202,\\n              0xc8000000: 0x800002,\\n              0xd8000000: 0x8002,\\n              0xe8000000: 0x202,\\n              0xf8000000: 0x800000,\\n              0x1: 0x8000,\\n              0x10000001: 0x2,\\n              0x20000001: 0x808200,\\n              0x30000001: 0x800000,\\n              0x40000001: 0x808002,\\n              0x50000001: 0x8200,\\n              0x60000001: 0x200,\\n              0x70000001: 0x800202,\\n              0x80000001: 0x808202,\\n              0x90000001: 0x808000,\\n              0xa0000001: 0x800002,\\n              0xb0000001: 0x8202,\\n              0xc0000001: 0x202,\\n              0xd0000001: 0x800200,\\n              0xe0000001: 0x8002,\\n              0xf0000001: 0x0,\\n              0x8000001: 0x808202,\\n              0x18000001: 0x808000,\\n              0x28000001: 0x800000,\\n              0x38000001: 0x200,\\n              0x48000001: 0x8000,\\n              0x58000001: 0x800002,\\n              0x68000001: 0x2,\\n              0x78000001: 0x8202,\\n              0x88000001: 0x8002,\\n              0x98000001: 0x800202,\\n              0xa8000001: 0x202,\\n              0xb8000001: 0x808200,\\n              0xc8000001: 0x800200,\\n              0xd8000001: 0x0,\\n              0xe8000001: 0x8200,\\n              0xf8000001: 0x808002\\n            }, {\\n              0x0: 0x40084010,\\n              0x1000000: 0x4000,\\n              0x2000000: 0x80000,\\n              0x3000000: 0x40080010,\\n              0x4000000: 0x40000010,\\n              0x5000000: 0x40084000,\\n              0x6000000: 0x40004000,\\n              0x7000000: 0x10,\\n              0x8000000: 0x84000,\\n              0x9000000: 0x40004010,\\n              0xa000000: 0x40000000,\\n              0xb000000: 0x84010,\\n              0xc000000: 0x80010,\\n              0xd000000: 0x0,\\n              0xe000000: 0x4010,\\n              0xf000000: 0x40080000,\\n              0x800000: 0x40004000,\\n              0x1800000: 0x84010,\\n              0x2800000: 0x10,\\n              0x3800000: 0x40004010,\\n              0x4800000: 0x40084010,\\n              0x5800000: 0x40000000,\\n              0x6800000: 0x80000,\\n              0x7800000: 0x40080010,\\n              0x8800000: 0x80010,\\n              0x9800000: 0x0,\\n              0xa800000: 0x4000,\\n              0xb800000: 0x40080000,\\n              0xc800000: 0x40000010,\\n              0xd800000: 0x84000,\\n              0xe800000: 0x40084000,\\n              0xf800000: 0x4010,\\n              0x10000000: 0x0,\\n              0x11000000: 0x40080010,\\n              0x12000000: 0x40004010,\\n              0x13000000: 0x40084000,\\n              0x14000000: 0x40080000,\\n              0x15000000: 0x10,\\n              0x16000000: 0x84010,\\n              0x17000000: 0x4000,\\n              0x18000000: 0x4010,\\n              0x19000000: 0x80000,\\n              0x1a000000: 0x80010,\\n              0x1b000000: 0x40000010,\\n              0x1c000000: 0x84000,\\n              0x1d000000: 0x40004000,\\n              0x1e000000: 0x40000000,\\n              0x1f000000: 0x40084010,\\n              0x10800000: 0x84010,\\n              0x11800000: 0x80000,\\n              0x12800000: 0x40080000,\\n              0x13800000: 0x4000,\\n              0x14800000: 0x40004000,\\n              0x15800000: 0x40084010,\\n              0x16800000: 0x10,\\n              0x17800000: 0x40000000,\\n              0x18800000: 0x40084000,\\n              0x19800000: 0x40000010,\\n              0x1a800000: 0x40004010,\\n              0x1b800000: 0x80010,\\n              0x1c800000: 0x0,\\n              0x1d800000: 0x4010,\\n              0x1e800000: 0x40080010,\\n              0x1f800000: 0x84000\\n            }, {\\n              0x0: 0x104,\\n              0x100000: 0x0,\\n              0x200000: 0x4000100,\\n              0x300000: 0x10104,\\n              0x400000: 0x10004,\\n              0x500000: 0x4000004,\\n              0x600000: 0x4010104,\\n              0x700000: 0x4010000,\\n              0x800000: 0x4000000,\\n              0x900000: 0x4010100,\\n              0xa00000: 0x10100,\\n              0xb00000: 0x4010004,\\n              0xc00000: 0x4000104,\\n              0xd00000: 0x10000,\\n              0xe00000: 0x4,\\n              0xf00000: 0x100,\\n              0x80000: 0x4010100,\\n              0x180000: 0x4010004,\\n              0x280000: 0x0,\\n              0x380000: 0x4000100,\\n              0x480000: 0x4000004,\\n              0x580000: 0x10000,\\n              0x680000: 0x10004,\\n              0x780000: 0x104,\\n              0x880000: 0x4,\\n              0x980000: 0x100,\\n              0xa80000: 0x4010000,\\n              0xb80000: 0x10104,\\n              0xc80000: 0x10100,\\n              0xd80000: 0x4000104,\\n              0xe80000: 0x4010104,\\n              0xf80000: 0x4000000,\\n              0x1000000: 0x4010100,\\n              0x1100000: 0x10004,\\n              0x1200000: 0x10000,\\n              0x1300000: 0x4000100,\\n              0x1400000: 0x100,\\n              0x1500000: 0x4010104,\\n              0x1600000: 0x4000004,\\n              0x1700000: 0x0,\\n              0x1800000: 0x4000104,\\n              0x1900000: 0x4000000,\\n              0x1a00000: 0x4,\\n              0x1b00000: 0x10100,\\n              0x1c00000: 0x4010000,\\n              0x1d00000: 0x104,\\n              0x1e00000: 0x10104,\\n              0x1f00000: 0x4010004,\\n              0x1080000: 0x4000000,\\n              0x1180000: 0x104,\\n              0x1280000: 0x4010100,\\n              0x1380000: 0x0,\\n              0x1480000: 0x10004,\\n              0x1580000: 0x4000100,\\n              0x1680000: 0x100,\\n              0x1780000: 0x4010004,\\n              0x1880000: 0x10000,\\n              0x1980000: 0x4010104,\\n              0x1a80000: 0x10104,\\n              0x1b80000: 0x4000004,\\n              0x1c80000: 0x4000104,\\n              0x1d80000: 0x4010000,\\n              0x1e80000: 0x4,\\n              0x1f80000: 0x10100\\n            }, {\\n              0x0: 0x80401000,\\n              0x10000: 0x80001040,\\n              0x20000: 0x401040,\\n              0x30000: 0x80400000,\\n              0x40000: 0x0,\\n              0x50000: 0x401000,\\n              0x60000: 0x80000040,\\n              0x70000: 0x400040,\\n              0x80000: 0x80000000,\\n              0x90000: 0x400000,\\n              0xa0000: 0x40,\\n              0xb0000: 0x80001000,\\n              0xc0000: 0x80400040,\\n              0xd0000: 0x1040,\\n              0xe0000: 0x1000,\\n              0xf0000: 0x80401040,\\n              0x8000: 0x80001040,\\n              0x18000: 0x40,\\n              0x28000: 0x80400040,\\n              0x38000: 0x80001000,\\n              0x48000: 0x401000,\\n              0x58000: 0x80401040,\\n              0x68000: 0x0,\\n              0x78000: 0x80400000,\\n              0x88000: 0x1000,\\n              0x98000: 0x80401000,\\n              0xa8000: 0x400000,\\n              0xb8000: 0x1040,\\n              0xc8000: 0x80000000,\\n              0xd8000: 0x400040,\\n              0xe8000: 0x401040,\\n              0xf8000: 0x80000040,\\n              0x100000: 0x400040,\\n              0x110000: 0x401000,\\n              0x120000: 0x80000040,\\n              0x130000: 0x0,\\n              0x140000: 0x1040,\\n              0x150000: 0x80400040,\\n              0x160000: 0x80401000,\\n              0x170000: 0x80001040,\\n              0x180000: 0x80401040,\\n              0x190000: 0x80000000,\\n              0x1a0000: 0x80400000,\\n              0x1b0000: 0x401040,\\n              0x1c0000: 0x80001000,\\n              0x1d0000: 0x400000,\\n              0x1e0000: 0x40,\\n              0x1f0000: 0x1000,\\n              0x108000: 0x80400000,\\n              0x118000: 0x80401040,\\n              0x128000: 0x0,\\n              0x138000: 0x401000,\\n              0x148000: 0x400040,\\n              0x158000: 0x80000000,\\n              0x168000: 0x80001040,\\n              0x178000: 0x40,\\n              0x188000: 0x80000040,\\n              0x198000: 0x1000,\\n              0x1a8000: 0x80001000,\\n              0x1b8000: 0x80400040,\\n              0x1c8000: 0x1040,\\n              0x1d8000: 0x80401000,\\n              0x1e8000: 0x400000,\\n              0x1f8000: 0x401040\\n            }, {\\n              0x0: 0x80,\\n              0x1000: 0x1040000,\\n              0x2000: 0x40000,\\n              0x3000: 0x20000000,\\n              0x4000: 0x20040080,\\n              0x5000: 0x1000080,\\n              0x6000: 0x21000080,\\n              0x7000: 0x40080,\\n              0x8000: 0x1000000,\\n              0x9000: 0x20040000,\\n              0xa000: 0x20000080,\\n              0xb000: 0x21040080,\\n              0xc000: 0x21040000,\\n              0xd000: 0x0,\\n              0xe000: 0x1040080,\\n              0xf000: 0x21000000,\\n              0x800: 0x1040080,\\n              0x1800: 0x21000080,\\n              0x2800: 0x80,\\n              0x3800: 0x1040000,\\n              0x4800: 0x40000,\\n              0x5800: 0x20040080,\\n              0x6800: 0x21040000,\\n              0x7800: 0x20000000,\\n              0x8800: 0x20040000,\\n              0x9800: 0x0,\\n              0xa800: 0x21040080,\\n              0xb800: 0x1000080,\\n              0xc800: 0x20000080,\\n              0xd800: 0x21000000,\\n              0xe800: 0x1000000,\\n              0xf800: 0x40080,\\n              0x10000: 0x40000,\\n              0x11000: 0x80,\\n              0x12000: 0x20000000,\\n              0x13000: 0x21000080,\\n              0x14000: 0x1000080,\\n              0x15000: 0x21040000,\\n              0x16000: 0x20040080,\\n              0x17000: 0x1000000,\\n              0x18000: 0x21040080,\\n              0x19000: 0x21000000,\\n              0x1a000: 0x1040000,\\n              0x1b000: 0x20040000,\\n              0x1c000: 0x40080,\\n              0x1d000: 0x20000080,\\n              0x1e000: 0x0,\\n              0x1f000: 0x1040080,\\n              0x10800: 0x21000080,\\n              0x11800: 0x1000000,\\n              0x12800: 0x1040000,\\n              0x13800: 0x20040080,\\n              0x14800: 0x20000000,\\n              0x15800: 0x1040080,\\n              0x16800: 0x80,\\n              0x17800: 0x21040000,\\n              0x18800: 0x40080,\\n              0x19800: 0x21040080,\\n              0x1a800: 0x0,\\n              0x1b800: 0x21000000,\\n              0x1c800: 0x1000080,\\n              0x1d800: 0x40000,\\n              0x1e800: 0x20040000,\\n              0x1f800: 0x20000080\\n            }, {\\n              0x0: 0x10000008,\\n              0x100: 0x2000,\\n              0x200: 0x10200000,\\n              0x300: 0x10202008,\\n              0x400: 0x10002000,\\n              0x500: 0x200000,\\n              0x600: 0x200008,\\n              0x700: 0x10000000,\\n              0x800: 0x0,\\n              0x900: 0x10002008,\\n              0xa00: 0x202000,\\n              0xb00: 0x8,\\n              0xc00: 0x10200008,\\n              0xd00: 0x202008,\\n              0xe00: 0x2008,\\n              0xf00: 0x10202000,\\n              0x80: 0x10200000,\\n              0x180: 0x10202008,\\n              0x280: 0x8,\\n              0x380: 0x200000,\\n              0x480: 0x202008,\\n              0x580: 0x10000008,\\n              0x680: 0x10002000,\\n              0x780: 0x2008,\\n              0x880: 0x200008,\\n              0x980: 0x2000,\\n              0xa80: 0x10002008,\\n              0xb80: 0x10200008,\\n              0xc80: 0x0,\\n              0xd80: 0x10202000,\\n              0xe80: 0x202000,\\n              0xf80: 0x10000000,\\n              0x1000: 0x10002000,\\n              0x1100: 0x10200008,\\n              0x1200: 0x10202008,\\n              0x1300: 0x2008,\\n              0x1400: 0x200000,\\n              0x1500: 0x10000000,\\n              0x1600: 0x10000008,\\n              0x1700: 0x202000,\\n              0x1800: 0x202008,\\n              0x1900: 0x0,\\n              0x1a00: 0x8,\\n              0x1b00: 0x10200000,\\n              0x1c00: 0x2000,\\n              0x1d00: 0x10002008,\\n              0x1e00: 0x10202000,\\n              0x1f00: 0x200008,\\n              0x1080: 0x8,\\n              0x1180: 0x202000,\\n              0x1280: 0x200000,\\n              0x1380: 0x10000008,\\n              0x1480: 0x10002000,\\n              0x1580: 0x2008,\\n              0x1680: 0x10202008,\\n              0x1780: 0x10200000,\\n              0x1880: 0x10202000,\\n              0x1980: 0x10200008,\\n              0x1a80: 0x2000,\\n              0x1b80: 0x202008,\\n              0x1c80: 0x200008,\\n              0x1d80: 0x0,\\n              0x1e80: 0x10000000,\\n              0x1f80: 0x10002008\\n            }, {\\n              0x0: 0x100000,\\n              0x10: 0x2000401,\\n              0x20: 0x400,\\n              0x30: 0x100401,\\n              0x40: 0x2100401,\\n              0x50: 0x0,\\n              0x60: 0x1,\\n              0x70: 0x2100001,\\n              0x80: 0x2000400,\\n              0x90: 0x100001,\\n              0xa0: 0x2000001,\\n              0xb0: 0x2100400,\\n              0xc0: 0x2100000,\\n              0xd0: 0x401,\\n              0xe0: 0x100400,\\n              0xf0: 0x2000000,\\n              0x8: 0x2100001,\\n              0x18: 0x0,\\n              0x28: 0x2000401,\\n              0x38: 0x2100400,\\n              0x48: 0x100000,\\n              0x58: 0x2000001,\\n              0x68: 0x2000000,\\n              0x78: 0x401,\\n              0x88: 0x100401,\\n              0x98: 0x2000400,\\n              0xa8: 0x2100000,\\n              0xb8: 0x100001,\\n              0xc8: 0x400,\\n              0xd8: 0x2100401,\\n              0xe8: 0x1,\\n              0xf8: 0x100400,\\n              0x100: 0x2000000,\\n              0x110: 0x100000,\\n              0x120: 0x2000401,\\n              0x130: 0x2100001,\\n              0x140: 0x100001,\\n              0x150: 0x2000400,\\n              0x160: 0x2100400,\\n              0x170: 0x100401,\\n              0x180: 0x401,\\n              0x190: 0x2100401,\\n              0x1a0: 0x100400,\\n              0x1b0: 0x1,\\n              0x1c0: 0x0,\\n              0x1d0: 0x2100000,\\n              0x1e0: 0x2000001,\\n              0x1f0: 0x400,\\n              0x108: 0x100400,\\n              0x118: 0x2000401,\\n              0x128: 0x2100001,\\n              0x138: 0x1,\\n              0x148: 0x2000000,\\n              0x158: 0x100000,\\n              0x168: 0x401,\\n              0x178: 0x2100400,\\n              0x188: 0x2000001,\\n              0x198: 0x2100000,\\n              0x1a8: 0x0,\\n              0x1b8: 0x2100401,\\n              0x1c8: 0x100401,\\n              0x1d8: 0x400,\\n              0x1e8: 0x2000400,\\n              0x1f8: 0x100001\\n            }, {\\n              0x0: 0x8000820,\\n              0x1: 0x20000,\\n              0x2: 0x8000000,\\n              0x3: 0x20,\\n              0x4: 0x20020,\\n              0x5: 0x8020820,\\n              0x6: 0x8020800,\\n              0x7: 0x800,\\n              0x8: 0x8020000,\\n              0x9: 0x8000800,\\n              0xa: 0x20800,\\n              0xb: 0x8020020,\\n              0xc: 0x820,\\n              0xd: 0x0,\\n              0xe: 0x8000020,\\n              0xf: 0x20820,\\n              0x80000000: 0x800,\\n              0x80000001: 0x8020820,\\n              0x80000002: 0x8000820,\\n              0x80000003: 0x8000000,\\n              0x80000004: 0x8020000,\\n              0x80000005: 0x20800,\\n              0x80000006: 0x20820,\\n              0x80000007: 0x20,\\n              0x80000008: 0x8000020,\\n              0x80000009: 0x820,\\n              0x8000000a: 0x20020,\\n              0x8000000b: 0x8020800,\\n              0x8000000c: 0x0,\\n              0x8000000d: 0x8020020,\\n              0x8000000e: 0x8000800,\\n              0x8000000f: 0x20000,\\n              0x10: 0x20820,\\n              0x11: 0x8020800,\\n              0x12: 0x20,\\n              0x13: 0x800,\\n              0x14: 0x8000800,\\n              0x15: 0x8000020,\\n              0x16: 0x8020020,\\n              0x17: 0x20000,\\n              0x18: 0x0,\\n              0x19: 0x20020,\\n              0x1a: 0x8020000,\\n              0x1b: 0x8000820,\\n              0x1c: 0x8020820,\\n              0x1d: 0x20800,\\n              0x1e: 0x820,\\n              0x1f: 0x8000000,\\n              0x80000010: 0x20000,\\n              0x80000011: 0x800,\\n              0x80000012: 0x8020020,\\n              0x80000013: 0x20820,\\n              0x80000014: 0x20,\\n              0x80000015: 0x8020000,\\n              0x80000016: 0x8000000,\\n              0x80000017: 0x8000820,\\n              0x80000018: 0x8020820,\\n              0x80000019: 0x8000020,\\n              0x8000001a: 0x8000800,\\n              0x8000001b: 0x0,\\n              0x8000001c: 0x20800,\\n              0x8000001d: 0x820,\\n              0x8000001e: 0x20020,\\n              0x8000001f: 0x8020800\\n            }];\\n            var SBOX_MASK = [0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000, 0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];\\n            var DES = C_algo.DES = BlockCipher.extend({\\n              _doReset: function () {\\n                var key = this._key;\\n                var keyWords = key.words;\\n                var keyBits = [];\\n                for (var i = 0; i < 56; i++) {\\n                  var keyBitPos = PC1[i] - 1;\\n                  keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;\\n                }\\n                var subKeys = this._subKeys = [];\\n                for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\\n                  var subKey = subKeys[nSubKey] = [];\\n                  var bitShift = BIT_SHIFTS[nSubKey];\\n                  for (var i = 0; i < 24; i++) {\\n                    subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;\\n                    subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;\\n                  }\\n                  subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;\\n                  for (var i = 1; i < 7; i++) {\\n                    subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;\\n                  }\\n                  subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;\\n                }\\n                var invSubKeys = this._invSubKeys = [];\\n                for (var i = 0; i < 16; i++) {\\n                  invSubKeys[i] = subKeys[15 - i];\\n                }\\n              },\\n              encryptBlock: function (M, offset) {\\n                this._doCryptBlock(M, offset, this._subKeys);\\n              },\\n              decryptBlock: function (M, offset) {\\n                this._doCryptBlock(M, offset, this._invSubKeys);\\n              },\\n              _doCryptBlock: function (M, offset, subKeys) {\\n                this._lBlock = M[offset];\\n                this._rBlock = M[offset + 1];\\n                exchangeLR.call(this, 4, 0x0f0f0f0f);\\n                exchangeLR.call(this, 16, 0x0000ffff);\\n                exchangeRL.call(this, 2, 0x33333333);\\n                exchangeRL.call(this, 8, 0x00ff00ff);\\n                exchangeLR.call(this, 1, 0x55555555);\\n                for (var round = 0; round < 16; round++) {\\n                  var subKey = subKeys[round];\\n                  var lBlock = this._lBlock;\\n                  var rBlock = this._rBlock;\\n                  var f = 0;\\n                  for (var i = 0; i < 8; i++) {\\n                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\\n                  }\\n                  this._lBlock = rBlock;\\n                  this._rBlock = lBlock ^ f;\\n                }\\n                var t = this._lBlock;\\n                this._lBlock = this._rBlock;\\n                this._rBlock = t;\\n                exchangeLR.call(this, 1, 0x55555555);\\n                exchangeRL.call(this, 8, 0x00ff00ff);\\n                exchangeRL.call(this, 2, 0x33333333);\\n                exchangeLR.call(this, 16, 0x0000ffff);\\n                exchangeLR.call(this, 4, 0x0f0f0f0f);\\n                M[offset] = this._lBlock;\\n                M[offset + 1] = this._rBlock;\\n              },\\n              keySize: 64 / 32,\\n              ivSize: 64 / 32,\\n              blockSize: 64 / 32\\n            });\\n            function exchangeLR(offset, mask) {\\n              var t = (this._lBlock >>> offset ^ this._rBlock) & mask;\\n              this._rBlock ^= t;\\n              this._lBlock ^= t << offset;\\n            }\\n            function exchangeRL(offset, mask) {\\n              var t = (this._rBlock >>> offset ^ this._lBlock) & mask;\\n              this._lBlock ^= t;\\n              this._rBlock ^= t << offset;\\n            }\\n            C.DES = BlockCipher._createHelper(DES);\\n            var TripleDES = C_algo.TripleDES = BlockCipher.extend({\\n              _doReset: function () {\\n                var key = this._key;\\n                var keyWords = key.words;\\n                if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\\n                  throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\\n                }\\n                var key1 = keyWords.slice(0, 2);\\n                var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\\n                var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\\n                this._des1 = DES.createEncryptor(WordArray.create(key1));\\n                this._des2 = DES.createEncryptor(WordArray.create(key2));\\n                this._des3 = DES.createEncryptor(WordArray.create(key3));\\n              },\\n              encryptBlock: function (M, offset) {\\n                this._des1.encryptBlock(M, offset);\\n                this._des2.decryptBlock(M, offset);\\n                this._des3.encryptBlock(M, offset);\\n              },\\n              decryptBlock: function (M, offset) {\\n                this._des3.decryptBlock(M, offset);\\n                this._des2.encryptBlock(M, offset);\\n                this._des1.decryptBlock(M, offset);\\n              },\\n              keySize: 192 / 32,\\n              ivSize: 64 / 32,\\n              blockSize: 64 / 32\\n            });\\n            C.TripleDES = BlockCipher._createHelper(TripleDES);\\n          })();\\n          return CryptoJS.TripleDES;\\n        });\\n      })(tripledes);\\n      return tripledes.exports;\\n    }\\n\\n    var rc4 = {exports: {}};\\n\\n    var hasRequiredRc4;\\n    function requireRc4() {\\n      if (hasRequiredRc4) return rc4.exports;\\n      hasRequiredRc4 = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var StreamCipher = C_lib.StreamCipher;\\n            var C_algo = C.algo;\\n            var RC4 = C_algo.RC4 = StreamCipher.extend({\\n              _doReset: function () {\\n                var key = this._key;\\n                var keyWords = key.words;\\n                var keySigBytes = key.sigBytes;\\n                var S = this._S = [];\\n                for (var i = 0; i < 256; i++) {\\n                  S[i] = i;\\n                }\\n                for (var i = 0, j = 0; i < 256; i++) {\\n                  var keyByteIndex = i % keySigBytes;\\n                  var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;\\n                  j = (j + S[i] + keyByte) % 256;\\n                  var t = S[i];\\n                  S[i] = S[j];\\n                  S[j] = t;\\n                }\\n                this._i = this._j = 0;\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                M[offset] ^= generateKeystreamWord.call(this);\\n              },\\n              keySize: 256 / 32,\\n              ivSize: 0\\n            });\\n            function generateKeystreamWord() {\\n              var S = this._S;\\n              var i = this._i;\\n              var j = this._j;\\n              var keystreamWord = 0;\\n              for (var n = 0; n < 4; n++) {\\n                i = (i + 1) % 256;\\n                j = (j + S[i]) % 256;\\n                var t = S[i];\\n                S[i] = S[j];\\n                S[j] = t;\\n                keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;\\n              }\\n              this._i = i;\\n              this._j = j;\\n              return keystreamWord;\\n            }\\n            C.RC4 = StreamCipher._createHelper(RC4);\\n            var RC4Drop = C_algo.RC4Drop = RC4.extend({\\n              cfg: RC4.cfg.extend({\\n                drop: 192\\n              }),\\n              _doReset: function () {\\n                RC4._doReset.call(this);\\n                for (var i = this.cfg.drop; i > 0; i--) {\\n                  generateKeystreamWord.call(this);\\n                }\\n              }\\n            });\\n            C.RC4Drop = StreamCipher._createHelper(RC4Drop);\\n          })();\\n          return CryptoJS.RC4;\\n        });\\n      })(rc4);\\n      return rc4.exports;\\n    }\\n\\n    var rabbit = {exports: {}};\\n\\n    var hasRequiredRabbit;\\n    function requireRabbit() {\\n      if (hasRequiredRabbit) return rabbit.exports;\\n      hasRequiredRabbit = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var StreamCipher = C_lib.StreamCipher;\\n            var C_algo = C.algo;\\n            var S = [];\\n            var C_ = [];\\n            var G = [];\\n            var Rabbit = C_algo.Rabbit = StreamCipher.extend({\\n              _doReset: function () {\\n                var K = this._key.words;\\n                var iv = this.cfg.iv;\\n                for (var i = 0; i < 4; i++) {\\n                  K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff | (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;\\n                }\\n                var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];\\n                var C = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];\\n                this._b = 0;\\n                for (var i = 0; i < 4; i++) {\\n                  nextState.call(this);\\n                }\\n                for (var i = 0; i < 8; i++) {\\n                  C[i] ^= X[i + 4 & 7];\\n                }\\n                if (iv) {\\n                  var IV = iv.words;\\n                  var IV_0 = IV[0];\\n                  var IV_1 = IV[1];\\n                  var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;\\n                  var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;\\n                  var i1 = i0 >>> 16 | i2 & 0xffff0000;\\n                  var i3 = i2 << 16 | i0 & 0x0000ffff;\\n                  C[0] ^= i0;\\n                  C[1] ^= i1;\\n                  C[2] ^= i2;\\n                  C[3] ^= i3;\\n                  C[4] ^= i0;\\n                  C[5] ^= i1;\\n                  C[6] ^= i2;\\n                  C[7] ^= i3;\\n                  for (var i = 0; i < 4; i++) {\\n                    nextState.call(this);\\n                  }\\n                }\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                var X = this._X;\\n                nextState.call(this);\\n                S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;\\n                S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;\\n                S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;\\n                S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;\\n                for (var i = 0; i < 4; i++) {\\n                  S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;\\n                  M[offset + i] ^= S[i];\\n                }\\n              },\\n              blockSize: 128 / 32,\\n              ivSize: 64 / 32\\n            });\\n            function nextState() {\\n              var X = this._X;\\n              var C = this._C;\\n              for (var i = 0; i < 8; i++) {\\n                C_[i] = C[i];\\n              }\\n              C[0] = C[0] + 0x4d34d34d + this._b | 0;\\n              C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;\\n              C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;\\n              C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;\\n              C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;\\n              C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;\\n              C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;\\n              C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;\\n              this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;\\n              for (var i = 0; i < 8; i++) {\\n                var gx = X[i] + C[i];\\n                var ga = gx & 0xffff;\\n                var gb = gx >>> 16;\\n                var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;\\n                var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);\\n                G[i] = gh ^ gl;\\n              }\\n              X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;\\n              X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;\\n              X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;\\n              X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;\\n              X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;\\n              X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;\\n              X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;\\n              X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;\\n            }\\n            C.Rabbit = StreamCipher._createHelper(Rabbit);\\n          })();\\n          return CryptoJS.Rabbit;\\n        });\\n      })(rabbit);\\n      return rabbit.exports;\\n    }\\n\\n    var rabbitLegacy = {exports: {}};\\n\\n    var hasRequiredRabbitLegacy;\\n    function requireRabbitLegacy() {\\n      if (hasRequiredRabbitLegacy) return rabbitLegacy.exports;\\n      hasRequiredRabbitLegacy = 1;\\n      (function (module, exports) {\\n        (function (root, factory, undef) {\\n          {\\n            module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());\\n          }\\n        })(commonjsGlobal, function (CryptoJS) {\\n          (function () {\\n            var C = CryptoJS;\\n            var C_lib = C.lib;\\n            var StreamCipher = C_lib.StreamCipher;\\n            var C_algo = C.algo;\\n            var S = [];\\n            var C_ = [];\\n            var G = [];\\n            var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\\n              _doReset: function () {\\n                var K = this._key.words;\\n                var iv = this.cfg.iv;\\n                var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];\\n                var C = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];\\n                this._b = 0;\\n                for (var i = 0; i < 4; i++) {\\n                  nextState.call(this);\\n                }\\n                for (var i = 0; i < 8; i++) {\\n                  C[i] ^= X[i + 4 & 7];\\n                }\\n                if (iv) {\\n                  var IV = iv.words;\\n                  var IV_0 = IV[0];\\n                  var IV_1 = IV[1];\\n                  var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;\\n                  var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;\\n                  var i1 = i0 >>> 16 | i2 & 0xffff0000;\\n                  var i3 = i2 << 16 | i0 & 0x0000ffff;\\n                  C[0] ^= i0;\\n                  C[1] ^= i1;\\n                  C[2] ^= i2;\\n                  C[3] ^= i3;\\n                  C[4] ^= i0;\\n                  C[5] ^= i1;\\n                  C[6] ^= i2;\\n                  C[7] ^= i3;\\n                  for (var i = 0; i < 4; i++) {\\n                    nextState.call(this);\\n                  }\\n                }\\n              },\\n              _doProcessBlock: function (M, offset) {\\n                var X = this._X;\\n                nextState.call(this);\\n                S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;\\n                S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;\\n                S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;\\n                S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;\\n                for (var i = 0; i < 4; i++) {\\n                  S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;\\n                  M[offset + i] ^= S[i];\\n                }\\n              },\\n              blockSize: 128 / 32,\\n              ivSize: 64 / 32\\n            });\\n            function nextState() {\\n              var X = this._X;\\n              var C = this._C;\\n              for (var i = 0; i < 8; i++) {\\n                C_[i] = C[i];\\n              }\\n              C[0] = C[0] + 0x4d34d34d + this._b | 0;\\n              C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;\\n              C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;\\n              C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;\\n              C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;\\n              C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;\\n              C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;\\n              C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;\\n              this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;\\n              for (var i = 0; i < 8; i++) {\\n                var gx = X[i] + C[i];\\n                var ga = gx & 0xffff;\\n                var gb = gx >>> 16;\\n                var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;\\n                var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);\\n                G[i] = gh ^ gl;\\n              }\\n              X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;\\n              X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;\\n              X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;\\n              X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;\\n              X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;\\n              X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;\\n              X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;\\n              X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;\\n            }\\n            C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\\n          })();\\n          return CryptoJS.RabbitLegacy;\\n        });\\n      })(rabbitLegacy);\\n      return rabbitLegacy.exports;\\n    }\\n\\n    (function (module, exports) {\\n      (function (root, factory, undef) {\\n        {\\n          module.exports = factory(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy());\\n        }\\n      })(commonjsGlobal, function (CryptoJS) {\\n        return CryptoJS;\\n      });\\n    })(cryptoJs);\\n    var cryptoJsExports = cryptoJs.exports;\\n    var CryptoJS = getDefaultExportFromCjs(cryptoJsExports);\\n\\n    function createWebSocket(url) {\\n        if (typeof window !== \\\"undefined\\\" &&\\n            typeof window.WebSocket !== \\\"undefined\\\") {\\n            return new window.WebSocket(url);\\n        }\\n        else if (typeof global !== \\\"undefined\\\") {\\n            const WebSocket = require(\\\"ws\\\");\\n            return new WebSocket(url);\\n        }\\n        else {\\n            throw new Error(\\\"Not supported WebSocket\\\");\\n        }\\n    }\\n\\n    class SparkClient {\\n        appId;\\n        apiKey;\\n        apiSecret;\\n        constructor(appId, apiKey, apiSecret) {\\n            this.appId = appId;\\n            this.apiKey = apiKey;\\n            this.apiSecret = apiSecret;\\n        }\\n        getAuthorizationUrl(model = exports.ModelVersion.V1_5) {\\n            const url = new URL(ModelVersionUrl[model]);\\n            const host = url.host;\\n            const date = new Date().toUTCString();\\n            const algorithm = \\\"hmac-sha256\\\";\\n            const headers = \\\"host date request-line\\\";\\n            const signatureOrigin = `host: ${host}\\\\ndate: ${date}\\\\nGET ${url.pathname} HTTP/1.1`;\\n            const signatureSha = CryptoJS.HmacSHA256(signatureOrigin, this.apiSecret);\\n            const signature = CryptoJS.enc.Base64.stringify(signatureSha);\\n            const authorizationOrigin = `api_key=\\\"${this.apiKey}\\\", algorithm=\\\"${algorithm}\\\", headers=\\\"${headers}\\\", signature=\\\"${signature}\\\"`;\\n            const authorization = btoa(authorizationOrigin);\\n            return `${url}?authorization=${authorization}&date=${date}&host=${host}`;\\n        }\\n        /**\\n         * 异步聊天方法，使用回调来处理聊天响应。\\n         * Asynchronous chat method that uses a callback to handle chat responses.\\n         *\\n         * @param model 模型的版本，例如“V1_5”或“V2”。\\n         * @param model The version of the model, e.g., \\\"V1_5\\\" or \\\"V2\\\".\\n         *\\n         * @param messages 一组聊天信息，由用户和助手的消息组成。\\n         * @param messages A set of chat messages, consisting of messages from the user and assistant.\\n         *\\n         * @param callback 用来处理每一个接收到的聊天响应的回调函数。\\n         * @param callback The callback to process each received chat response.\\n         *\\n         * @param parameters 请求的附加参数(可选)。\\n         * @param parameters Optional additional request parameters.\\n         *\\n         * @param uid 用户的唯一标识符(可选)。\\n         * @param uid User's unique identifier (optional).\\n         *\\n         * @param abortController 可选的AbortController实例，用来取消这个请求。\\n         * @param abortController Optional AbortController instance used to abort this request.\\n         *\\n         */\\n        async chatAsync(model = exports.ModelVersion.V1_5, messages, callback, parameters, uid, abortController) {\\n            const generator = await this.chatAsStreamAsync(model, messages, parameters, uid, abortController);\\n            for await (const message of generator) {\\n                callback(message);\\n            }\\n        }\\n        /**\\n         * 异步实时聊天流方法。\\n         * Asynchronous real-time chat stream method.\\n         *\\n         * @param model 模型的版本，例如“V1_5”或“V2”。\\n         * @param model The version of the model, e.g., \\\"V1_5\\\" or \\\"V2\\\".\\n         *\\n         * @param messages 一组聊天信息，由用户和助手的消息组成。\\n         * @param messages A set of chat messages, consisting of messages from the user and assistant.\\n         *\\n         * @param parameters 请求的附加参数(可选)。\\n         * @param parameters Optional additional request parameters.\\n         *\\n         * @param uid 用户的唯一标识符(可选)。\\n         * @param uid User's unique identifier (optional).\\n         *\\n         * @param abortController 可选的AbortController实例，用来取消这个请求。\\n         * @param abortController Optional AbortController instance used to abort this request.\\n         *\\n         * @return 返回一个Generator，它生成的Promise解析为聊天响应。\\n         * @return Returns a Generator that yields a Promise that resolves to a chat response.\\n         *\\n         */\\n        *chatAsStreamAsync(model = exports.ModelVersion.V1_5, messages, parameters, uid, abortController) {\\n            let params = {\\n                header: {\\n                    app_id: this.appId,\\n                    uid: uid,\\n                },\\n                parameter: {\\n                    chat: {\\n                        domain: ChatDomain[model],\\n                        ...parameters,\\n                    },\\n                },\\n                payload: {\\n                    message: {\\n                        text: messages,\\n                    },\\n                },\\n            };\\n            const url = this.getAuthorizationUrl(model);\\n            let ws = createWebSocket(url);\\n            ws.onopen = () => {\\n                ws.send(JSON.stringify(params));\\n            };\\n            let end = false;\\n            do {\\n                const waitForMessage = new Promise((resolve) => {\\n                    ws.onmessage = (event) => {\\n                        function close() {\\n                            ws.close();\\n                        }\\n                        const resp = JSON.parse(event.data);\\n                        if (resp.header.code !== 0) {\\n                            throw new Error(`code: ${resp.header.code}, sid: ${resp.header.sid}, message: ${resp.header.message}`);\\n                        }\\n                        const text = resp.payload.choices.text\\n                            .map((t) => t.content)\\n                            .join(\\\" \\\");\\n                        const result = {\\n                            text,\\n                            uasge: resp.payload.usage?.text || null,\\n                        };\\n                        resolve(result);\\n                        if (resp.header.status === 2) {\\n                            close();\\n                            end = true;\\n                        }\\n                    };\\n                });\\n                yield waitForMessage;\\n            } while (!abortController?.signal.aborted && !end);\\n            if (ws.readyState === 1) {\\n                ws.close();\\n            }\\n        }\\n    }\\n\\n    exports.ChatMessage = ChatMessage;\\n    exports.SparkClient = SparkClient;\\n\\n}));\",\"title\":\"$:/plugins/oeyoews/neotw-ai/lib/spark.min.js\",\"module-type\":\"library\",\"type\":\"application/javascript\",\"hide-body\":\"yes\"},\"$:/plugins/oeyoews/neotw-ai/templates/app.vue\":{\"text\":\"<template>\\n  <!-- <button @click=\\\"aibot\\\"> </button> -->\\n  <div\\n    class=\\\"gap-2 border-solid border p-4 rounded border-dimmed-200 dark:bg-dimmed-800 text-black dark:text-white mb-4 text-sm antialiased prose prose-gray max-w-none dark:prose-invert prose-p:my-0\\\">\\n    <div class=\\\"font-bold flex items-center\\\">\\n      <div class=\\\"flex\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 48 48\\\"\\n          :class=\\\"{ 'animate-spin': isLoading}\\\">\\n          <path fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n            d=\\\"M24 2.5C24 14.374 14.374 24 2.5 24M24 45.5C24 33.626 14.374 24 2.5 24M24 2.5C24 14.374 33.626 24 45.5 24M24 45.5C24 33.626 33.626 24 45.5 24\\\" />\\n        </svg>\\n      </div>\\n      <div class=\\\"ml-2\\\">\\n        {{ header }}\\n      </div>\\n    </div>\\n    <div class=\\\"mt-2 indent-4\\\" v-html=\\\"resHTML\\\" />\\n    <div v-if=\\\"isLoading\\\">\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\">\\n        <circle cx=\\\"18\\\" cy=\\\"12\\\" r=\\\"0\\\" fill=\\\"black\\\">\\n          <animate attributeName=\\\"r\\\" begin=\\\".67\\\" calcMode=\\\"spline\\\" dur=\\\"1.5s\\\"\\n            keySplines=\\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\\" repeatCount=\\\"indefinite\\\" values=\\\"0;2;0;0\\\" />\\n        </circle>\\n        <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"0\\\" fill=\\\"black\\\">\\n          <animate attributeName=\\\"r\\\" begin=\\\".33\\\" calcMode=\\\"spline\\\" dur=\\\"1.5s\\\"\\n            keySplines=\\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\\" repeatCount=\\\"indefinite\\\" values=\\\"0;2;0;0\\\" />\\n        </circle>\\n        <circle cx=\\\"6\\\" cy=\\\"12\\\" r=\\\"0\\\" fill=\\\"black\\\">\\n          <animate attributeName=\\\"r\\\" begin=\\\"0\\\" calcMode=\\\"spline\\\" dur=\\\"1.5s\\\"\\n            keySplines=\\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\\" repeatCount=\\\"indefinite\\\" values=\\\"0;2;0;0\\\" />\\n        </circle>\\n      </svg>\\n    </div>\\n  </div>\\n</template>\",\"title\":\"$:/plugins/oeyoews/neotw-ai/templates/app.vue\",\"hide-body\":\"yes\"},\"$:/plugins/oeyoews/neotw-ai/plugins/TiddlyWikiVue.js\":{\"text\":\"module.exports={install(t,o){t.component(\\\"TiddlyWikiVue\\\",{template:\\\"<button> {{ msg }} </button>\\\",props:{msg:String}})}};\",\"title\":\"$:/plugins/oeyoews/neotw-ai/plugins/TiddlyWikiVue.js\",\"module-type\":\"library\",\"type\":\"application/javascript\"},\"$:/plugins/oeyoews/neotw-ai/components/Version.js\":{\"text\":\"module.exports={name:\\\"Version\\\",props:{version:{type:String,default:\\\"5.3.2\\\"}},template:\\\"<span> {{ version }} </span>\\\"};\",\"title\":\"$:/plugins/oeyoews/neotw-ai/components/Version.js\",\"module-type\":\"library\",\"type\":\"application/javascript\"},\"$:/plugins/oeyoews/neotw-ai/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/readme\",\"description\":\"neotw-ai\",\"summary\":\"此插件使用 Google Gemini API 提供服务。需要提供 API 密钥以使用该插件。\",\"text\":\"[[在线文档|https://neotw.vercel.app/docs/plugins/neotw-ai]]\\n\\n<$neotw-ai />\\n\\n!! Usage\\n\\n```html\\n<$neotw-ai /> // or add gemini:yes to your tiddler field\\n```\\n\\n!! Gemini APIKEY\\n\\n<$edit-text tiddler=\\\"$:/plugins/oeyoews/neotw-ai/config\\\" field=\\\"api\\\" type=\\\"password\\\" />\\n\\n<!-- !! TODO -->\\n\\n<!-- * support neotw-ai-translate widget -->\\n<!-- * 限制 过大的 token https://ai.google.dev/tutorials/get_started_web#count-tokens -->\\n\\n<!-- !! Ref\\n\\nhttps://ai.google.dev/tutorials/get_started_web?hl=zh-cn -->\"},\"$:/plugins/oeyoews/neotw-ai/app.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/app.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-ai/app.js\\ntype: application/javascript\\nmodule-type: library\\ndescription: 摘要总结/每日一句\\n\\n\\\\*/\\nconst{computed:e,ref:t}=window.Vue,s=require(\\\"$:/plugins/oeyoews/neotw-vue3/getTemplate.js\\\"),{gemini:i,spark:r}=require(\\\"./model/index\\\"),o=e=>$tw.wiki.getTiddlerText(e),{API_KEY:n,speed:a,icon:p,SPARK_APP_ID:h,SPARK_API_KEY:m,SPARK_API_SECRET:l,model:c}=require(\\\"./config.js\\\");module.exports=(d=\\\"\\\",u=\\\"\\\",w=\\\"AI 生成的摘要\\\",A,P=\\\"summary\\\")=>{const g=u||$tw.wiki.getTiddler(d).fields?.[P],I={setup(){const s=t(\\\"\\\"),i=t(!0),r=t(w),a=e((()=>$tw.wiki.renderText(\\\"text/html\\\",\\\"text/markdown\\\",s.value,{parseAsInline:!0})));return{prompt:t(\\\"\\\"),resHTML:a,API_KEY:n,res:s,header:r,isLoading:i,text:o(d)}},mounted(){return this.check(),g?(this.typewritter(g),void(this.isLoading=!1)):n?void this.aibot():(console.error(\\\"请填写你的 gemini API_KEY\\\"),this.isLoading=!1,void(this.res=\\\"请填写你的 gemini API_KEY\\\"))},methods:{typewritter(e){const t=e.length;let s=0;const i=setInterval((()=>{if(s<t){const t=e.slice(0,s+1);this.res=t+\\\" \\\"+p,s++}else this.res=e,clearInterval(i)}),a)},check(){[\\\"quote\\\",\\\"summary\\\"].some((e=>e===P))||console.error(P+\\\"不属于对应的类型\\\"),\\\"quote\\\"===P?(this.prompt=\\\"每日一句, 类型为搞笑\\\",this.header=\\\"每日一句\\\"):this.prompt=this.text+\\\" \\\\n简短总结上面这段话\\\"},async aibot(){try{if(!this.text)throw Error(\\\"没有输入内容\\\");switch(A||c){case\\\"gemini\\\":this.res=await i({prompt:this.prompt,API_KEY:n});break;case\\\"spark\\\":if(!m)throw Error(\\\"没有填写 SPARK_API_KEY\\\");this.res=await r({prompt:this.prompt,API_KEY:m,APP_ID:h,API_SECRET:l})}this.res&&$tw.wiki.setText(d,P,null,this.res,{suppressTimestamp:!0})}catch(e){console.error(e.message),this.res=e.message}this.isLoading=!1}},template:s(\\\"$:/plugins/oeyoews/neotw-ai/templates/app.vue\\\"),components:{}};return I};\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"description\":\"摘要总结/每日一句\"},\"$:/plugins/oeyoews/neotw-ai/config.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/config.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-ai/config.js\\ntype: application/javascript\\nmodule-type: library\\ndescription: config\\n\\n\\\\*/\\nconst{api:e,icon:P=\\\"⬤\\\",speed:A=20,model:_=\\\"gemini\\\",SPARK_API_KEY:i=\\\"\\\",SPARK_APP_ID:o=\\\"\\\",SPARK_API_SECRET:K=\\\"\\\"}=$tw.wiki.getTiddler(\\\"$:/plugins/oeyoews/neotw-ai/config\\\").fields;module.exports={icon:P,model:_,speed:A,API_KEY:e,SPARK_API_KEY:i,SPARK_APP_ID:o,SPARK_API_SECRET:K};\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"description\":\"config\"},\"$:/plugins/oeyoews/neotw-ai/config\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/config\",\"description\":\"your gemini apikey\",\"publish\":\"private\",\"model\":\"gemini\",\"proxy\":\"\",\"icon\":\"⬤\",\"speed\":\"20\",\"api\":\"\",\"SPARK_API_KEY\":\"\",\"SPARK_APP_ID\":\"\",\"SPARK_API_SECRET\":\"\"},\"$:/plugins/oeyoews/neotw-ai/icon\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/icon\",\"text\":\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"43.58\\\" height=\\\"16\\\" viewBox=\\\"0 0 512 188\\\">\\n      <defs>\\n        <radialGradient id=\\\"logosGoogleGemini0\\\" cx=\\\"85.738%\\\" cy=\\\"25.354%\\\" r=\\\"103.154%\\\" fx=\\\"85.738%\\\" fy=\\\"25.354%\\\"\\n          gradientTransform=\\\"matrix(-.86887 .47915 -.39276 -.66723 1.702 .012)\\\">\\n          <stop offset=\\\"0%\\\" stop-color=\\\"#5baeff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#9cbfff\\\" />\\n        </radialGradient>\\n        <radialGradient id=\\\"logosGoogleGemini1\\\" cx=\\\"61.879%\\\" cy=\\\"26.683%\\\" r=\\\"80.612%\\\" fx=\\\"61.879%\\\" fy=\\\"26.683%\\\"\\n          gradientTransform=\\\"scale(-1 -.9195)rotate(-81.526 -.323 .706)\\\">\\n          <stop offset=\\\"0%\\\" stop-color=\\\"#409dff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#64b0ff\\\" />\\n        </radialGradient>\\n        <radialGradient id=\\\"logosGoogleGemini2\\\" cx=\\\"53.184%\\\" cy=\\\"19.021%\\\" r=\\\"110.789%\\\" fx=\\\"53.184%\\\" fy=\\\"19.021%\\\"\\n          gradientTransform=\\\"scale(-.6801 -1)rotate(-76.197 -.368 .838)\\\">\\n          <stop offset=\\\"0%\\\" stop-color=\\\"#177cff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#4da4ff\\\" />\\n        </radialGradient>\\n        <radialGradient id=\\\"logosGoogleGemini3\\\" cx=\\\"-182.665%\\\" cy=\\\"10.869%\\\" r=\\\"521.404%\\\" fx=\\\"-182.665%\\\" fy=\\\"10.869%\\\"\\n          gradientTransform=\\\"scale(1 .1796)rotate(65.413 -2.213 .357)\\\">\\n          <stop offset=\\\"0%\\\" stop-color=\\\"#1c7aff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#76a9ff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#8fb9ff\\\" />\\n        </radialGradient>\\n        <linearGradient id=\\\"logosGoogleGemini4\\\" x1=\\\"48.887%\\\" x2=\\\"48.887%\\\" y1=\\\"8.809%\\\" y2=\\\"100%\\\">\\n          <stop offset=\\\"0%\\\" stop-color=\\\"#076eff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#3e93ff\\\" />\\n        </linearGradient>\\n        <linearGradient id=\\\"logosGoogleGemini5\\\" x1=\\\"13.217%\\\" x2=\\\"78.598%\\\" y1=\\\"0%\\\" y2=\\\"94.201%\\\">\\n          <stop offset=\\\"0%\\\" stop-color=\\\"#076eff\\\" />\\n          <stop offset=\\\"100%\\\" stop-color=\\\"#69a3ff\\\" />\\n        </linearGradient>\\n      </defs>\\n      <path fill=\\\"url(#logosGoogleGemini0)\\\"\\n        d=\\\"M125.939 126.64c0 17.396-5.16 31.254-15.482 41.575c-11.596 12.292-26.846 18.438-45.748 18.438c-18.09 0-33.398-6.262-45.923-18.786C6.262 155.342 0 139.919 0 121.597c0-18.323 6.262-33.747 18.786-46.27C31.311 62.801 46.618 56.54 64.71 56.54c9.161 0 17.8 1.623 25.918 4.87c8.118 3.247 14.786 7.828 20.004 13.742l-11.48 11.48c-3.827-4.638-8.785-8.262-14.873-10.871c-6.088-2.61-12.611-3.914-19.57-3.914c-13.567 0-25.048 4.697-34.441 14.09c-9.277 9.51-13.916 21.396-13.916 35.66c0 14.263 4.639 26.15 13.916 35.659c9.393 9.393 20.874 14.09 34.442 14.09c12.408 0 22.73-3.48 30.963-10.437c8.233-6.958 12.988-16.525 14.263-28.702H64.71v-14.96h60.36c.58 3.248.87 6.379.87 9.394\\\" />\\n      <path fill=\\\"url(#logosGoogleGemini1)\\\"\\n        d=\\\"M176.17 96.205c12.768 0 22.93 4.13 30.485 12.387c7.556 8.259 11.334 19.826 11.334 34.703l-.176 1.757h-67.648c.235 8.434 3.046 15.228 8.434 20.382c5.389 5.154 11.831 7.73 19.328 7.73c10.308 0 18.39-5.153 24.248-15.461l14.408 7.028c-3.866 7.263-9.225 12.944-16.077 17.044c-6.853 4.1-14.613 6.15-23.282 6.15c-12.65 0-23.076-4.335-31.276-13.003s-12.299-19.62-12.299-32.857c0-13.12 3.983-24.043 11.948-32.77c7.965-8.727 18.157-13.09 30.573-13.09m-.351 14.76c-6.091 0-11.333 1.874-15.726 5.622c-4.393 3.749-7.292 8.785-8.698 15.11h49.374c-.468-5.973-2.899-10.922-7.292-14.846c-4.392-3.924-10.279-5.887-17.658-5.887\\\" />\\n      <path fill=\\\"url(#logosGoogleGemini2)\\\"\\n        d=\\\"M244.493 184.843h-16.116V99.008h15.416v11.912h.7c2.453-4.204 6.219-7.708 11.299-10.51c5.08-2.804 10.13-4.205 15.153-4.205c6.306 0 11.853 1.46 16.641 4.38c4.788 2.919 8.292 6.948 10.51 12.086c7.124-10.977 16.993-16.466 29.605-16.466c9.927 0 17.576 3.036 22.948 9.11c5.372 6.072 8.058 14.714 8.058 25.925v53.603h-16.116v-51.15c0-8.059-1.46-13.869-4.38-17.43c-2.919-3.562-7.824-5.343-14.714-5.343c-6.19 0-11.386 2.627-15.59 7.883c-4.205 5.255-6.307 11.444-6.307 18.568v47.472h-16.116v-51.15c0-8.059-1.46-13.869-4.38-17.43c-2.919-3.562-7.824-5.343-14.714-5.343c-6.19 0-11.386 2.627-15.59 7.883c-4.205 5.255-6.307 11.444-6.307 18.568z\\\" />\\n      <path fill=\\\"url(#logosGoogleGemini4)\\\"\\n        d=\\\"M393.263 69.216c0 3.158-1.112 5.848-3.334 8.07c-2.223 2.223-4.913 3.335-8.071 3.335c-3.158 0-5.849-1.112-8.071-3.334c-2.223-2.223-3.334-4.913-3.334-8.071c0-3.158 1.111-5.849 3.334-8.071c2.222-2.223 4.913-3.334 8.07-3.334c3.16 0 5.85 1.111 8.072 3.334c2.222 2.222 3.334 4.913 3.334 8.07m-3.334 29.652v85.975h-16.142V98.868z\\\" />\\n      <path fill=\\\"url(#logosGoogleGemini3)\\\"\\n        d=\\\"M512 69.216c0 3.158-1.111 5.848-3.334 8.07c-2.222 2.223-4.913 3.335-8.07 3.335c-3.16 0-5.85-1.112-8.072-3.334c-2.222-2.223-3.334-4.913-3.334-8.071c0-3.158 1.112-5.849 3.334-8.071c2.223-2.223 4.913-3.334 8.071-3.334c3.158 0 5.849 1.111 8.071 3.334c2.223 2.222 3.334 4.913 3.334 8.07m-3.334 29.652v85.975h-16.142V98.868z\\\" />\\n      <path fill=\\\"url(#logosGoogleGemini5)\\\"\\n        d=\\\"M404.004 99.008h15.415v11.912h.7c2.453-4.204 6.22-7.708 11.3-10.51c5.08-2.804 10.364-4.205 15.853-4.205c10.51 0 18.597 3.007 24.261 9.022c5.664 6.014 8.496 14.568 8.496 25.663v53.953h-16.116v-52.902c-.35-14.014-7.416-21.021-21.196-21.021c-6.423 0-11.795 2.598-16.116 7.795s-6.481 11.415-6.481 18.656v47.472h-16.116z\\\" />\\n      <path fill=\\\"#076eff\\\"\\n        d=\\\"M348.374 72.76c-2.846-18.788-17.592-33.533-36.38-36.38c18.788-2.847 33.534-17.593 36.38-36.38c2.847 18.787 17.593 33.533 36.38 36.38c-18.787 2.847-33.533 17.592-36.38 36.38\\\" />\\n    </svg>\\n\"},\"$:/plugins/oeyoews/neotw-ai/model/gemini.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/model/gemini.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-ai/model/gemini.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\nconst{HarmBlockThreshold:e,GoogleGenerativeAI:t,HarmCategory:o}=require(\\\"./lib/gemini.min.js\\\"),r=[{category:o.HARM_CATEGORY_HARASSMENT,threshold:e.BLOCK_MEDIUM_AND_ABOVE},{category:o.HARM_CATEGORY_HATE_SPEECH,threshold:e.BLOCK_MEDIUM_AND_ABOVE},{category:o.HARM_CATEGORY_SEXUALLY_EXPLICIT,threshold:e.BLOCK_MEDIUM_AND_ABOVE},{category:o.HARM_CATEGORY_DANGEROUS_CONTENT,threshold:e.BLOCK_MEDIUM_AND_ABOVE}];module.exports=async e=>{const{API_KEY:o,prompt:_}=e;if(!_)return\\\"没有任何输入\\\";const a=new t(o).getGenerativeModel({model:\\\"gemini-1.0-pro-001\\\",generationConfig:{maxOutputTokens:200,temperature:.5,topP:.1,topK:16},safetySettings:r}).startChat({history:[],generationConfig:{maxOutputTokens:100}}),n=await a.sendMessage(_);return(await n.response).text()};\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-ai/model/index.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/model/index.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-ai/model/index.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\nconst e={gemini:require(\\\"./gemini\\\"),spark:require(\\\"./spark\\\")};module.exports=e;\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-ai/model/lib/gemini.min.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/model/lib/gemini.min.js\",\"text\":\"\\\"use strict\\\";\\nconst proxy = $tw.wiki.getTiddler('$:/plugins/oeyoews/neotw-ai/config').fields.proxy\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */const POSSIBLE_ROLES=[\\\"user\\\",\\\"model\\\",\\\"function\\\"];exports.HarmCategory=void 0;(function(HarmCategory){HarmCategory[\\\"HARM_CATEGORY_UNSPECIFIED\\\"]=\\\"HARM_CATEGORY_UNSPECIFIED\\\";HarmCategory[\\\"HARM_CATEGORY_HATE_SPEECH\\\"]=\\\"HARM_CATEGORY_HATE_SPEECH\\\";HarmCategory[\\\"HARM_CATEGORY_SEXUALLY_EXPLICIT\\\"]=\\\"HARM_CATEGORY_SEXUALLY_EXPLICIT\\\";HarmCategory[\\\"HARM_CATEGORY_HARASSMENT\\\"]=\\\"HARM_CATEGORY_HARASSMENT\\\";HarmCategory[\\\"HARM_CATEGORY_DANGEROUS_CONTENT\\\"]=\\\"HARM_CATEGORY_DANGEROUS_CONTENT\\\"})(exports.HarmCategory||(exports.HarmCategory={}));exports.HarmBlockThreshold=void 0;(function(HarmBlockThreshold){HarmBlockThreshold[\\\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\\\"]=\\\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\\\";HarmBlockThreshold[\\\"BLOCK_LOW_AND_ABOVE\\\"]=\\\"BLOCK_LOW_AND_ABOVE\\\";HarmBlockThreshold[\\\"BLOCK_MEDIUM_AND_ABOVE\\\"]=\\\"BLOCK_MEDIUM_AND_ABOVE\\\";HarmBlockThreshold[\\\"BLOCK_ONLY_HIGH\\\"]=\\\"BLOCK_ONLY_HIGH\\\";HarmBlockThreshold[\\\"BLOCK_NONE\\\"]=\\\"BLOCK_NONE\\\"})(exports.HarmBlockThreshold||(exports.HarmBlockThreshold={}));exports.HarmProbability=void 0;(function(HarmProbability){HarmProbability[\\\"HARM_PROBABILITY_UNSPECIFIED\\\"]=\\\"HARM_PROBABILITY_UNSPECIFIED\\\";HarmProbability[\\\"NEGLIGIBLE\\\"]=\\\"NEGLIGIBLE\\\";HarmProbability[\\\"LOW\\\"]=\\\"LOW\\\";HarmProbability[\\\"MEDIUM\\\"]=\\\"MEDIUM\\\";HarmProbability[\\\"HIGH\\\"]=\\\"HIGH\\\"})(exports.HarmProbability||(exports.HarmProbability={}));exports.BlockReason=void 0;(function(BlockReason){BlockReason[\\\"BLOCKED_REASON_UNSPECIFIED\\\"]=\\\"BLOCKED_REASON_UNSPECIFIED\\\";BlockReason[\\\"SAFETY\\\"]=\\\"SAFETY\\\";BlockReason[\\\"OTHER\\\"]=\\\"OTHER\\\"})(exports.BlockReason||(exports.BlockReason={}));exports.FinishReason=void 0;(function(FinishReason){FinishReason[\\\"FINISH_REASON_UNSPECIFIED\\\"]=\\\"FINISH_REASON_UNSPECIFIED\\\";FinishReason[\\\"STOP\\\"]=\\\"STOP\\\";FinishReason[\\\"MAX_TOKENS\\\"]=\\\"MAX_TOKENS\\\";FinishReason[\\\"SAFETY\\\"]=\\\"SAFETY\\\";FinishReason[\\\"RECITATION\\\"]=\\\"RECITATION\\\";FinishReason[\\\"OTHER\\\"]=\\\"OTHER\\\"})(exports.FinishReason||(exports.FinishReason={}));exports.TaskType=void 0;(function(TaskType){TaskType[\\\"TASK_TYPE_UNSPECIFIED\\\"]=\\\"TASK_TYPE_UNSPECIFIED\\\";TaskType[\\\"RETRIEVAL_QUERY\\\"]=\\\"RETRIEVAL_QUERY\\\";TaskType[\\\"RETRIEVAL_DOCUMENT\\\"]=\\\"RETRIEVAL_DOCUMENT\\\";TaskType[\\\"SEMANTIC_SIMILARITY\\\"]=\\\"SEMANTIC_SIMILARITY\\\";TaskType[\\\"CLASSIFICATION\\\"]=\\\"CLASSIFICATION\\\";TaskType[\\\"CLUSTERING\\\"]=\\\"CLUSTERING\\\"})(exports.TaskType||(exports.TaskType={}));\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */exports.FunctionDeclarationSchemaType=void 0;(function(FunctionDeclarationSchemaType){FunctionDeclarationSchemaType[\\\"STRING\\\"]=\\\"STRING\\\";FunctionDeclarationSchemaType[\\\"NUMBER\\\"]=\\\"NUMBER\\\";FunctionDeclarationSchemaType[\\\"INTEGER\\\"]=\\\"INTEGER\\\";FunctionDeclarationSchemaType[\\\"BOOLEAN\\\"]=\\\"BOOLEAN\\\";FunctionDeclarationSchemaType[\\\"ARRAY\\\"]=\\\"ARRAY\\\";FunctionDeclarationSchemaType[\\\"OBJECT\\\"]=\\\"OBJECT\\\"})(exports.FunctionDeclarationSchemaType||(exports.FunctionDeclarationSchemaType={}));\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */class GoogleGenerativeAIError extends Error{constructor(message){super(`[GoogleGenerativeAI Error]: ${message}`)}}class GoogleGenerativeAIResponseError extends GoogleGenerativeAIError{constructor(message,response){super(message);this.response=response}}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */const BASE_URL = proxy || \\\"https://generativelanguage.googleapis.com\\\";\\nconst DEFAULT_API_VERSION = \\\"v1\\\"; const PACKAGE_VERSION = \\\"0.3.1\\\"; const PACKAGE_LOG_HEADER = \\\"genai-js\\\"; var Task; (function (Task) { Task[\\\"GENERATE_CONTENT\\\"] = \\\"generateContent\\\"; Task[\\\"STREAM_GENERATE_CONTENT\\\"] = \\\"streamGenerateContent\\\"; Task[\\\"COUNT_TOKENS\\\"] = \\\"countTokens\\\"; Task[\\\"EMBED_CONTENT\\\"] = \\\"embedContent\\\"; Task[\\\"BATCH_EMBED_CONTENTS\\\"] = \\\"batchEmbedContents\\\" })(Task || (Task = {})); class RequestUrl{ constructor(model, task, apiKey, stream, requestOptions) { this.model = model; this.task = task; this.apiKey = apiKey; this.stream = stream; this.requestOptions = requestOptions } toString() { var _a; const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION; let url = `${BASE_URL}/${apiVersion}/${this.model}:${this.task}`; if (this.stream) { url += \\\"?alt=sse\\\" } return url } } function getClientHeaders() { return `${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}` } async function makeRequest(url, body, requestOptions) { let response; try { response = await fetch(url.toString(), Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \\\"POST\\\", headers: { \\\"Content-Type\\\": \\\"application/json\\\", \\\"x-goog-api-client\\\": getClientHeaders(), \\\"x-goog-api-key\\\": url.apiKey }, body: body })); if (!response.ok) { let message = \\\"\\\"; try { const json = await response.json(); message = json.error.message; if (json.error.details) { message += ` ${JSON.stringify(json.error.details)}` } } catch (e) { } throw new Error(`[${response.status} ${response.statusText}] ${message}`) } } catch (e) { const err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`); err.stack = e.stack; throw err } return response } function buildFetchOptions(requestOptions) { const fetchOptions = {}; if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) { const abortController = new AbortController; const signal = abortController.signal; setTimeout((() => abortController.abort()), requestOptions.timeout); fetchOptions.signal = signal } return fetchOptions }\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */function addHelpers(response){response.text=()=>{if(response.candidates&&response.candidates.length>0){if(response.candidates.length>1){console.warn(`This response had ${response.candidates.length} `+`candidates. Returning text from the first candidate only. `+`Access response.candidates directly to use the other candidates.`)}if(hadBadFinishReason(response.candidates[0])){throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`,response)}return getText(response)}else if(response.promptFeedback){throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`,response)}return\\\"\\\"};response.functionCall=()=>{if(response.candidates&&response.candidates.length>0){if(response.candidates.length>1){console.warn(`This response had ${response.candidates.length} `+`candidates. Returning function call from the first candidate only. `+`Access response.candidates directly to use the other candidates.`)}if(hadBadFinishReason(response.candidates[0])){throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`,response)}return getFunctionCall(response)}else if(response.promptFeedback){throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`,response)}return undefined};return response}function getText(response){var _a,_b,_c,_d;if((_d=(_c=(_b=(_a=response.candidates)===null||_a===void 0?void 0:_a[0].content)===null||_b===void 0?void 0:_b.parts)===null||_c===void 0?void 0:_c[0])===null||_d===void 0?void 0:_d.text){return response.candidates[0].content.parts.map((({text:text})=>text)).join(\\\"\\\")}else{return\\\"\\\"}}function getFunctionCall(response){var _a,_b,_c,_d;return(_d=(_c=(_b=(_a=response.candidates)===null||_a===void 0?void 0:_a[0].content)===null||_b===void 0?void 0:_b.parts)===null||_c===void 0?void 0:_c[0])===null||_d===void 0?void 0:_d.functionCall}const badFinishReasons=[exports.FinishReason.RECITATION,exports.FinishReason.SAFETY];function hadBadFinishReason(candidate){return!!candidate.finishReason&&badFinishReasons.includes(candidate.finishReason)}function formatBlockErrorMessage(response){var _a,_b,_c;let message=\\\"\\\";if((!response.candidates||response.candidates.length===0)&&response.promptFeedback){message+=\\\"Response was blocked\\\";if((_a=response.promptFeedback)===null||_a===void 0?void 0:_a.blockReason){message+=` due to ${response.promptFeedback.blockReason}`}if((_b=response.promptFeedback)===null||_b===void 0?void 0:_b.blockReasonMessage){message+=`: ${response.promptFeedback.blockReasonMessage}`}}else if((_c=response.candidates)===null||_c===void 0?void 0:_c[0]){const firstCandidate=response.candidates[0];if(hadBadFinishReason(firstCandidate)){message+=`Candidate was blocked due to ${firstCandidate.finishReason}`;if(firstCandidate.finishMessage){message+=`: ${firstCandidate.finishMessage}`}}}return message}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v)}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb(\\\"next\\\"),verb(\\\"throw\\\"),verb(\\\"return\\\"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){if(g[n])i[n]=function(v){return new Promise((function(a,b){q.push([n,v,a,b])>1||resume(n,v)}))}}function resume(n,v){try{step(g[n](v))}catch(e){settle(q[0][3],e)}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}function fulfill(value){resume(\\\"next\\\",value)}function reject(value){resume(\\\"throw\\\",value)}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1])}}typeof SuppressedError===\\\"function\\\"?SuppressedError:function(error,suppressed,message){var e=new Error(message);return e.name=\\\"SuppressedError\\\",e.error=error,e.suppressed=suppressed,e};\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */const responseLineRE=/^data\\\\: (.*)(?:\\\\n\\\\n|\\\\r\\\\r|\\\\r\\\\n\\\\r\\\\n)/;function processStream(response){const inputStream=response.body.pipeThrough(new TextDecoderStream(\\\"utf8\\\",{fatal:true}));const responseStream=getResponseStream(inputStream);const[stream1,stream2]=responseStream.tee();return{stream:generateResponseSequence(stream1),response:getResponsePromise(stream2)}}async function getResponsePromise(stream){const allResponses=[];const reader=stream.getReader();while(true){const{done:done,value:value}=await reader.read();if(done){return addHelpers(aggregateResponses(allResponses))}allResponses.push(value)}}function generateResponseSequence(stream){return __asyncGenerator(this,arguments,(function*generateResponseSequence_1(){const reader=stream.getReader();while(true){const{value:value,done:done}=yield __await(reader.read());if(done){break}yield yield __await(addHelpers(value))}}))}function getResponseStream(inputStream){const reader=inputStream.getReader();const stream=new ReadableStream({start(controller){let currentText=\\\"\\\";return pump();function pump(){return reader.read().then((({value:value,done:done})=>{if(done){if(currentText.trim()){controller.error(new GoogleGenerativeAIError(\\\"Failed to parse stream\\\"));return}controller.close();return}currentText+=value;let match=currentText.match(responseLineRE);let parsedResponse;while(match){try{parsedResponse=JSON.parse(match[1])}catch(e){controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \\\"${match[1]}\\\"`));return}controller.enqueue(parsedResponse);currentText=currentText.substring(match[0].length);match=currentText.match(responseLineRE)}return pump()}))}}});return stream}function aggregateResponses(responses){const lastResponse=responses[responses.length-1];const aggregatedResponse={promptFeedback:lastResponse===null||lastResponse===void 0?void 0:lastResponse.promptFeedback};for(const response of responses){if(response.candidates){for(const candidate of response.candidates){const i=candidate.index;if(!aggregatedResponse.candidates){aggregatedResponse.candidates=[]}if(!aggregatedResponse.candidates[i]){aggregatedResponse.candidates[i]={index:candidate.index}}aggregatedResponse.candidates[i].citationMetadata=candidate.citationMetadata;aggregatedResponse.candidates[i].finishReason=candidate.finishReason;aggregatedResponse.candidates[i].finishMessage=candidate.finishMessage;aggregatedResponse.candidates[i].safetyRatings=candidate.safetyRatings;if(candidate.content&&candidate.content.parts){if(!aggregatedResponse.candidates[i].content){aggregatedResponse.candidates[i].content={role:candidate.content.role||\\\"user\\\",parts:[]}}const newPart={};for(const part of candidate.content.parts){if(part.text){newPart.text=part.text}if(part.functionCall){newPart.functionCall=part.functionCall}if(Object.keys(newPart).length===0){newPart.text=\\\"\\\"}aggregatedResponse.candidates[i].content.parts.push(newPart)}}}}}return aggregatedResponse}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */async function generateContentStream(apiKey,model,params,requestOptions){const url=new RequestUrl(model,Task.STREAM_GENERATE_CONTENT,apiKey,true,requestOptions);const response=await makeRequest(url,JSON.stringify(params),requestOptions);return processStream(response)}async function generateContent(apiKey,model,params,requestOptions){const url=new RequestUrl(model,Task.GENERATE_CONTENT,apiKey,false,requestOptions);const response=await makeRequest(url,JSON.stringify(params),requestOptions);const responseJson=await response.json();const enhancedResponse=addHelpers(responseJson);return{response:enhancedResponse}}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */function formatNewContent(request){let newParts=[];if(typeof request===\\\"string\\\"){newParts=[{text:request}]}else{for(const partOrString of request){if(typeof partOrString===\\\"string\\\"){newParts.push({text:partOrString})}else{newParts.push(partOrString)}}}return assignRoleToPartsAndValidateSendMessageRequest(newParts)}function assignRoleToPartsAndValidateSendMessageRequest(parts){const userContent={role:\\\"user\\\",parts:[]};const functionContent={role:\\\"function\\\",parts:[]};let hasUserContent=false;let hasFunctionContent=false;for(const part of parts){if(\\\"functionResponse\\\"in part){functionContent.parts.push(part);hasFunctionContent=true}else{userContent.parts.push(part);hasUserContent=true}}if(hasUserContent&&hasFunctionContent){throw new GoogleGenerativeAIError(\\\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\\\")}if(!hasUserContent&&!hasFunctionContent){throw new GoogleGenerativeAIError(\\\"No content is provided for sending chat message.\\\")}if(hasUserContent){return userContent}return functionContent}function formatGenerateContentInput(params){if(params.contents){return params}else{const content=formatNewContent(params);return{contents:[content]}}}function formatEmbedContentInput(params){if(typeof params===\\\"string\\\"||Array.isArray(params)){const content=formatNewContent(params);return{content:content}}return params}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */const VALID_PART_FIELDS=[\\\"text\\\",\\\"inlineData\\\",\\\"functionCall\\\",\\\"functionResponse\\\"];const VALID_PARTS_PER_ROLE={user:[\\\"text\\\",\\\"inlineData\\\"],function:[\\\"functionResponse\\\"],model:[\\\"text\\\",\\\"functionCall\\\"]};const VALID_PREVIOUS_CONTENT_ROLES={user:[\\\"model\\\"],function:[\\\"model\\\"],model:[\\\"user\\\",\\\"function\\\"]};function validateChatHistory(history){let prevContent;for(const currContent of history){const{role:role,parts:parts}=currContent;if(!prevContent&&role!==\\\"user\\\"){throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`)}if(!POSSIBLE_ROLES.includes(role)){throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`)}if(!Array.isArray(parts)){throw new GoogleGenerativeAIError(\\\"Content should have 'parts' property with an array of Parts\\\")}if(parts.length===0){throw new GoogleGenerativeAIError(\\\"Each Content should have at least one part\\\")}const countFields={text:0,inlineData:0,functionCall:0,functionResponse:0};for(const part of parts){for(const key of VALID_PART_FIELDS){if(key in part){countFields[key]+=1}}}const validParts=VALID_PARTS_PER_ROLE[role];for(const key of VALID_PART_FIELDS){if(!validParts.includes(key)&&countFields[key]>0){throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`)}}if(prevContent){const validPreviousContentRoles=VALID_PREVIOUS_CONTENT_ROLES[role];if(!validPreviousContentRoles.includes(prevContent.role)){throw new GoogleGenerativeAIError(`Content with role '${role}' can't follow '${prevContent.role}'. Valid previous roles: ${JSON.stringify(VALID_PREVIOUS_CONTENT_ROLES)}`)}}prevContent=currContent}}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */const SILENT_ERROR=\\\"SILENT_ERROR\\\";class ChatSession{constructor(apiKey,model,params,requestOptions){this.model=model;this.params=params;this.requestOptions=requestOptions;this._history=[];this._sendPromise=Promise.resolve();this._apiKey=apiKey;if(params===null||params===void 0?void 0:params.history){validateChatHistory(params.history);this._history=params.history}}async getHistory(){await this._sendPromise;return this._history}async sendMessage(request){var _a,_b,_c;await this._sendPromise;const newContent=formatNewContent(request);const generateContentRequest={safetySettings:(_a=this.params)===null||_a===void 0?void 0:_a.safetySettings,generationConfig:(_b=this.params)===null||_b===void 0?void 0:_b.generationConfig,tools:(_c=this.params)===null||_c===void 0?void 0:_c.tools,contents:[...this._history,newContent]};let finalResult;this._sendPromise=this._sendPromise.then((()=>generateContent(this._apiKey,this.model,generateContentRequest,this.requestOptions))).then((result=>{var _a;if(result.response.candidates&&result.response.candidates.length>0){this._history.push(newContent);const responseContent=Object.assign({parts:[],role:\\\"model\\\"},(_a=result.response.candidates)===null||_a===void 0?void 0:_a[0].content);this._history.push(responseContent)}else{const blockErrorMessage=formatBlockErrorMessage(result.response);if(blockErrorMessage){console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`)}}finalResult=result}));await this._sendPromise;return finalResult}async sendMessageStream(request){var _a,_b,_c;await this._sendPromise;const newContent=formatNewContent(request);const generateContentRequest={safetySettings:(_a=this.params)===null||_a===void 0?void 0:_a.safetySettings,generationConfig:(_b=this.params)===null||_b===void 0?void 0:_b.generationConfig,tools:(_c=this.params)===null||_c===void 0?void 0:_c.tools,contents:[...this._history,newContent]};const streamPromise=generateContentStream(this._apiKey,this.model,generateContentRequest,this.requestOptions);this._sendPromise=this._sendPromise.then((()=>streamPromise)).catch((_ignored=>{throw new Error(SILENT_ERROR)})).then((streamResult=>streamResult.response)).then((response=>{if(response.candidates&&response.candidates.length>0){this._history.push(newContent);const responseContent=Object.assign({},response.candidates[0].content);if(!responseContent.role){responseContent.role=\\\"model\\\"}this._history.push(responseContent)}else{const blockErrorMessage=formatBlockErrorMessage(response);if(blockErrorMessage){console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`)}}})).catch((e=>{if(e.message!==SILENT_ERROR){console.error(e)}}));return streamPromise}}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */async function countTokens(apiKey,model,params,requestOptions){const url=new RequestUrl(model,Task.COUNT_TOKENS,apiKey,false,{});const response=await makeRequest(url,JSON.stringify(Object.assign(Object.assign({},params),{model:model})),requestOptions);return response.json()}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */async function embedContent(apiKey,model,params,requestOptions){const url=new RequestUrl(model,Task.EMBED_CONTENT,apiKey,false,{});const response=await makeRequest(url,JSON.stringify(params),requestOptions);return response.json()}async function batchEmbedContents(apiKey,model,params,requestOptions){const url=new RequestUrl(model,Task.BATCH_EMBED_CONTENTS,apiKey,false,{});const requestsWithModel=params.requests.map((request=>Object.assign(Object.assign({},request),{model:model})));const response=await makeRequest(url,JSON.stringify({requests:requestsWithModel}),requestOptions);return response.json()}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */class GenerativeModel{constructor(apiKey,modelParams,requestOptions){this.apiKey=apiKey;if(modelParams.model.includes(\\\"/\\\")){this.model=modelParams.model}else{this.model=`models/${modelParams.model}`}this.generationConfig=modelParams.generationConfig||{};this.safetySettings=modelParams.safetySettings||[];this.tools=modelParams.tools;this.requestOptions=requestOptions||{}}async generateContent(request){const formattedParams=formatGenerateContentInput(request);return generateContent(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools},formattedParams),this.requestOptions)}async generateContentStream(request){const formattedParams=formatGenerateContentInput(request);return generateContentStream(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools},formattedParams),this.requestOptions)}startChat(startChatParams){return new ChatSession(this.apiKey,this.model,Object.assign({tools:this.tools},startChatParams),this.requestOptions)}async countTokens(request){const formattedParams=formatGenerateContentInput(request);return countTokens(this.apiKey,this.model,formattedParams)}async embedContent(request){const formattedParams=formatEmbedContentInput(request);return embedContent(this.apiKey,this.model,formattedParams)}async batchEmbedContents(batchEmbedContentRequest){return batchEmbedContents(this.apiKey,this.model,batchEmbedContentRequest,this.requestOptions)}}\\n/**\\n * @license\\n * Copyright 2024 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */class GoogleGenerativeAI{constructor(apiKey){this.apiKey=apiKey}getGenerativeModel(modelParams,requestOptions){if(!modelParams.model){throw new GoogleGenerativeAIError(`Must provide a model name. `+`Example: genai.getGenerativeModel({ model: 'my-model-name' })`)}return new GenerativeModel(this.apiKey,modelParams,requestOptions)}}exports.ChatSession=ChatSession;exports.GenerativeModel=GenerativeModel;exports.GoogleGenerativeAI=GoogleGenerativeAI;exports.POSSIBLE_ROLES=POSSIBLE_ROLES;\",\"module-type\":\"library\",\"type\":\"application/javascript\",\"hide-body\":\"yes\"},\"$:/plugins/oeyoews/neotw-ai/model/spark.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/model/spark.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-ai/model/spark.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\nconst{ModelVersion:t,SparkClient:e,ChatMessage:r}=require(\\\"../lib/spark.min.js\\\");module.exports=async s=>{const{APP_ID:n,API_KEY:o,API_SECRET:a,prompt:i}=s;if(!i)return\\\"没有任何输入\\\";const c=new e(n,o,a),l=t.V3_5,m=[r.fromUser(i)],p=await c.chatAsStreamAsync(l,m);let A=\\\"\\\";for await(const t of p)A+=t.text;return A};\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-ai/styles.css\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/styles.css\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\".gemini-svg::after {\\n\\tcontent: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='M24 0v24H0V0zM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022m-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z'/%3E%3Cpath fill='black' d='M5.827 13.004a.19.19 0 0 1 .346 0l.17.371a8.693 8.693 0 0 0 3.3 3.638l.265.155a.181.181 0 0 1 0 .316l-.265.155a8.693 8.693 0 0 0-3.3 3.638l-.17.372a.19.19 0 0 1-.346 0l-.17-.372a8.693 8.693 0 0 0-3.3-3.638l-.265-.155a.181.181 0 0 1 0-.316l.265-.155a8.693 8.693 0 0 0 3.47-4.01Zm.17 3.486l-.175.206c-.125.14-.253.277-.385.41l-.2.198l-.027.024l.227.223l.195.203l.19.208l.175.205l.175-.205c.125-.14.253-.278.385-.411l.227-.223l-.027-.024c-.135-.13-.267-.263-.395-.4l-.19-.208zm8.476-13.76a.331.331 0 0 1 .605 0l.15.336l.148.314l.195.39l.226.42l.112.196a15.214 15.214 0 0 0 3.895 4.437l.427.317a15.192 15.192 0 0 0 1.383.878a.317.317 0 0 1 0 .553a15.258 15.258 0 0 0-1.082.67l-.36.251a15.213 15.213 0 0 0-4.263 4.71l-.131.232a14.95 14.95 0 0 0-.402.775l-.147.314l-.15.336a.331.331 0 0 1-.606 0l-.15-.336l-.148-.314l-.196-.39l-.225-.42l-.113-.196a15.214 15.214 0 0 0-3.894-4.437l-.428-.316a15.153 15.153 0 0 0-1.382-.88a.317.317 0 0 1 0-.552a15.298 15.298 0 0 0 1.082-.669l.36-.252a15.215 15.215 0 0 0 4.262-4.71l.132-.232c.141-.254.275-.512.402-.775l.147-.314zm.302 3.615a17.215 17.215 0 0 1-3.663 3.95a17.214 17.214 0 0 1 3.663 3.95a17.212 17.212 0 0 1 3.663-3.95a17.213 17.213 0 0 1-3.663-3.95'/%3E%3C/g%3E%3C/svg%3E\\\");\\n}\"},\"$:/plugins/oeyoews/neotw-ai/viewtemplate/daily\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/viewtemplate/daily\",\"tags\":\"$:/tags/ViewTemplate\",\"list-before\":\"$:/core/ui/ViewTemplate/body\",\"text\":\"<% if [all[current]!is[system]tag[Journal]] %>\\n  <$neotw-ai targetField=\\\"quote\\\" model=\\\"gemini\\\" />\\n<% endif %>\"},\"$:/plugins/oeyoews/neotw-ai/viewtemplate/summary\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/viewtemplate/summary\",\"tags\":\"$:/tags/ViewTemplate\",\"list-before\":\"$:/core/ui/ViewTemplate/body\",\"text\":\"<% if [all[current]!is[system]gemini[yes]] [all[current]!is[system]publish[article]] %>\\n\\t<$neotw-ai />\\n<% endif %>\"},\"$:/plugins/oeyoews/neotw-ai/widget.js\":{\"title\":\"$:/plugins/oeyoews/neotw-ai/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-ai/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nneotw-ai widget\\n\\n\\\\*/\\nconst{widget:e}=require(\\\"$:/core/modules/widgets/widget.js\\\");exports[\\\"neotw-ai\\\"]=class extends e{constructor(e,t){super(e,t)}render(e,t){if(!$tw.browser)return;if(this.computeAttributes(),this.execute(),this.document.isTiddlyWikiFakeDom)return;window.Vue||(window.Vue=require(\\\"$:/plugins/oeyoews/neotw-vue3/vue.global.prod.js\\\"));const{createApp:r}=window.Vue,s=require(\\\"./app\\\"),o=this.document.createElement(\\\"div\\\"),i=require(\\\"./plugins/TiddlyWikiVue\\\"),n=this.getVariable(\\\"currentTiddler\\\"),{targetField:u,model:d,text:c,tip:l}=this.attributes;if(n)try{const a=r(s(n,c,l,d,u));a.use(i),a.config.errorHandler=e=>{const t=`[Vue3](${a.version}): `+e.message;console.error(t),o.textContent=t,o.style.color=\\\"red\\\"},a.mount(o),e.insertBefore(o,t),this.domNodes.push(o)}catch(e){console.error(e.message)}else console.warn(n)}refresh(){return!1}};\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}