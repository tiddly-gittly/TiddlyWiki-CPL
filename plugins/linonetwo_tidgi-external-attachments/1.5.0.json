{"author":"LinOnetwo","dependents":"","description":"External attachments for TidGi Desktop App, drag&drop image/binary file to wiki, and become skinny tiddler (a pointer to actural file). ","list":"readme settings tree","name":"External Attachments for TidGi app","plugin-type":"plugin","text":"{\"tiddlers\":{\"$:/config/ExternalAttachments/Enable\":{\"title\":\"$:/config/ExternalAttachments/Enable\",\"text\":\"yes\"},\"$:/config/ExternalAttachments/EnableForImage\":{\"title\":\"$:/config/ExternalAttachments/EnableForImage\",\"text\":\"yes\"},\"$:/config/ExternalAttachments/MoveToWikiFolder\":{\"title\":\"$:/config/ExternalAttachments/MoveToWikiFolder\",\"text\":\"yes\"},\"$:/config/ExternalAttachments/WikiFolderToMove\":{\"title\":\"$:/config/ExternalAttachments/WikiFolderToMove\",\"text\":\"files\"},\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\":{\"title\":\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\",\"text\":\"no\"},\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\":{\"title\":\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\",\"text\":\"yes\"},\"$:/plugins/linonetwo/tidgi-external-attachments/extlink/en-GB\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/extlink/en-GB\",\"text\":\"!！ Introduction\\n\\nThis plugin provides support for importing tiddlers as external attachments.\\n\\nOn the TidGi App, you can choose to import the binary large file as a 'reference tiddler', which means that the tiddler will refer to the original file via the ''_canonical_uri'' field, while itself will be almost an empty file, thus saving storage space in the Wiki. This reduces the size of the wiki and thus improves performance. However, it does mean that the wiki is no longer fully self-contained.\\n\\n!！ Compatibility\\n\\nThis plugin only works when using TiddlyWiki with platforms such as TiddlyDesktop/TidGi Desktop that support the ''path'' attribute for imported/dragged files (provided by app).\\n\\n!! Attachment\\n\\nFor `_canonical_uri`, it is recommended ''not'' to add the `file://` prefix because the web page does not support the `file://` prefix. Adding it will cause image attachments to fail to load when deployed to the web page blog.\\n\\n```tid\\n_canonical_uri: files/A File.pdf\\n```\\n\\n!! Link\\n\\nThe link needs to add the `file://` prefix so that you can click the link in the Taiji App to directly open the file. Without the prefix, Tiddlywiki cannot recognize it as an external file link and will think it is an internal Wiki link, resulting in failure to open. \\n\\n!!! Absolute `file://` link\\n\\nTidGi supports link and `_canonical_uri` to use `file://` prefix (or `open://`, both works the same), for example:\\n\\n```wikitext\\n[ext[Some External File Link with CJK character|file:///Users/linonetwo/Downloads/(OCRed)奖励的惩罚 (（美）科恩著) (Z-Library).pdf]]\\n\\n[ext[An External Folder Link|file:///Users/linonetwo/Downloads/]]\\n```\\n\\nSo when you drag a file into TidGi app, `_canonical_uri` created by this plugin will also prefixed by `file://`.\\n\\nThis prefix looks like `file:///` because absolute paths usually start with `/`, plus two slashes for `file://`, so it looks like three slashes.\\n\\n!!! Relative `file://` link\\n\\nTidGi also supports relative path in your wiki folder. Starting with `file://` and directly followed by a folder name or file name is a relative path, e.g:\\n\\n```wikitext\\n[ext[PDF in the files folder|file://files/A File.pdf]]\\n\\n[ext[Open the tiddlers folder|file://tiddlers/]]\\n```\\n\\nYou can also use `. /` to explicitly indicate that this is a relative path:\\n\\n```wikitext\\n[ext[PDF in the files folder|file://./files/A File.pdf]]\\n\\n[ext[Open the tiddlers folder|file://./tiddlers/]]\\n```\\n\\n{{$:/plugins/linonetwo/tidgi-external-attachments/settings/en-GB-desc}}\\n\\n\\ntitle: $:/plugins/linonetwo/tidgi-external-attachments/readme/en\\n\\n!! 🌟 Core Features\\n\\nThis plugin intelligently manages large files as \\\"external attachments\\\", creating lightweight \\\"reference tiddlers\\\" to maintain Wiki performance.\\n\\n!! 🚀 Quick Start\\n\\n```wikitext\\n[Drag any file] → [Preview info] → [Click \\\"Import\\\"] → ✅ Done!\\n```\\n* 💡 Auto-creates `files` directory\\n* 🔗 Generates standardized relative paths\\n* 🌍 Fully compatible with web deployment\\n\\n!! 🛠 Feature Details\\n\\n!!! 🖱️ Drag-and-Drop Workflow\\n* ✓ Drag files from any location (desktop/downloads)\\n* ✓ Auto-generates preview (file size/type)\\n* ✓ After confirmation:\\n  ** 🗂️ Auto-moves to `files` directory (if enabled)\\n  ** 📝 Creates reference tiddler with `_canonical_uri`\\n\\n!!! ⚙️ Path Management Rules\\n* ◻︎ Default Mode (Recommended):\\n  ** → Automatically maintains `files` structure\\n  ** → Always uses relative paths (`files/example.pdf`)\\n* ◻︎ Advanced Mode:\\n  ** → Customizable storage directory\\n  ** → Absolute paths for external files (manual maintenance)\\n\\n!! ⚠️ Critical Notes\\n\\n!!! 🔗 Path Compatibility\\n* 🚫 Absolute path files:\\n  ** 📌 Local device access only\\n  ** 🌐 Unavailable for web deployment\\n  ** 🔄 Cross-device sync fails\\n* ✅ Relative path files:\\n  ** 📦 Supports full-platform sync\\n  ** 🚀 Plug-and-play deployment\\n\\n!!! ⏳ Operation Timing\\n* 🕒 File movement occurs after \\\"Import\\\" click\\n* ↩️ Canceling leaves no residual files\\n* 🆕 Auto-creates directory on first use\\n\\n!! 🔗 Extended Usage: External Links\\n\\n!!! 📎 File Linking Best Practices\\n```wikitext\\n[ext[📂 Open Folder|file://./files/]]\\n[ext[📄 View PDF|file://files/document.pdf]]\\n```\\n* 💡 Must include `file://` protocol\\n* 🚫 Not supported on web version\\n\\n!!! ❌ Common Mistakes\\n* Attachment fields (`_canonical_uri`):\\n  ** 🚫 Should NOT contain `file://` \\n  ** ✅ Correct: `files/image.jpg`\\n* Body links:\\n  ** ✅ Must include `file://`\\n  ** Wrong: `[Link|files/file.pdf]`\\n\\n!! 🧰 Troubleshooting\\n\\n| Issue                | Solution                 |\\n|----------------------|--------------------------|\\n| Files not moving     | ✔️ Verify \\\"Import\\\" click  |\\n| Web version failure  | ✔️ Confirm using `files`  |\\n| Cross-device path fail| ✔️ Enable auto-move       |\\n\\n!! 🌐 Cross-Platform Support\\n\\n| Platform   | Attachments | Links     |\\n|------------|-------------|-----------|\\n| Windows    | ✅           | ✅         |\\n| macOS      | ✅           | ✅         |\\n| Linux      | ✅           | ✅         |\\n| Web        | ✅           | ❌         |\\n\\n(This version uses icon visualization for key operations, adds comparison tables for technical details, and adopts a more compact layout structure)\"},\"$:/plugins/linonetwo/tidgi-external-attachments/extlink/zh-Hans\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/extlink/zh-Hans\",\"text\":\"!! 外部链接\\n\\n如果不希望用拖入文件的方式管理，可以通过加外部链接的方式引用文件，这样可以在太记 App 上点击链接直接打开文件。\\n\\n!!! 链接\\n\\n链接需要加上 `file://` 前缀，这样可以在太记 App 上点击链接直接打开文件。不加前缀时太微无法将其识别为外部文件链接，会以为是一个 Wiki 内部链接，导致无法打开。\\n\\n!!! 绝对路径 `file://` 链接\\n\\n太记支持在链接和 `_canonical_uri` 字段里使用 `file://` 前缀（或 `open://`，两者效果相同）：\\n\\n```wikitext\\n[ext[一个带有中文字符的文件例子|file:///Users/linonetwo/Downloads/(OCRed)奖励的惩罚 (（美）科恩著) (Z-Library).pdf]]\\n\\n[ext[打开外部文件夹的链接|file:///Users/linonetwo/Downloads/]]\\n```\\n\\n因此，当你把一个文件拖入太记时，这个插件创建的 `_canonical_uri` 也将以 `file://` 为前缀。\\n\\n这个前缀看起来像是 `file:///`，是因为绝对路径一般以 `/` 开始，再加上 `file://` 的两个斜杠，所以看起来像是三个斜杠。\\n\\n!!! 相对路径 `file://` 链接\\n\\n太记还支持你的 Wiki 文件夹中的相对路径，以 `file://` 开头并直接跟上文件夹名或文件名，就是相对路径，例如：\\n\\n```wikitext\\n[ext[PDF in the files folder|file://files/A File.pdf]]\\n\\n[ext[Open the tiddlers folder|file://tiddlers/]]\\n```\\n\\n也可以用 `./` 明显地表示这是一个相对路径：\\n\\n```wikitext\\n[ext[PDF in the files folder|file://./files/A File.pdf]]\\n\\n[ext[Open the tiddlers folder|file://./tiddlers/]]\\n```\\n\\n!!! 链接和附件的区别\\n\\n附件即是通过 `_canonical_uri` 字段引用的外部文件，对于附件里的地址，建议''不''加 `file://` 前缀，因为网页端不支持 `file://` 前缀，加了会导致图片附件在部署到网页端博客时无法加载，下面是一个不带 `file://` 前缀的好的例子：\\n\\n```tid\\n_canonical_uri: files/A File.pdf\\n```\\n\\n而外部链接则是直接在正文里加上的链接，这种链接需要加上 `file://` 前缀，以便在太记 App 上点击链接直接打开文件，下面是一个带 `file://` 前缀的好的例子：\\n\\n```wikitext\\n[ext[A File|file://./files/A File.pdf]]\\n```\\n\"},\"$:/plugins/linonetwo/tidgi-external-attachments/extlink\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/extlink\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n\\n\\t<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n\\t\\t{{$:/plugins/linonetwo/tidgi-external-attachments/extlink/zh-Hans}}\\n\\n\\t</$list>\\n\\n\\t<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\n\\t\\t{{$:/plugins/linonetwo/tidgi-external-attachments/extlink/en-GB}}\\n\\n\\t</$list>\\n\\n</$list>\"},\"$:/plugins/linonetwo/tidgi-external-attachments/readme/en-GB\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/readme/en-GB\",\"text\":\"!! 🌟 Core Features\\n\\nThis plugin intelligently manages large files as \\\"external attachments\\\", creating lightweight \\\"reference tiddlers\\\" to maintain Wiki performance.\\n\\n!! 🚀 Quick Start\\n\\n```wikitext\\n[Drag any file] → [Preview info] → [Click \\\"Import\\\"] → ✅ Done!\\n```\\n* 💡 Auto-creates `files` directory\\n* 🔗 Generates standardized relative paths\\n* 🌍 Fully compatible with web deployment\\n\\n!! 🛠 Feature Details\\n\\n!!! 🖱️ Drag-and-Drop Workflow\\n* ✓ Drag files from any location (desktop/downloads)\\n* ✓ Auto-generates preview (tiddler fields/file location)\\n* ✓ After confirmation:\\n** 🗂️ Auto-moves to `files` directory (if enabled)\\n** 📝 Creates reference tiddler with `_canonical_uri`\\n\\n!!! ⚙️ Path Management Rules\\n* ◻︎ Default Mode (Recommended):\\n** → Automatically maintains `files` structure\\n** → Always uses relative paths (`files/example.pdf`)\\n* ◻︎ Advanced Mode (if modified the [[settings|$:/plugins/linonetwo/tidgi-external-attachments/settings]]):\\n** → Customizable storage directory\\n** → Absolute paths for external files (manual maintenance)\\n\\n!! ⚠️ Critical Notes\\n\\n!!! 🔗 Path Compatibility\\n* 🚫 Absolute path files:\\n** 📌 Local device access only\\n** 🌐 Unavailable for web deployment\\n** 🔄 Cross-device sync fails\\n* ✅ Relative path files:\\n** 📦 Supports full-platform sync\\n** 🚀 Plug-and-play deployment\\n\\n!!! ⏳ Operation Timing\\n* 🕒 File movement occurs after \\\"Import\\\" click\\n* ↩️ Canceling leaves no residual files\\n* 🆕 Auto-creates directory on first use\\n\\n!! 🔗 Extended Usage: External Links\\n\\n[[📄 View more external link examples|$:/plugins/linonetwo/tidgi-external-attachments/extlink]]\\n\\n!!! 📎 File Linking Best Practices\\n```wikitext\\n[ext[📂 Open Folder|file://./files/]]\\n[ext[📄 View PDF|file://files/document.pdf]]\\n```\\n* 💡 Must include `file://` protocol\\n* 🚫 Not supported on web version\\n\\n!!! ❌ Common Mistakes\\n* Attachment fields (`_canonical_uri`):\\n** 🚫 Should NOT contain `file://` \\n** ✅ Correct: `files/image.jpg`\\n* Body links:\\n** ✅ Must include `file://`\\n** Wrong: `[Link|files/file.pdf]`\\n\\n!! 🧰 Troubleshooting\\n\\n| Issue                | Solution                 |\\n| Files not moving     | ✔️ Verify \\\"Import\\\" click  |\\n| Web version failure  | ✔️ Confirm using `files`  |\\n| Cross-device path fail| ✔️ Enable auto-move       |\\n\\n!! 🌐 Cross-Platform Support\\n\\nClose this plugin, and the dragged content will be stored directly as tiddlers, which is the most compatible way but will significantly increase the file size and slow down the startup speed. The following is a compatibility chart.\\n\\n| Platform   | Attachments | Links     | As Tiddler |\\n| Windows    | ✅           | ✅        | ✅        |\\n| macOS      | ✅           | ✅        | ✅        |\\n| Linux      | ✅           | ✅        | ✅        |\\n| Web        | ✅           | ❌        | ✅        |\\n| Mobile     | ❓           | ❌        | ✅        |\\n\"},\"$:/plugins/linonetwo/tidgi-external-attachments/readme/zh-Hans\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/readme/zh-Hans\",\"text\":\"!! 🌟 核心功能\\n\\n本插件实现将大文件作为「外部附件」智能管理，生成轻量级「引用条目」，保持 Wiki 高效运行。\\n\\n!! 🚀 快速入门\\n\\n```wikitext\\n[拖入任意文件] → [预览信息] → [点击\\\"导入\\\"] → ✅ 完成！\\n```\\n* 💡 自动创建 `files` 目录\\n* 🔗 生成规范相对路径\\n* 🌍 完美兼容网页部署\\n\\n!! 🛠 功能详解\\n\\n!!! 🖱️ 拖放导入流程\\n* ✓ 任意位置拖入文件（桌面/下载目录等）\\n* ✓ 自动生成预览信息（条目字段/文件移动位置等）\\n* ✓ 点击确认后：\\n** 🗂️ 自动移动至 `files` 目录（若开启）\\n** 📝 创建带 `_canonical_uri` 的引用条目\\n\\n!!! ⚙️ 路径管理规则\\n\\n* ◻︎ 默认模式（推荐）：\\n** → 自动维护 `files` 目录结构\\n** → 始终使用相对路径（`files/example.pdf`）\\n* ◻︎ 高级模式（如果修改了[[配置|$:/plugins/linonetwo/tidgi-external-attachments/settings]]）：\\n** → 可自定义存储目录\\n** → Wiki外文件使用绝对路径（需手动维护）\\n\\n!! ⚠️ 重要注意事项\\n\\n!!! 🔗 路径兼容性\\n* 🚫 绝对路径文件：\\n** 📌 仅限本地设备访问\\n** 🌐 网页部署不可用\\n** 🔄 跨设备同步失效\\n* ✅ 相对路径文件：\\n** 📦 支持全平台同步\\n** 🚀 即插即用式部署\\n\\n!!! ⏳ 操作时机\\n* 🕒 文件移动发生在「导入」按钮点击后\\n* ↩️ 取消操作不会产生残留文件\\n* 🆕 首次使用自动创建目录结构\\n\\n!! 🔗 扩展应用：外部链接技巧\\n\\n[[📄 查看更多外部链接示例|$:/plugins/linonetwo/tidgi-external-attachments/extlink]]\\n\\n!!! 📎 文件链接最佳实践\\n```wikitext\\n[ext[📂 打开文件夹|file://./files/]]\\n[ext[📄 查看PDF|file://files/文档.pdf]]\\n```\\n* 💡 必须添加 `file://` 协议头\\n* 🚫 网页端不支持此协议\\n\\n!!! ❌ 常见误区\\n* 附件字段（`_canonical_uri`）：\\n** 🚫 不应包含 `file://` 前缀或 `./` 前缀\\n** ✅ 正确示例：`_canonical_uri: files/图片.jpg`\\n* 正文链接：\\n** ✅ 必须包含 `file://` 前缀\\n** 错误示例：`[ext[链接|files/文件.pdf]]`\\n\\n!! 🧰 故障排查\\n\\n| 现象               | 解决方案                |\\n| 文件未移动          | ✔️ 检查是否点击\\\"导入\\\"按钮 |\\n| 网页版加载失败      | ✔️ 确认使用默认`files`目录 |\\n| 跨设备路径失效      | ✔️ 开启自动移动功能       |\\n\\n!! 🌐 跨平台支持\\n\\n关闭此插件时，拖入的内容会直接作为条目存入，兼容性最好，但会大幅增大太微文件体积，且会严重拖慢启动速度。以下是兼容性示意图。\\n\\n| 平台      | 附件支持 | 链接支持 | 作为条目 |\\n| Windows  | ✅       | ✅      | ✅      |\\n| macOS    | ✅       | ✅      | ✅      |\\n| Linux    | ✅       | ✅      | ✅      |\\n| 网页部署  | ✅       | ❌      | ✅      |\\n| 移动端    | ❓       | ❌      | ✅      |\\n\"},\"$:/plugins/linonetwo/tidgi-external-attachments/readme\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/readme\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n\\n\\t<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n\\t\\t{{$:/plugins/linonetwo/tidgi-external-attachments/readme/zh-Hans}}\\n\\n\\t</$list>\\n\\n\\t<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\n\\t\\t{{$:/plugins/linonetwo/tidgi-external-attachments/readme/en-GB}}\\n\\n\\t</$list>\\n\\n</$list>\"},\"$:/plugins/linonetwo/tidgi-external-attachments/settings/settings-caption\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/settings/settings-caption\",\"text\":\"\\\\whitespace trim\\n\\n<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n\\t<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\t\\t<$transclude tiddler=\\\"$:/plugins/linonetwo/tidgi-external-attachments/settings/zh-Hans\\\" field=\\\"caption\\\" />\\n\\t</$list>\\n\\n\\t<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\t\\t<$transclude tiddler=\\\"$:/plugins/linonetwo/tidgi-external-attachments/settings/en-GB\\\" field=\\\"caption\\\" />\\n\\t</$list>\\n</$list>\"},\"$:/plugins/linonetwo/tidgi-external-attachments/settings/en-GB\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/settings/en-GB\",\"caption\":\"ExtAttach\",\"text\":\"!! Configs\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/Enable\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <$link to=\\\"$:/config/ExternalAttachments/Enable\\\">Enable importing binary files as external attachments</$link> </$checkbox>\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/EnableForImage\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"yes\\\"> <$link to=\\\"$:/config/ExternalAttachments/EnableForImage\\\">Importing images as attachments</$link> </$checkbox> If disabled, images will be imported as internal image tiddlers, which increases file size and slows down startup, but improves compatibility.\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/MoveToWikiFolder\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <$link to=\\\"$:/config/ExternalAttachments/MoveToWikiFolder\\\">Automatically move imported files to the Wiki folder</$link> </$checkbox>\\n\\n<%if [{$:/config/ExternalAttachments/MoveToWikiFolder}match[yes]] %>\\n\\n  <$edit-text tiddler=\\\"$:/config/ExternalAttachments/WikiFolderToMove\\\" tabindex=-1 focus=false cancelPopups=\\\"yes\\\" fileDrop=no tag=\\\"input\\\" /> Automatically move files to this folder inside the Wiki folder (suggested to keep using `files`).\\n\\n<% else %>\\n\\n  <$checkbox tiddler=\\\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\">\\n    <$link to=\\\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\\\">\\n      Use absolute paths for attachments ''outside'' the Wiki folder (anywhere on the computer)\\n    </$link>\\n  </$checkbox>\\n\\n<% endif %>\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <$link to=\\\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\\\">Use absolute paths for descendent attachments (inside wiki folder)</$link> </$checkbox>\\n\\n!! Recommended Configuration\\n\\n* Keep \\\"Automatically move files to Wiki folder\\\" enabled (default)\\n* Retain the default storage directory as `files`\\n* Always disable \\\"Use absolute paths for files within Wiki\\\"\\n\\nRead more in the [[plugin readme|$:/plugins/linonetwo/tidgi-external-attachments/readme]].\\n\"},\"$:/plugins/linonetwo/tidgi-external-attachments/settings/zh-Hans\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/settings/zh-Hans\",\"caption\":\"外部附件\",\"text\":\"!! 配置项\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/Enable\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <$link to=\\\"$:/config/ExternalAttachments/Enable\\\" >启用本插件，将拖入的二进制文件都作为「引用条目」导入</$link> </$checkbox>\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/EnableForImage\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"yes\\\"> <$link to=\\\"$:/config/ExternalAttachments/EnableForImage\\\">在拖入图片时也导入为附件</$link> </$checkbox> 如果关闭，则图片会被直接导入为内置的图片条目而不是附件，增大文件体积拖慢启动速度，但提高兼容性。\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/MoveToWikiFolder\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <$link to=\\\"$:/config/ExternalAttachments/MoveToWikiFolder\\\">自动将拖入的文件移动到 Wiki 文件夹内</$link> </$checkbox>\\n\\n<%if [{$:/config/ExternalAttachments/MoveToWikiFolder}match[yes]] %>\\n\\n  <$edit-text tiddler=\\\"$:/config/ExternalAttachments/WikiFolderToMove\\\" tabindex=-1 focus=false cancelPopups=\\\"yes\\\" fileDrop=no tag=\\\"input\\\" /> 自动移动文件到 Wiki 文件夹里的这个文件夹里（建议保持用 `files`）。\\n\\n<% else %>\\n\\n  <$checkbox tiddler=\\\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\">\\n    <$link to=\\\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\\\">\\n      为 Wiki 文件夹''外''的附件使用绝对路径（文件在电脑上的任何地方）\\n    </$link>\\n  </$checkbox>\\n\\n<% endif %>\\n\\n<$checkbox tiddler=\\\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <$link to=\\\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\\\">使用绝对路径引用 Wiki 文件夹''内''的文件（不推荐开启）</$link> </$checkbox>\\n\\n!! 推荐配置\\n\\n* 保持「自动移动文件到 Wiki 文件夹内」开启（默认启用）\\n* 保留默认存储目录为 `files` \\n* 始终关闭「为 Wiki 内文件使用绝对路径」\\n\\n阅读[[插件说明|$:/plugins/linonetwo/tidgi-external-attachments/readme]]了解更多信息。\\n\"},\"$:/plugins/linonetwo/tidgi-external-attachments/settings\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/settings\",\"tags\":\"$:/tags/ControlPanel/SettingsTab\",\"caption\":\"{{$:/plugins/linonetwo/tidgi-external-attachments/settings/settings-caption}}\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n\\n\\t<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\t\\n\\t\\t{{$:/plugins/linonetwo/tidgi-external-attachments/settings/zh-Hans}}\\n\\n\\t</$list>\\n\\n\\t<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\t\\n\\t\\t{{$:/plugins/linonetwo/tidgi-external-attachments/settings/en-GB}}\\n\\n\\t</$list>\\n\\n</$list>\"},\"$:/plugins/linonetwo/tidgi-external-attachments/tree\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/tree\",\"caption\":\"{{$:/language/SideBar/Explorer/Caption}}\",\"text\":\"<<tree \\\"$:/plugins/linonetwo/tidgi-external-attachments/\\\">>\\n\"},\"$:/plugins/linonetwo/tidgi-external-attachments/startup.js\":{\"title\":\"$:/plugins/linonetwo/tidgi-external-attachments/startup.js\",\"type\":\"application/javascript\",\"module-type\":\"startup\",\"Modern.TiddlyDev#Origin\":\"startup.ts\",\"text\":\"\\\"use strict\\\";function makePathRelative(t,e,i={}){const o=(t=(i.isWindows||$tw.platform.isWindows)&&\\\"//\\\"===(t=\\\"/\\\"!==(t=t.replaceAll(\\\"\\\\\\\\\\\",\\\"/\\\")).charAt(0)?\\\"/\\\"+t:t).substring(0,2)?t.substring(1):t).split(\\\"/\\\");var n=e.split(\\\"/\\\"),r=[];$tw.platform.isMac&&\\\"private\\\"===o[1]&&o.splice(1,1),$tw.utils.each(o,function(t,e){o[e]=encodeURI(t)});let s=0;for(;s<o.length&&s<n.length&&o[s]===n[s];)s+=1;if(1===s||i.useAbsoluteForNonDescendents&&s<n.length||i.useAbsoluteForDescendents&&s===n.length)return t;let l=0;for(l=s;l<n.length-1;l++)r.push(\\\"..\\\");for(l=s;l<o.length;l++)r.push(o[l]);return r.join(\\\"/\\\")}function joinPaths(...t){let e=t.join(\\\"/\\\");return e=$tw.platform.isWindows?e.replaceAll(\\\"/\\\",\\\"\\\\\\\\\\\"):e}function basePath(t){return $tw.platform.isWindows?t.split(\\\"\\\\\\\\\\\").pop()||\\\"\\\":t.split(\\\"/\\\").pop()||\\\"\\\"}var ENABLE_EXTERNAL_ATTACHMENTS_TITLE=\\\"$:/config/ExternalAttachments/Enable\\\",ENABLE_FOR_IMAGE_TITLE=\\\"$:/config/ExternalAttachments/EnableForImage\\\",USE_ABSOLUTE_FOR_DESCENDENTS_TITLE=\\\"$:/config/ExternalAttachments/UseAbsoluteForDescendents\\\",USE_ABSOLUTE_FOR_NON_DESCENDENTS_TITLE=\\\"$:/config/ExternalAttachments/UseAbsoluteForNonDescendents\\\",MOVE_TO_WIKI_FOLDER_TITLE=\\\"$:/config/ExternalAttachments/MoveToWikiFolder\\\",WIKI_FOLDER_TO_MOVE_TITLE=\\\"$:/config/ExternalAttachments/WikiFolderToMove\\\";exports.name=\\\"tidgi-external-attachments\\\",exports.platforms=[\\\"browser\\\"],exports.after=[\\\"startup\\\"],exports.synchronous=!0,exports.makePathRelative=makePathRelative,exports.startup=function(){var t;\\\"undefined\\\"!=typeof window&&\\\"function\\\"==typeof window.meta&&(t=window?.meta?.()?.workspaceID)&&window?.service?.workspace?.get(t).then(t=>{const r=t?.wikiFolderLocation;r&&($tw.hooks.addHook(\\\"th-before-importing\\\",function(t){if(!t.fields.text.includes(\\\"willMoveFromPath\\\"))return t;const r=$tw.utils.parseJSONSafe(t.fields.text)?.tiddlers??{};Object.keys(r).forEach(t=>{var e;let{willMoveFromPath:i,willMoveToPath:o,...n}=r[t];i&&\\\"string\\\"==typeof i&&o&&\\\"string\\\"==typeof o&&(window.service?.[\\\"native\\\"]?.movePath?.(i,o,{fileToDir:!0}),(e={...$tw.wiki.getTiddler(t)?.fields,...n,...$tw.wiki.tiddlerExists(t)?{}:$tw.wiki.getCreationFields(),...$tw.wiki.getModificationFields()}).created&&(e.created=$tw.utils.stringifyDate(e.created)),e.modified&&(e.modified=$tw.utils.stringifyDate(e.modified)),r[t]=e)});var e=new $tw.Tiddler(t,{text:JSON.stringify({tiddlers:r})});return $tw.wiki.addTiddler(e),e}),$tw.hooks.addHook(\\\"th-importing-file\\\",function(t){if(t.type.startsWith(\\\"image\\\")&&\\\"no\\\"===$tw.wiki.getTiddlerText(ENABLE_FOR_IMAGE_TITLE,\\\"\\\"))return!1;let e=window.remote?.getPathForFile?.(t.file);var i=\\\"yes\\\"===$tw.wiki.getTiddlerText(ENABLE_EXTERNAL_ATTACHMENTS_TITLE,\\\"\\\");if(!(t.isBinary&&e&&i))return!1;let o;\\\"yes\\\"===$tw.wiki.getTiddlerText(MOVE_TO_WIKI_FOLDER_TITLE,\\\"\\\")&&(i=$tw.wiki.getTiddlerText(WIKI_FOLDER_TO_MOVE_TITLE,\\\"\\\"),n=e,i=joinPaths(r,i,basePath(e)),e=i,o={willMoveToPath:i,willMoveFromPath:n});var i=makePathRelative(e,r,{useAbsoluteForNonDescendents:\\\"yes\\\"===$tw.wiki.getTiddlerText(USE_ABSOLUTE_FOR_NON_DESCENDENTS_TITLE,\\\"\\\"),useAbsoluteForDescendents:\\\"yes\\\"===$tw.wiki.getTiddlerText(USE_ABSOLUTE_FOR_DESCENDENTS_TITLE,\\\"\\\")}),n={title:t.file.name,type:t.type,_canonical_uri:i,willMoveFromPath:o?.willMoveFromPath,willMoveToPath:o?.willMoveToPath};return t.callback([n]),!0}))})};\"}}}","title":"$:/plugins/linonetwo/tidgi-external-attachments","type":"application/json","version":"1.5.0","Modern.TiddlyDev#SHA256-Hashed":"2fc06e2eab0abf0502394ce1bcce1e06b1e30e4cf2168f05f9302dfe84f2159c"}