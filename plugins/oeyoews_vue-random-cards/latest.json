{"title":"$:/plugins/oeyoews/vue-random-cards","description":"vue-random-cards","author":"oeyoews","version":"0.0.2","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"vue-random-cards","meat#disabled":"yes","qrcode":"yes","created":"2024-03-08","dependents":"$:/plugins/oeyoews/neotw-vue3","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/vue-random-cards/readme\":{\"title\":\"$:/plugins/oeyoews/vue-random-cards/readme\",\"text\":\"<!-- plugin template readme -->\\n\\n## Example\\n\\n<$vue-random-cards />\\n\\n## Motivation\\n\\n<!-- your plugin motivation, or why you write this plugin -->\\n\",\"type\":\"text/markdown\",\"description\":\"vue-random-cards\"},\"$:/plugins/oeyoews/vue-random-cards/component.js\":{\"title\":\"$:/plugins/oeyoews/vue-random-cards/component.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/vue-random-cards/component.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n\\nconst { reactive, watch, toRaw, computed, ref } = window.Vue;\\nconst palette = $tw.wiki.getTiddlerText('$:/palette');\\nconst theme =\\n  $tw.wiki.getTiddler(palette).fields['color-scheme'] === 'dark'\\n    ? 'dark'\\n    : 'light';\\n\\nconst story = new $tw.Story();\\n// 存储已经阅读过的卡片\\nlet readCards = [];\\n\\nconst throttle = (fn, delay = 500) => {\\n  let timer = null;\\n  return function (...arg) {\\n    const self = this;\\n    if (!timer) {\\n      // TIP: 箭头函数虽然会修复this指向问题， 但是同时有导致了 vue 的this 失效， 所以这里必须要哦使用 显示this 绑定\\n      fn.apply(self, arg);\\n      timer = setTimeout(() => {\\n        timer = null; // 清除定时器\\n      }, delay);\\n    } else {\\n    }\\n  };\\n};\\n\\nconst getTemplate = (file) => {\\n  let template = $tw.wiki.getTiddlerText(file).trim();\\n\\n  if (template.startsWith('<template>') && template.endsWith('</template>')) {\\n    template = template.slice(10, -11);\\n  }\\n\\n  return template;\\n};\\n\\nconst app = (\\n  filter = '[!is[system]!is[binary]!days[-31]!tag[todo]!tag[done]!prefix[$:/]!<currentTiddler>]',\\n  text,\\n  tag,\\n) => {\\n  const tiddlers = $tw.wiki.filterTiddlers(\\n    tag ? `${filter} :and[tag[${tag}]]` : filter,\\n  );\\n  const component = {\\n    setup() {\\n      const cardContent = ref('');\\n      const title = ref('');\\n\\n      const chartapp = ref();\\n      const chartdata = ref([]);\\n\\n      const options = reactive({\\n        // TODO: not work\\n        // aria: {\\n        //   enabled: true,\\n        //   decal: {\\n        //     show: true\\n        //   }\\n        // },\\n        tooltip: {\\n          trigger: 'item',\\n          formatter: function (params) {\\n            const { name, value, percent } = params;\\n            if (value) {\\n              return `${name}`;\\n            } else {\\n              return `${name}`;\\n            }\\n          },\\n        },\\n\\n        toolbox: {\\n          show: false,\\n          left: 0,\\n          bottom: 0,\\n          feature: {\\n            dataView: { show: true, readOnly: false },\\n            restore: {},\\n            saveAsImage: {},\\n          },\\n        },\\n        series: [\\n          {\\n            name: 'Tag',\\n            type: 'pie',\\n            radius: '50%',\\n            center: '50%',\\n            data: chartdata.value,\\n          },\\n        ],\\n      });\\n\\n      const isRotate = ref(false);\\n\\n      return {\\n        isRotate,\\n        options,\\n        chartdata,\\n        chartapp,\\n        title,\\n        cardContent,\\n        text,\\n      };\\n    },\\n\\n    mounted() {\\n      // 挂在echarts实例\\n      this.chartapp = echarts.init(this.$refs.chart, theme, {\\n        renderer: 'svg',\\n      });\\n      this.updateChart();\\n      this.chartapp.on('click', (params) => {\\n        story.navigateTiddler(params.name);\\n      });\\n    },\\n\\n    watch: {\\n      chartdata: {\\n        handler() {\\n          this.updateChart();\\n        },\\n        deep: true,\\n      },\\n    },\\n\\n    methods: {\\n      randomTiddlerTitle() {\\n        if (tiddlers.length == 0) {\\n          console.info('没有可用的卡片');\\n          alert('已全部阅读');\\n          return null;\\n        }\\n        const index = Math.floor(Math.random() * tiddlers.length);\\n        const title = tiddlers.splice(index, 1)[0]; // 直接删除并获取 title\\n        if (!$tw.wiki.tiddlerExists(title)) {\\n          return this.randomTiddlerTitle();\\n        } else {\\n          return title;\\n        }\\n      },\\n      // if (readCards.includes(tiddlers[index])) {\\n      //   console.log('已经阅读过, 自动跳过该条目', tiddlers[index]);\\n      //   tiddlers.splice(index, 1); // 移除\\n      //   return this.randomTiddlerTitle();\\n      // } else {\\n      //   readCards.push(tiddlers[index]);\\n      //   return tiddlers[index];\\n      // }\\n\\n      updateChart() {\\n        if (this.chartdata.length > 8) {\\n          this.resetChart();\\n          this.chartdata.push({\\n            name: this.title,\\n            value: 1,\\n          });\\n        }\\n        this.chartapp.setOption(this.options);\\n\\n        // this.chartapp.showLoading();\\n        // setTimeout(() => {\\n        //   this.chartapp.setOption(this.options);\\n        //   this.chartapp.hideLoading();\\n        // }, 200);\\n      },\\n\\n      resetChart() {\\n        // TODO: 如果直接清空， 无效 对于setoptions???\\n        this.chartdata.splice(0, this.chartdata.length);\\n        // this.cardContent = '空空如也';\\n        // this.title = '';\\n      },\\n\\n      renderTiddler2HTML(title) {\\n        try {\\n          // 性能问题\\n          // const text =\\n          //   `{{{ [[${this.title}]]` + '||$:/core/ui/ViewTemplate }}}';\\n          // console.log(text);\\n          // this.cardContent = text;\\n          // const stateTiddler = \\\"$:/state\\\"\\n          // $tw.wiki.setText(this.title, text);\\n          this.cardContent =\\n            $tw.wiki.renderTiddler('text/html', title) || '空空如也';\\n        } catch (e) {\\n          console.error(e.message, title);\\n        }\\n      },\\n\\n      updateCard: throttle(function () {\\n        this.title = this.randomTiddlerTitle();\\n        if (!this.title) {\\n          return;\\n        }\\n        this.isRotate = !this.isRotate;\\n        this.chartdata.push({\\n          name: this.title,\\n          value: 1,\\n        });\\n\\n        this.renderTiddler2HTML(this.title);\\n      }),\\n\\n      gotoTiddler() {\\n        story.navigateTiddler(this.title);\\n      },\\n    },\\n\\n    template: getTemplate('$:/plugins/oeyoews/vue-random-cards/widget.vue'),\\n  };\\n\\n  return component;\\n};\\n\\nmodule.exports = app;\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/vue-random-cards/style.css\":{\"title\":\"$:/plugins/oeyoews/vue-random-cards/style.css\",\"tags\":\"$:/tags/Stylesheet\",\"hide-body\":\"yes\"},\"$:/plugins/oeyoews/vue-random-cards/widget.js\":{\"title\":\"$:/plugins/oeyoews/vue-random-cards/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/vue-random-cards/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nvue-random-cards widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass ExampleWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const ssr = this.document.isTiddlyWikiFakeDom;\\n    if (ssr) return;\\n\\n    const vuelib = '$:/plugins/oeyoews/neotw-vue3/vue.global.prod.js';\\n    const { filter, text = '随机卡片', tag } = this.attributes;\\n\\n    if (!window.Vue) {\\n      window.Vue = require(vuelib);\\n    }\\n\\n    const { createApp } = window.Vue;\\n    const component = require('./component');\\n    const domNode = this.document.createElement('div');\\n\\n    try {\\n      const app = createApp(component(filter, text, tag));\\n\\n      app.config.errorHandler = (err) => {\\n        const text = `[Vue3](${app.version}): ` + err;\\n        console.error(text);\\n        domNode.textContent = text;\\n        domNode.style.color = 'red';\\n      };\\n\\n      // 挂载\\n      app.mount(domNode);\\n\\n      parent.insertBefore(domNode, nextSibling);\\n      this.domNodes.push(domNode);\\n    } catch (e) {\\n      console.error(e.message);\\n    }\\n  }\\n}\\n\\n/** @description vue-random-cards widget */\\nexports['vue-random-cards'] = ExampleWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/oeyoews/vue-random-cards/widget.vue\":{\"title\":\"$:/plugins/oeyoews/vue-random-cards/widget.vue\",\"text\":\"<template>\\n  <div class=\\\"flex items-center justify-end gap-2\\\">\\n    <button @click=\\\"gotoTiddler\\\" v-if=\\\"title\\\" class=\\\"p-2\\\">卡片跳转</button>\\n    <!-- <button @click=\\\"resetChart\\\" v-show=\\\"chartdata.length > 0\\\" class=\\\"p-2\\\">\\n      重置\\n    </button> -->\\n    <button @click=\\\"updateCard\\\" class=\\\"p-2 group flex items-center gap-2\\\">\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"1em\\\" height=\\\"1em\\\" viewBox=\\\"0 0 512 512\\\"\\n        class=\\\"transition-all duration-1000\\\" :class=\\\"{ 'rotate-[360deg]': isRotate }\\\">\\n        <path fill=\\\"currentColor\\\"\\n          d=\\\"M255.703 44.764c-6.176 0-12.353 1.384-17.137 4.152l-152.752 88.36c-9.57 5.535-9.57 14.29 0 19.826l152.752 88.359c9.57 5.536 24.703 5.536 34.272 0l152.754-88.36c9.57-5.534 9.57-14.289 0-19.824L272.838 48.916c-4.785-2.77-10.96-4.152-17.135-4.152m-16.066 47.728c10.426.07 20.268 2.997 29.523 8.781c7.217 4.51 11.503 9.194 12.86 14.05c1.3 4.82-.311 9.735-4.838 14.745c9.307-2.952 18.48-3.867 27.521-2.746c9.034 1.059 17.655 4.151 25.863 9.282c12.23 7.643 17.511 15.88 15.842 24.71c-1.724 8.796-10.313 17.83-25.767 27.102c-5.452 3.271-11.452 6.23-17.998 8.875c-6.444 2.651-13.363 4.946-20.758 6.887l-24.541-15.338c8.095-1.213 15.424-2.846 21.992-4.897c6.56-2.114 12.283-4.634 17.166-7.564c7.253-4.352 11.34-8.594 12.26-12.723c.967-4.157-1.277-7.939-6.73-11.347c-5.62-3.512-11.851-4.97-18.698-4.371c-6.855.536-14.146 3.123-21.873 7.76l-10.951 6.57l-20.494-12.809l11.52-6.912c6.873-4.125 10.755-7.97 11.642-11.54c.832-3.603-1.314-7.006-6.438-10.208c-4.737-2.961-10.036-4.268-15.896-3.924c-5.86.344-11.779 2.309-17.752 5.893c-4.41 2.645-8.286 5.68-11.633 9.105c-3.347 3.425-6.119 7.18-8.316 11.266l-23.303-14.565a99.387 99.387 0 0 1 12.105-12.12a109.57 109.57 0 0 1 14.323-10.214c13.795-8.277 26.75-12.81 38.865-13.601a58.478 58.478 0 0 1 4.504-.147m196.23 81.322c-1.938.074-4.218.858-6.955 2.413l-146.935 84.847c-9.57 5.527-17.14 18.638-17.14 29.69v157.699c0 11.05 7.57 15.419 17.14 9.89l146.937-84.843c9.57-5.527 17.137-18.636 17.137-29.688v-157.7c-2.497-8.048-5.23-12.495-10.184-12.308m-359.763.48c-6.227 0-10.033 5.325-10.155 11.825v157.697c0 11.052 7.57 24.163 17.14 29.69l146.93 84.848c9.57 5.526 17.141 1.156 17.141-9.895v-157.7c0-11.051-7.57-24.159-17.14-29.687L83.09 176.225c-2.567-1.338-4.911-1.93-6.986-1.93zm36.19 57.757a112.394 112.394 0 0 1 18.95 5.553c6.243 2.373 12.363 5.36 18.36 8.958c13.173 7.905 23.398 17.558 30.673 28.961c7.324 11.433 10.985 23.444 10.985 36.03c0 7.277-1.548 13.148-4.645 17.613c-3.097 4.405-9.61 8.908-19.539 13.508l-23.521 10.94L192 382.68V408l-80-48v-25.32l40.184-18.928c3.588-1.784 6.244-4.038 7.964-6.764c1.72-2.725 2.58-6.115 2.58-10.172c0-6.263-1.746-12.35-5.236-18.261c-3.44-5.882-8.036-10.55-13.787-14c-4.424-2.655-9.266-4.397-14.525-5.227c-5.26-.889-10.888-.865-16.885.07v-29.347zm261.876 7.447v111.77L400 335.77V360l-79.316 47.59v-24.23l25.832-15.499v-87.904L320 302.424v-23.865l26.363-22.377z\\\" />\\n      </svg>\\n      {{ text }}\\n    </button>\\n  </div>\\n\\n  <div class=\\\"hidden md:block\\\">\\n    <Transition>\\n      <div ref=\\\"chart\\\" style=\\\"width: 900px; height: 100px\\\" class=\\\"overflow-auto\\\" v-show=\\\"title\\\"></div>\\n    </Transition>\\n  </div>\\n\\n  <Transition>\\n    <div class=\\\"p-4 rounded-sm border border-solid dark:border-gray-400 my-2 border-gray-200\\\" v-if=\\\"title\\\" :key=\\\"title\\\">\\n      <h2>\\n        {{ title }}\\n      </h2>\\n      <p v-html=\\\"cardContent\\\" />\\n    </div>\\n  </Transition>\\n</template>\\n\",\"type\":\".vue\"}}}"}