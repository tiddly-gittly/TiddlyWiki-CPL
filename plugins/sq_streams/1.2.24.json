{"title":"$:/plugins/sq/streams","name":"Streams","description":"Rapid data entry with a keyboard driven workflow. Divide content into smaller tiddlers as you write.","plugin-type":"plugin","plugin-priority":"1","author":"Saq Imtiaz","version":"1.2.24","core-version":">=5.1.23","list":"Settings CHANGELOG","source":"https://saqimtiaz.github.io/streams/","dependents":"$:/plugins/flibbles/relink","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/sq/streams/CHANGELOG\":{\"title\":\"$:/plugins/sq/streams/CHANGELOG\",\"text\":\"Release notes for the current release:\\n\\n{{$:/plugins/sq/streams/releasenotes}}\\n\\n[[Full changelog|https://saqimtiaz.github.io/streams/#CHANGELOG]] for Streams\\n\"},\"$:/plugins/sq/streams/Settings/config\":{\"title\":\"$:/plugins/sq/streams/Settings/config\",\"caption\":\"Configuration\",\"text\":\"\\\\define sortBySettingsGroupFilter()\\n[get[settings-group]!is[blank]else[!general]] [get[settings-group-header]!is[blank]else[99]] +[join[]]\\n\\\\end\\n\\n<$edit-text tiddler=\\\"$:/state/sq/streams/settings/search\\\" class=\\\"sq-search-input\\\" default=\\\"\\\" tag=\\\"input\\\" type=\\\"search\\\" placeholder=\\\"search...\\\"/>\\n\\n<div class=\\\"sq-list-group sq-list-group-box-shadow sq-list-stream-settings\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]prefix[$:/config/sq/streams]has[settings-template]]  +[search:title,caption,description{$:/state/sq/streams/settings/search}] +[sortsub<sortBySettingsGroupFilter>]\\\">\\n<$list filter={{{[{!!condition}!is[blank]] :else[{!!title}]}}} variable=\\\"list-condition\\\">\\n<div class=\\\"sq-list-group-item\\\">\\n<$transclude tiddler={{!!settings-template}}/>\\n</div>\\n</$list>\\n</$list>\\n</div>\"},\"$:/plugins/sq/streams/Settings/shortcuts\":{\"title\":\"$:/plugins/sq/streams/Settings/shortcuts\",\"caption\":\"Shortcuts\",\"text\":\"\\\\import $:/core/ui/ControlPanel/KeyboardShortcuts\\n\\n<table>\\n<tbody>\\n<$list filter=\\\"[all[shadows+tiddlers]prefix[$:/config/ShortcutInfo/streams-]removeprefix[$:/config/ShortcutInfo/]]\\\" variable=\\\"shortcutName\\\">\\n<<shortcut-item>>\\n</$list>\\n</tbody>\\n</table>\"},\"$:/plugins/sq/streams/Settings\":{\"title\":\"$:/plugins/sq/streams/Settings\",\"tags\":\"$:/tags/ControlPanel\",\"caption\":\"Streams settings\",\"text\":\"<<tabs \\\"$:/plugins/sq/streams/Settings/config $:/plugins/sq/streams/Settings/shortcuts\\\" \\\"$:/plugins/sq/streams/Settings/config\\\" \\\"$:/state/streams/settings/tabs\\\">>\\n\"},\"$:/plugins/sq/streams/action-macros\":{\"title\":\"$:/plugins/sq/streams/action-macros\",\"text\":\"\\\\whitespace trim\\n\\n\\\\define swiped-right-actions()\\n<$list filter=\\\"[{$:/config/sq/streams/swipe-behaviour}match[contextmenu]]\\\" variable=\\\"_NULL\\\">\\n<$action-setfield $tiddler=<<contextmenu-state>> $field=\\\"current\\\" $value=<<dom-data-node-title>>/>\\n<$action-setfield $tiddler=<<contextmenu-state>> $field=\\\"position\\\" $value={{$:/config/sq/streams/swipe-contextmenu-position}}/>\\n<$action-popup $coords=<<tv-popup-coords>> $state=<<contextmenu-state>>/>\\n</$list>\\n<$list filter=\\\"[{$:/config/sq/streams/swipe-behaviour}match[indent]]\\\" variable=\\\"_NULL\\\">\\n<$vars currentTiddler=<<dom-data-node-title>>>\\n<<indent-node-actions>>\\n</$vars>\\n</$list>\\n\\\\end\\n\\n\\\\define swiped-left-actions()\\n<$list filter=\\\"[{$:/config/sq/streams/swipe-behaviour}match[indent]]\\\" variable=\\\"_NULL\\\">\\n<$vars currentTiddler=<<dom-data-node-title>>>\\n<<unindent-node-actions>>\\n</$vars>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define oncontext-menu-actions()\\n<$action-setfield $tiddler=<<contextmenu-state>> $field=\\\"current\\\" $value=<<dom-data-node-title>>/>\\n<$action-setfield $tiddler=<<contextmenu-state>> $field=\\\"position\\\" $value=\\\"left\\\"/>\\n<$action-popup $coords=<<tv-popup-coords>> $state=<<contextmenu-state>>/>\\n\\\\end\\n\\n\\n\\\\define node-ctrl-btn-actions()\\n<$list filter=\\\"[<dom-data-btn-role>match[stream-node-visibility]]\\\" variable=\\\"NULL\\\">\\n<$action-setfield $tiddler=<<dom-data-rowchildren-visibility-state>> text={{{ [<dom-data-rowchildren-visibility-state>get[text]match[hide]then[show]else[hide]] }}} />\\n</$list>\\n<$list filter=\\\"[<dom-data-btn-role>match[stream-node-decorator]]\\\" variable=\\\"NULL\\\">\\n<$action-navigate $to=<<dom-data-node-title>>/>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define toggle-row-edit-state()\\n<$action-unselect/>\\n<$list filter=\\\"[<row-edit-state>get[text]else[]!match<dom-data-node-title>]\\\" variable=\\\"NULL\\\">\\n<$list filter=\\\"[[$:/status/IsReadOnly]get[text]!is[blank]else[no]!match[yes]]\\\" variable=\\\"NULL\\\">\\n\\t<$action-setfield $tiddler=<<row-edit-state>> text=<<dom-data-node-title>> />\\n<!--\\t<$action-setfield $tiddler=<<dom-data-node-title>> throttle.refresh=\\\"yes\\\"/>-->\\n</$list>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define save-edit-node-actions()\\n<!-- handle saving a node being edited -->\\n<!-- XXX draft -->\\n<!--<$action-deletefield $tiddler={{{ [<dom-data-node-title>!is[blank]else<currentTiddler>] }}} $field=\\\"throttle.refresh\\\" />-->\\n<$action-deletetiddler $tiddler=<<row-edit-state>> />\\n\\\\end\\n\\n\\n\\\\define indent-node-actions()\\n<!-- handle indenting a node -->\\n<$vars previous-node={{{ [{!!parent}get[stream-list]enlist-input[]is[tiddler]before<currentTiddler>] }}}>\\n<$list filter=\\\"[<previous-node>minlength[1]]\\\" variable=\\\"_NULL\\\">\\n\\t<$action-listops $tiddler=<<previous-node>> $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] [<currentTiddler>]\\\"/>\\n\\t<$action-listops $tiddler={{!!parent}} $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] -[<currentTiddler>]\\\"/>\\n\\t<$action-setfield $tiddler=<<currentTiddler>> parent=<<previous-node>> />\\n</$list>\\n</$vars>\\n\\\\end\\n\\n\\n\\\\define unindent-node-actions()\\n<!-- handle unindenting a node -->\\n<$vars new-parent={{{ [{!!parent}get[parent]] }}} new-next-node={{{ [{!!parent}get[parent]get[stream-list]enlist-input[]is[tiddler]after{!!parent}] }}}>\\n    <$list filter=\\\"[<new-parent>minlength[1]]\\\" variable=\\\"_NULL\\\">\\n        <$action-listops $tiddler=<<new-parent>> $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] +[insertbefore:new-next-node<currentTiddler>]\\\"/>\\n        <$action-listops $tiddler={{!!parent}} $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] -[<currentTiddler>]\\\"/>\\n        <$action-setfield $tiddler=<<currentTiddler>> parent=<<new-parent>> />\\n    </$list>\\n</$vars>\\n\\\\end\\n\\n\\n\\\\define demote-node-actions()\\n<!-- move a node below the next node -->\\n<$list filter=\\\"[{!!parent}get[stream-list]enlist-input[]after<currentTiddler>]\\\" variable=\\\"next-node\\\">\\n    <$action-listops $tiddler={{!!parent}} $field=\\\"stream-list\\\" $subfilter=\\\"+[insertbefore:currentTiddler<next-node>]\\\"/>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define promote-node-actions()\\n<!-- move a node above the previous node -->\\n<$list filter=\\\"[{!!parent}get[stream-list]enlist-input[]before<currentTiddler>]\\\" variable=\\\"previous-node\\\">\\n    <$action-listops $tiddler={{!!parent}} $field=\\\"stream-list\\\" $subfilter=\\\"+[insertbefore:previous-node<currentTiddler>]\\\"/>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define save-node-actions()\\n<$list filter=\\\"\\\"\\\"[{$:/config/sq/streams/split-at-caret}match[yes]]\\\"\\\"\\\" variable=\\\"_NULL\\\" emptyMessage=<<add-node-actions>> >\\n<$list filter=\\\"[<selectionEnd>!is[blank]else[0]!match[0]]\\\" variable=\\\"_NULL\\\">\\n<$list filter=\\\"[<currentTiddler>get[text]length[]subtract<selectionEnd>!match[0]]\\\" variable=\\\"_NULL\\\" emptyMessage=<<add-node-actions>>>\\n\\t<$macrocall $name=\\\"add-node-actions\\\" startText={{{[<currentTiddler>get[text]split[]rest<selectionEnd>join[]trim[]]}}} streamList={{!!stream-list}} /><!--insertPosition=\\\"title\\\"-->\\n\\t<$action-setfield $tiddler=\\\"$:/state/sq/streams/caret-position\\\" text=\\\"0\\\"/>\\n\\t<$action-setfield $tiddler=<<currentTiddler>> text={{{[<currentTiddler>get[text]split[]first<selectionEnd>join[]]}}} stream-list=\\\"\\\"/>\\n</$list>\\n</$list>\\n<$list filter=\\\"[<selectionEnd>!is[blank]else[0]match[0]]\\\" variable=\\\"_NULL\\\">\\n\\t<$list filter=\\\"[<currentTiddler>!has[text]]\\\" variable=\\\"_NULL\\\" emptyMessage=<<add-node-actions \\\"\\\" \\\"title\\\">> >\\n\\t\\t<$list filter=\\\"\\\"\\\"[{$:/config/sq/streams/exit-on-saving-empty-node}match[yes]]\\\"\\\"\\\" variable=\\\"_NULL\\\" emptyMessage=<<add-node-actions>> >\\n\\t\\t\\t<<cancel-edit-node-actions>>\\n\\t\\t</$list>\\n\\t</$list>\\n</$list>\\n</$list>\\n\\\\end\\n\\n\\\\define add-new-node-actions()\\n<!-- used by new node button at the bottom of a stream -->\\n<$list filter=\\\"[[$:/status/IsReadOnly]get[text]!is[blank]else[no]!match[yes]]\\\" variable=\\\"NULL\\\">\\n<<add-node-actions>>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define add-node-actions(startText:\\\"\\\",insertPosition:\\\"after\\\",streamList:\\\"\\\")\\n<!-- handle saving a node edit and creating a new subsequent node -->\\n<$set name=\\\"parent\\\" filter=\\\"[<currentTiddler>match<stream-root-title>] ~[{!!parent}] +[first[]]\\\" select=\\\"0\\\">\\n<$wikify name=\\\"new-node\\\" text={{$:/config/sq/streams/new-node-title}}>\\n<$wikify name=\\\"new-node\\\" text={{{[[<<unusedtitle \\\"\\\"\\\"]addsuffix<new-node>addsuffix[\\\"\\\"\\\">>]]}}}>\\n\\t<$action-createtiddler $basetitle=<<new-node>> text=<<__startText__>> $template={{$:/config/sq/streams/new-node-tiddler-template}} parent=<<parent>> stream-type=\\\"default\\\" stream-list=<<__streamList__>>/>\\n\\t<$set name=\\\"parent-nodes\\\" filter=\\\"[<parent>get[stream-list]]\\\" select=\\\"0\\\">\\n\\t<$set name=\\\"next-node\\\" filter=\\\"[enlist<parent-nodes>is[tiddler]$insertPosition$<currentTiddler>]\\\" select=\\\"0\\\">\\n\\t<$action-listops $tiddler=<<parent>> $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] +[insertbefore:next-node<new-node>]\\\"/>\\n\\t<$list filter=\\\"[<parent>!has[stream-type]]\\\" variable=\\\"_NULL\\\">\\n\\t\\t<$action-setfield $tiddler=<<parent>> stream-type=\\\"default\\\"/>\\n\\t</$list>\\n\\t<$list filter=\\\"[enlist<__streamList__>]\\\">\\n\\t\\t<$action-setfield $tiddler=<<currentTiddler>> parent=<<new-node>>/>\\n\\t</$list>\\n\\t</$set>\\n\\t</$set>\\n\\t<$action-setfield $tiddler=<<row-edit-state>> text=<<new-node>>/>\\n</$wikify>\\n</$wikify>\\n</$set>\\n\\\\end\\n\\n\\n\\\\define save-multiple-actions()\\n<!-- handle multiple nodes entered at once -->\\n<$action-confirm $message=\\\"Split into multiple nodes?\\\" $prompt={{$:/config/sq/streams/prompt-split-to-multiple}}>\\n<$list filter=\\\"[{!!text}splitregexp{$:/config/sq/streams/node-split-regexp}rest[]reverse[]]\\\" variable=\\\"fragment\\\">\\n\\t<$action-confirm $message=\\\"Split into multiple nodes?\\\" $prompt=\\\"no\\\">\\n\\t\\t<$macrocall $name=\\\"add-node-actions\\\" startText=<<fragment>> />\\n\\t</$action-confirm>\\n</$list>\\n<$action-setfield $tiddler=<<currentTiddler>> text={{{[{!!text}splitregexp{$:/config/sq/streams/node-split-regexp}first[]]}}}/>\\n<<add-node-actions>>\\n</$action-confirm>\\n\\\\end\\n\\n\\n\\\\define cancel-edit-node-actions()\\n<!-- handle cancelling the edit on an empty node -->\\n<$list filter=\\\"[<currentTiddler>!has[stream-list]!has[text]]\\\" variable=\\\"_NULL\\\">\\n\\t<$action-listops $tiddler={{{[{!!parent}]}}} $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] -[<currentTiddler>]\\\"/>\\n\\t<$action-deletetiddler $tiddler=<<currentTiddler>> />\\n</$list>\\n<!--<$action-deletefield $tiddler=<<currentTiddler>> $field=\\\"throttle.refresh\\\" />-->\\n<$action-deletetiddler $tiddler=<<row-edit-state>> />\\n\\\\end\\n\\n\\n\\\\define merge-with-previous-node-actions()\\n<!-- handle backspace on an empty node -->\\n<$list filter=\\\"\\\"\\\"[<currentTiddler>!has[text]]\\\"\\\"\\\" variable=\\\"_NULL\\\">\\n\\t<<cancel-edit-node-actions>>\\n\\t<<focus-higher-node-actions>>\\n</$list>\\n\\n<$list filter=\\\"\\\"\\\"[<currentTiddler>has[text]]\\\"\\\"\\\" variable=\\\"_NULL\\\">\\n<$list filter=\\\"[<selectionEnd>match[0]]\\\" variable=\\\"_NULL\\\">\\n\\n<!--<$action-log/>-->\\n\\t<$set name=\\\"parent\\\" value={{!!parent}} select=\\\"0\\\">\\n\\t<$set name=\\\"stream-list\\\" filter=\\\"[<parent>get[stream-list]]\\\" select=\\\"0\\\">\\n\\t<$list filter=\\\"[enlist<stream-list>before<currentTiddler>]\\\" variable=\\\"previous-node\\\">\\n\\t\\t<$list filter=\\\"[<previous-node>!has[stream-list]]\\\" variable=\\\"_NULL\\\">\\n\\t\\t<$action-confirm $message=\\\"Merge with previous node?\\\" $prompt={{$:/config/sq/streams/prompt-merge-with-previous}}>\\n\\t\\t\\t<$action-setfield $tiddler=\\\"$:/state/sq/streams/caret-position\\\" text={{{[<previous-node>get[text]length[]]}}}/>\\n\\t\\t\\t<$action-setfield $tiddler=<<previous-node>> text={{{[<previous-node>get[text]!is[blank]else[]addsuffix{!!text}]}}} stream-list={{!!stream-list}}/>\\n\\t\\t\\t<$action-setfield $tiddler=<<row-edit-state>> text=<<previous-node>>/>\\n\\t\\t\\t<$action-listops $tiddler={{!!parent}} $field=\\\"stream-list\\\" $subfilter=\\\"+[is[tiddler]] -[<currentTiddler>]\\\"/>\\t\\t\\t\\n\\t\\t\\t<$action-deletetiddler $tiddler=<<currentTiddler>>/>\\n\\t\\t</$action-confirm>\\t\\n\\t\\t</$list>\\n\\t</$list>\\n\\t</$set>\\n\\t</$set>\\n\\t\\n</$list>\\n</$list>\\n\\n\\\\end\\n\\n\\n\\\\define delete-node-actions()\\n<$action-confirm  $message=\\\"Do you wish to delete this tiddler?\\\">\\n\\t<$transclude tiddler=\\\"$:/plugins/sq/streams/delete-hook/actions\\\"/>\\n\\t<$action-deletetiddler $tiddler=<<currentTiddler>> />\\n\\t<$list filter=\\\"[<row-edit-state>get[text]match<currentTiddler>]\\\">\\n\\t\\t<<focus-higher-node-actions>>\\n\\t</$list>\\n</$action-confirm>\\n\\\\end\\n\\n\\n\\\\define rename-node-actions()\\n<$action-withinput message=\\\"Rename this tiddler?\\\" default=<<currentTiddler>> actions=\\\"\\\"\\\"\\n\\t<$action-sendmessage $message=\\\"tm-rename-tiddler\\\" from=<<currentTiddler>> to=<<userInput>>/>\\n\\t<$list filter=\\\"[<row-edit-state>match<currentTiddler>]\\\" variable=\\\"_NULL\\\">\\n\\t\\t<$action-setfield $tiddler=<<row-edit-state>> text=<<userInput>>/>\\n\\t</$list>\\n\\\"\\\"\\\"/>\\n\\\\end\\n\\n\\n\\\\define find-last-child()\\n<!-- used by focus-higher-node-actions macro -->\\n<$list filter=\\\"[enlist{!!stream-list}is[tiddler]last[]]\\\" emptyMessage=\\\"\\\"\\\"<$action-setfield $tiddler=<<row-edit-state>> text=<<currentTiddler>>/>\\\"\\\"\\\">\\n\\t<$macrocall $name=\\\"find-last-child\\\"/>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define focus-higher-node-actions()\\n<!-- handles moving up in the nodes with the keyboard -->\\n<$vars old-parent={{!!parent}} >\\n<$list filter=\\\"[{!!parent}get[stream-list]enlist-input[]is[tiddler]before<currentTiddler>]\\\" emptyMessage=\\\"\\\"\\\"<$list filter=\\\"[<old-parent>!match<stream-root-title>]\\\"><$action-setfield $tiddler=<<row-edit-state>> text=<<old-parent>> /></$list>\\\"\\\"\\\">\\n\\t<$macrocall $name=\\\"find-last-child\\\"/>\\n</$list>\\n</$vars>\\n\\\\end\\n\\n\\n\\\\define find-next-downwards-node()\\n<!-- used by focus-lower-node-actions macro -->\\n<$list filter=\\\"[<currentTiddler>has[parent]]\\\" variable=\\\"_NULL\\\">\\n<$set name=\\\"old-parent\\\" value={{!!parent}} select=\\\"0\\\">\\n<$set name=\\\"old-parent-nodes\\\" filter=\\\"[<old-parent>get[stream-list]]\\\" select=\\\"0\\\">\\n<$list filter=\\\"[enlist<old-parent-nodes>is[tiddler]after<currentTiddler>]\\\" emptyMessage=\\\"\\\"\\\"<$set name=\\\"currentTiddler\\\" value=<<old-parent>>><<find-next-downwards-node>></$set>\\\"\\\"\\\">\\n\\t<$action-setfield $tiddler=<<row-edit-state>> text=<<currentTiddler>>/>\\t\\n</$list>\\n</$set>\\n</$set>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define focus-lower-node-actions()\\n<!-- handles moving down in the nodes with the keyboard -->\\n<!--if children, get the first child-->\\n<$list filter=\\\"[<currentTiddler>get[stream-list]enlist-input[]is[tiddler]first[]]\\\" variable=\\\"next-node\\\">\\n    <$action-setfield $tiddler=<<row-edit-state>> text=<<next-node>> />\\n</$list>\\n<!-- if no children-->\\n<!--- get closest ancestor with next sibling -->\\n<$list filter=\\\"[<currentTiddler>!has[stream-list]]\\\" variable=\\\"_NULL\\\">\\n\\t<$set name=\\\"old-active-node\\\" value=<<currentTiddler>> >\\n\\t\\t<<find-next-downwards-node>>\\n\\t</$set>\\n</$list>\\n\\\\end\\n\\n\\n\\\\define node-drag-start-actions()\\n<!-- parameter to draggable widget -->\\n<$action-setfield $tiddler=<<drag-title-state>> text=<<currentTiddler>>/>\\n<$action-setfield $tiddler=\\\"$:/state/sq/nodes/global-drag-state\\\" text=\\\"yes\\\"/>\\n<$set name=\\\"siblings\\\" filter=\\\"[{!!parent}get[stream-list]]\\\" select=\\\"0\\\">\\n<$list filter=\\\"[enlist<siblings>after<currentTiddler>]\\\" variable=\\\"next-node\\\">\\n\\t<$action-setfield $tiddler=<<drag-title-nextsibling-state>> text=<<next-node>> />\\n</$set>\\n\\\\end\\n\\n\\n\\\\define node-drag-end-actions()\\n<!-- parameter to draggable widget -->\\n<$action-deletetiddler $filter=\\\"\\\"\\\"[<drag-title-state>][<drag-title-nextsibling-state>][[$:/state/sq/nodes/global-drag-state]]\\\"\\\"\\\" />\\n\\\\end\\n\\n\\n\\\\define stream-drop-actions()\\n<!-- handles drag and drop -->\\n<$vars startBrackets=\\\"[[\\\" endBrackets=\\\"]]\\\" parent=<<dropTargetTiddler>> >\\n<$vars actionTiddler={{{[<actionTiddler>trim:suffix<endBrackets>trim:prefix<startBrackets>]}}}>\\n<!-- if target has no stream-type, assign one -->\\n<$list filter=\\\"[<dropTargetTiddler>!has[stream-type]]\\\">\\n\\t<$action-setfield $tiddler=<<dropTargetTiddler>> stream-type=\\\"default\\\"/>\\n</$list>\\n<!-- if action tiddler has no stream-type, assign one -->\\n<$list filter=\\\"[<actionTiddler>!has[stream-type]]\\\" variable=\\\"_NULL\\\">\\n\\t<$action-setfield $tiddler=<<actionTiddler>> stream-type=\\\"default\\\" />\\n</$list>\\n<!-- if we are dropping onto a new parent, then we might need to handle modifier keys -->\\n<$list filter=\\\"[<actionTiddler>get[parent]!match<parent>] [<actionTiddler>!has[parent]]\\\" variable=\\\"_NULL\\\">\\n\\t<$wikify name=\\\"new-node\\\" text={{$:/config/sq/streams/new-node-title}}>\\n\\t\\t<!-- ctrl modifier key on drop event -->\\n\\t\\t<!-- create a new node with text of dropped node -->\\n\\t\\t<$list filter=\\\"[<modifier>match{$:/config/sq/streams/dnd-modifier-copy-node}]\\\" variable=\\\"_NULL\\\">\\n\\t\\t\\t<$action-createtiddler $basetitle=<<new-node>> text={{{ [<actionTiddler>get[text]] }}} parent=<<parent>> stream-type=\\\"default\\\"/>\\n\\t\\t\\t<!-- insert into correct position on new parent -->\\n\\t\\t\\t<$action-listops $tiddler=<<dropTargetTiddler>> $field=\\\"stream-list\\\" $subfilter=\\\"+[insertbefore:currentTiddler<new-node>]\\\"/>\\n\\t\\t</$list>\\n\\t\\t<!-- shift modifier key on drop event -->\\n\\t\\t<$list filter=\\\"[<modifier>match{$:/config/sq/streams/dnd-modifier-transclude-node}]\\\" variable=\\\"_NULL\\\">\\n\\t\\t\\t<!-- create new node on target, in correct position, text is a transclusion-->\\n\\t\\t\\t<$action-createtiddler $basetitle=<<new-node>> text={{{ [<actionTiddler>addprefix[{{]addsuffix[}}]] }}} parent=<<parent>> stream-type=\\\"default\\\"/>\\n\\t\\t\\t<!-- insert into correct position on new parent -->\\n\\t\\t\\t<$action-listops $tiddler=<<dropTargetTiddler>> $field=\\\"stream-list\\\" $subfilter=\\\"+[insertbefore:currentTiddler<new-node>]\\\"/>\\n\\t\\t</$list>\\n\\t</$wikify>\\n\\t<!-- no modifier key on drop event -->\\n\\t<!-- insert in correct position on new parent, and remove from old parent -->\\n\\t<!-- assign new parent -->\\n\\t<$list filter=\\\"[<modifier>match[normal]]\\\" variable=\\\"_NULL\\\">\\n\\t\\t<$action-listops $tiddler=<<dropTargetTiddler>> $field=\\\"stream-list\\\" $subfilter=\\\"+[insertbefore:currentTiddler<actionTiddler>]\\\"/>\\n\\t\\t<$set name=\\\"original-parent\\\" filter=\\\"[<actionTiddler>get[parent]]\\\" select=\\\"0\\\">\\n\\t\\t\\t<$action-listops $tiddler=<<original-parent>> $field=\\\"stream-list\\\" $subfilter=\\\"-[title<actionTiddler>]\\\"/>\\n\\t\\t</$set>\\n\\t\\t<$action-setfield $tiddler=<<actionTiddler>> parent=<<parent>>/>\\n\\t</$list>\\n</$list>\\n<!-- we are dropping on to the same parent, insert in the correct position -->\\n<$list filter=\\\"[<actionTiddler>get[parent]match<parent>]\\\" variable=\\\"_NULL\\\">\\n\\t<$action-listops $tiddler=<<dropTargetTiddler>> $field=\\\"stream-list\\\" $subfilter=\\\"+[insertbefore:currentTiddler<actionTiddler>]\\\"/>\\n</$list>\\n</$vars>\\n</$vars>\\n\\\\end\"},\"$:/plugins/sq/streams/icons/node-expand-arrow\":{\"title\":\"$:/plugins/sq/streams/icons/node-expand-arrow\",\"created\":\"20200526035137040\",\"modified\":\"20200526100520031\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M13.75 9.56879C14.0833 9.76124 14.0833 10.2424 13.75 10.4348L8.5 13.4659C8.16667 13.6584 7.75 13.4178 7.75 13.0329L7.75 6.97072C7.75 6.58582 8.16667 6.34525 8.5 6.5377L13.75 9.56879Z\\\"></path></svg>\"},\"$:/config/ShortcutInfo/streams-cancel-edit\":{\"title\":\"$:/config/ShortcutInfo/streams-cancel-edit\",\"text\":\"Cancel and exit editing\"},\"$:/config/ShortcutInfo/streams-delete\":{\"title\":\"$:/config/ShortcutInfo/streams-delete\",\"text\":\"Delete node\"},\"$:/config/ShortcutInfo/streams-demote\":{\"title\":\"$:/config/ShortcutInfo/streams-demote\",\"text\":\"Demote node\"},\"$:/config/ShortcutInfo/streams-focus-higher\":{\"title\":\"$:/config/ShortcutInfo/streams-focus-higher\",\"text\":\"Move focus to higher node\"},\"$:/config/ShortcutInfo/streams-focus-lower\":{\"title\":\"$:/config/ShortcutInfo/streams-focus-lower\",\"text\":\"Move focus to lower node\"},\"$:/config/ShortcutInfo/streams-indent\":{\"title\":\"$:/config/ShortcutInfo/streams-indent\",\"text\":\"Indent node\"},\"$:/config/ShortcutInfo/streams-merge-with-previous\":{\"title\":\"$:/config/ShortcutInfo/streams-merge-with-previous\",\"text\":\"Merge with previous node, if caret is at start of a node\"},\"$:/config/ShortcutInfo/streams-promote\":{\"title\":\"$:/config/ShortcutInfo/streams-promote\",\"text\":\"Promote node\"},\"$:/config/ShortcutInfo/streams-rename\":{\"title\":\"$:/config/ShortcutInfo/streams-rename\",\"text\":\"Rename node\"},\"$:/config/ShortcutInfo/streams-save-and-continue\":{\"title\":\"$:/config/ShortcutInfo/streams-save-and-continue\",\"text\":\"Save and create next node\"},\"$:/config/ShortcutInfo/streams-save-and-exit\":{\"title\":\"$:/config/ShortcutInfo/streams-save-and-exit\",\"text\":\"Save and exit editing\"},\"$:/config/ShortcutInfo/streams-save-multiple\":{\"title\":\"$:/config/ShortcutInfo/streams-save-multiple\",\"text\":\"Split and save as multiple nodes\"},\"$:/config/ShortcutInfo/streams-unindent\":{\"title\":\"$:/config/ShortcutInfo/streams-unindent\",\"text\":\"Unindent node\"},\"$:/config/sq/streams/dnd-modifier-copy-node\":{\"title\":\"$:/config/sq/streams/dnd-modifier-copy-node\",\"description\":\"Modifier key for drag and drop to create a copy of a node.\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/select\",\"option-names\":\"ctrl alt shift meta\",\"option-values\":\"ctrl alt shift meta\",\"caption\":\"Modifier key to copy a node when dragging.\",\"text\":\"ctrl\"},\"$:/config/sq/streams/dnd-modifier-transclude-node\":{\"title\":\"$:/config/sq/streams/dnd-modifier-transclude-node\",\"description\":\"Modifier key for drag and drop to create a transclusion of a node.\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/select\",\"option-names\":\"ctrl alt shift meta\",\"option-values\":\"ctrl alt shift meta\",\"caption\":\"Modifier key to transclude a node when dragging.\",\"text\":\"shift\"},\"$:/config/sq/streams/editor-engine\":{\"title\":\"$:/config/sq/streams/editor-engine\",\"description\":\"Editor to use for Streams\",\"caption\":\"Editor to use for Streams\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/select\",\"option-names\":\"[[Default]] [[CodeMirror]]\",\"option-values\":\"text codemirror\",\"condition\":\"[[widget]modules[]prefix[$:/plugins/tiddlywiki/codemirror/edit-codemirror.js]]\",\"text\":\"text\"},\"$:/config/sq/streams/enable-breadcrumbs\":{\"title\":\"$:/config/sq/streams/enable-breadcrumbs\",\"description\":\"Enable breadcrumbs in nodes\",\"caption\":\"Show breadcrumbs\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"yes\"},\"$:/config/sq/streams/enable-edit-toolbar\":{\"title\":\"$:/config/sq/streams/enable-edit-toolbar\",\"description\":\"Enable toolbar in editor\",\"caption\":\"Show toolbar in editor\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"no\"},\"$:/config/sq/streams/exit-on-saving-empty-node\":{\"title\":\"$:/config/sq/streams/exit-on-saving-empty-node\",\"description\":\"Enable to exit edit mode on saving an empty node\",\"caption\":\"Exit editing on saving an empty node\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"no\"},\"$:/config/sq/streams/new-node-tiddler-template\":{\"title\":\"$:/config/sq/streams/new-node-tiddler-template\",\"description\":\"T iddler to use as a template for new nodes\",\"caption\":\"Tiddler to use as new node template\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input\"},\"$:/config/sq/streams/new-node-title\":{\"title\":\"$:/config/sq/streams/new-node-title\",\"description\":\"Wikitext that is wikified to generate the title for new nodes\",\"caption\":\"Template wikified for node title\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input\",\"text\":\"<<stream-root-title>>/<<now \\\"[UTC]YYYY0MM0DD0hh0mm0ssXXX\\\">>\"},\"$:/config/sq/streams/node-max-width\":{\"title\":\"$:/config/sq/streams/node-max-width\",\"description\":\"Maximum displayed width of a Stream node\",\"caption\":\"Maximum node width\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input\",\"text\":\"550\"},\"$:/config/sq/streams/node-split-regexp\":{\"title\":\"$:/config/sq/streams/node-split-regexp\",\"description\":\"Regular expression that is used to split longform text into multiple tiddlers\",\"caption\":\"Regular expression used to split text\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input\",\"text\":\"\\\\n\\\\n\"},\"$:/config/sq/streams/prompt-merge-with-previous\":{\"title\":\"$:/config/sq/streams/prompt-merge-with-previous\",\"description\":\"Enable to be prompted before merging a node with the previous node\",\"caption\":\"Prompt before merging with previous\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"yes\"},\"$:/config/sq/streams/prompt-split-to-multiple\":{\"title\":\"$:/config/sq/streams/prompt-split-to-multiple\",\"description\":\"Enable to be prompted before splitting a node to multiple nodes\",\"caption\":\"Prompt before creating multiple nodes\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"yes\"},\"$:/config/shortcuts/streams-cancel-edit\":{\"title\":\"$:/config/shortcuts/streams-cancel-edit\",\"created\":\"20200914162547334\",\"modified\":\"20200914162547341\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Escape\"},\"$:/config/shortcuts/streams-delete\":{\"title\":\"$:/config/shortcuts/streams-delete\",\"created\":\"20200914163552494\",\"modified\":\"20200914163552502\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"ctrl-Delete\"},\"$:/config/shortcuts/streams-demote\":{\"title\":\"$:/config/shortcuts/streams-demote\",\"created\":\"20200914163104446\",\"modified\":\"20200914163104456\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"alt-Down\"},\"$:/config/shortcuts/streams-focus-higher\":{\"title\":\"$:/config/shortcuts/streams-focus-higher\",\"created\":\"20200914163342651\",\"modified\":\"20200914163342659\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"ctrl-Up\"},\"$:/config/shortcuts/streams-focus-lower\":{\"title\":\"$:/config/shortcuts/streams-focus-lower\",\"created\":\"20200914163347755\",\"modified\":\"20200914163347764\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"ctrl-Down\"},\"$:/config/shortcuts/streams-indent\":{\"title\":\"$:/config/shortcuts/streams-indent\",\"created\":\"20200914162901728\",\"modified\":\"20200914162901735\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Tab\"},\"$:/config/shortcuts/streams-merge-with-previous\":{\"title\":\"$:/config/shortcuts/streams-merge-with-previous\",\"created\":\"20200914164323982\",\"modified\":\"20200914164323991\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Backspace\"},\"$:/config/shortcuts/streams-promote\":{\"title\":\"$:/config/shortcuts/streams-promote\",\"created\":\"20200914163110776\",\"modified\":\"20200914163110785\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"alt-Up\"},\"$:/config/shortcuts/streams-rename\":{\"title\":\"$:/config/shortcuts/streams-rename\",\"created\":\"20200914163600676\",\"modified\":\"20200914163600683\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"alt-R\"},\"$:/config/shortcuts/streams-save-and-continue\":{\"title\":\"$:/config/shortcuts/streams-save-and-continue\",\"created\":\"20200914164329638\",\"modified\":\"20200914164329647\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Enter\"},\"$:/config/shortcuts/streams-save-and-exit\":{\"title\":\"$:/config/shortcuts/streams-save-and-exit\",\"created\":\"20200914163850209\",\"modified\":\"20200914163850217\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"ctrl-Enter\"},\"$:/config/shortcuts/streams-save-multiple\":{\"title\":\"$:/config/shortcuts/streams-save-multiple\",\"created\":\"20200914163843685\",\"modified\":\"20200914163843694\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"alt-Enter\"},\"$:/config/shortcuts/streams-unindent\":{\"title\":\"$:/config/shortcuts/streams-unindent\",\"created\":\"20200914162907631\",\"modified\":\"20200914162907639\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"shift-Tab\"},\"$:/config/sq/streams/split-at-caret\":{\"title\":\"$:/config/sq/streams/split-at-caret\",\"description\":\"Enable to split text at caret position on saving a node\",\"caption\":\"Split text at caret position\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"yes\"},\"$:/config/sq/streams/stream-enable-filter\":{\"title\":\"$:/config/sq/streams/stream-enable-filter\",\"description\":\"Filter that determines which tiddlers get the add node button at the bottom\",\"caption\":\"Filter to enable Streams\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input\",\"text\":\"[!is[shadow]]\"},\"$:/config/sq/streams/swipe-behaviour\":{\"title\":\"$:/config/sq/streams/swipe-behaviour\",\"description\":\"Choose whether swipe should show a contextmenu, or be used to indent/unindent nodes.\",\"caption\":\"Swipe behaviour\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/select\",\"option-names\":\"[[Show ContextMenu]] [[Indent / Un-indent]]\",\"option-values\":\"contextmenu indent\",\"condition\":\"[[$:/config/sq/streams/swipe-behaviour-animated]!is[missing]]\",\"text\":\"contextmenu\"},\"$:/config/sq/streams/swipe-contextmenu-position\":{\"title\":\"$:/config/sq/streams/swipe-contextmenu-position\",\"description\":\"Position of context menu shown on swiping.\",\"caption\":\"Position of context menu shown on swiping.\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/select\",\"settings-group\":\"swipe\",\"option-names\":\"[[Right]] [[Left]]\",\"option-values\":\"right left\",\"condition\":\"[[$:/config/sq/streams/swipe-enabled]get[text]match[yes]]\",\"text\":\"right\"},\"$:/config/sq/streams/swipe-enabled\":{\"title\":\"$:/config/sq/streams/swipe-enabled\",\"description\":\"Enable swipe to show context menu on touch devices.\",\"caption\":\"Enable swipe to show context menu on nodes.\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"settings-group\":\"swipe\",\"settings-group-header\":\"0\",\"text\":\"yes\"},\"$:/config/sq/streams/swipe-threshold\":{\"title\":\"$:/config/sq/streams/swipe-threshold\",\"description\":\"Distance in pixels that triggers a swipe, defaults to 100\",\"caption\":\"Swipe threshold in pixels\",\"settings-template\":\"$:/plugins/sq/streams/ui/templates/settings/input\",\"settings-group\":\"swipe\",\"condition\":\"[[$:/config/sq/streams/swipe-enabled]get[text]match[yes]]\",\"text\":\"70\"},\"$:/plugins/sq/streams/contextmenu/contextmenu-styles\":{\"title\":\"$:/plugins/sq/streams/contextmenu/contextmenu-styles\",\"text\":\".sq-contextmenu {\\n\\tpadding: 12px 0;\\n\\tbox-shadow: rgba(0, 0, 0, 0.40) 0px 2px 20px;\\n\\tfont-family: \\\"Segoe UI\\\", Roboto, Helvetica, Arial;\\n\\tfont-size: 13px;\\n\\tmargin-top: 4px;\\n\\tmin-width: 100px;\\n\\tmax-width: 240px;\\n\\tleft: -16px;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tborder-radius: 6px;\\n\\tborder: 1px solid #dce0e2;\\n\\ttransition: opacity 200ms ease 0s, transform 200ms ease 0s;\\n\\tmargin-top: 30px;\\n}\\n\\n.sq-contextmenu-alignright {\\n\\ttransform: translate3d(-100%,0,0);\\n}\\n\\n.sq-contextmenu .tc-menu-list-item {\\n\\tpadding: 0 18px;\\n\\tline-height: 24px;\\n\\twhite-space: nowrap;\\n\\tcolor: #4b5155;\\n\\tcursor: default !important;\\n\\ttext-indent: 0;\\n}\\n\\n.sq-contextmenu-itemwrapper {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\talign-items: center;\\n\\tposition: relative;\\t\\n}\\n\\n.sq-contextmenu-itemtext {\\n\\tdisplay: flex;\\n\\twhite-space: nowrap;\\n\\ttext-overflow: ellipsis;\\n\\tflex-grow: 1;\\n\\toverflow: hidden;\\t\\n}\\n\\n.sq-contextmenu-itemicon {\\n\\tcolor: #b7bcbf;\\n\\tmargin-left: 16px;\\n\\tmin-width: 22px;\\t\\n}\\n\\n.sq-contextmenu-divider {\\n\\tborder-top-width: 1px;\\n\\tborder-top-color: #eceef0;\\n\\tborder-top-style: solid;\\n\\tmargin: 6px 0;\\n}\",\"created\":\"20200602120854810\",\"modified\":\"20200603055942655\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/css\"},\"$:/plugins/sq/streams/contextmenu/contextmenu-template\":{\"title\":\"$:/plugins/sq/streams/contextmenu/contextmenu-template\",\"created\":\"20200602163018613\",\"modified\":\"20200603055942658\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define menu-item(title,subtitle:\\\"\\\",actions:\\\"\\\")\\n\\t\\t<$button class=\\\"tc-menu-list-item tc-btn-invisible\\\" actions=<<__actions__>> >\\n\\t\\t\\t<span class=\\\"sq-contextmenu-itemwrapper\\\">\\n\\t\\t\\t\\t<span class=\\\"sq-contextmenu-itemtext\\\">$title$</span>\\n\\t\\t\\t\\t<span class=\\\"sq-contextmenu-itemicon\\\"><$macrocall $name=\\\"displayshortcuts\\\" $output=\\\"text/plain\\\" shortcuts=\\\"$subtitle$\\\" prefix=\\\"\\\" separator=\\\" \\\" suffix=\\\"\\\"/></span>\\n\\t\\t\\t</span>\\n\\t\\t</$button>\\n\\\\end\\n\\n\\\\define menu-divider() <div class=\\\"sq-contextmenu-divider\\\"/>\\n\\n<$reveal type=\\\"popup\\\" state=<<contextmenu-state>> position={{{[<contextmenu-state>get[position]]}}} tag=\\\"div\\\">\\n\\t<div class={{{tc-drop-down sq-contextmenu [<contextmenu-state>get[position]match[right]then[sq-contextmenu-alignright]else[]] +[join[ ]]}}}>\\n\\t\\t<$macrocall $name=\\\"menu-item\\\" title=\\\"Open\\\" actions=\\\"\\\"\\\"<$action-navigate/>\\\"\\\"\\\"/>\\n\\t\\t<$macrocall $name=\\\"menu-item\\\" title=\\\"Rename\\\" subtitle=\\\"((streams-rename))\\\" actions=<<rename-node-actions>>/>\\n\\t\\t<$macrocall $name=\\\"menu-item\\\" title=\\\"Delete\\\" subtitle=\\\"((streams-delete))\\\" actions=<<delete-node-actions>>/>\\n\\t\\t<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/streams/contextmenu]]\\\" variable=\\\"listItem\\\">\\n\\t\\t\\t<$macrocall $name=\\\"menu-item\\\"\\n\\t\\t\\t\\ttitle={{{[<listItem>get[sq-contextmenu-name]]}}} \\n\\t\\t\\t\\tsubtitle={{{[<listItem>get[key]] [<listItem>get[sq-contextmenu-subtitle]] +[first[]]}}} \\n\\t\\t\\t\\tactions={{{[<listItem>get[text]]}}} />\\n\\t\\t</$list>\\n\\t\\t<<menu-divider>>\\n\\t\\t<$macrocall $name=\\\"menu-item\\\" title=\\\"Keyboard Shortcuts (?)\\\" actions=\\\"\\\"\\\"<$action-navigate $to=\\\"$:/plugins/sq/streams/info/keyboard-shortcuts\\\"/>\\\"\\\"\\\"/>\\n\\t</div>\\n</$reveal>\"},\"$:/plugins/sq/streams/codemirror-tweak\":{\"title\":\"$:/plugins/sq/streams/codemirror-tweak\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/codemirror-tweak\\ntype: application/javascript\\nmodule-type: startup\\n\\n\\\\*/\\n\\nexports.platforms = [\\\"browser\\\"];\\nexports.synchronous = true;\\n\\nexports.startup = function() {\\n\\n\\tif($tw.wiki.getTiddler(\\\"$:/plugins/tiddlywiki/codemirror\\\") && ($tw.wiki.getTiddlerText(\\\"$:/config/Plugins/Disabled/$:/plugins/tiddlywiki/codemirror\\\",\\\"no\\\") === \\\"no\\\")) {\\n\\t\\tvar CMEngine = require(\\\"$:/plugins/tiddlywiki/codemirror/engine.js\\\").CodeMirrorEngine;\\n\\t\\tCMEngine.prototype.focus = function() {\\n\\t\\t\\tthis.cm.focus();\\n\\t\\t\\tvar caretPosition = this.widget.getAttribute(\\\"caretPosition\\\",\\\"end\\\");\\t\\n\\t\\t\\tvar index = (caretPosition === \\\"end\\\") ? this.cm.getValue().length : parseInt(caretPosition);\\n\\t\\t\\tthis.cm.doc.setSelection(this.cm.doc.posFromIndex(index));\\n\\t\\t}\\n\\t}\\n\\n}\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/sq/streams/draggable-tweaks.js\":{\"title\":\"$:/plugins/sq/streams/draggable-tweaks.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/draggable-tweaks.js\\ntype: application/javascript\\nmodule-type: widget-subclass\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.baseClass = \\\"draggable\\\";\\n\\nexports.constructor = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\nexports.prototype = {};\\n\\nexports.prototype.render = function(parent,nextSibling) {\\n\\t// Call the base class handleChangeEvent function\\n\\tObject.getPrototypeOf(Object.getPrototypeOf(this)).render.call(this,parent,nextSibling);\\n\\tvar self = this;\\n\\t$tw.utils.each(this.attributes,function(v,a) {\\n\\t\\tif(a.substring(0,10) === \\\"data-node-\\\") {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tself.domNodes[0].setAttributeNS(null,a,v);\\n\\t\\t\\t} catch(e){\\n\\t\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n};\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"widget-subclass\"},\"$:/plugins/sq/streams/droppable-tweaks.js\":{\"title\":\"$:/plugins/sq/streams/droppable-tweaks.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/droppable-tweaks.js\\ntype: application/javascript\\nmodule-type: widget-subclass\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.baseClass = \\\"droppable\\\";\\n\\nexports.constructor = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\nexports.prototype = {};\\n\\nexports.prototype.render = function(parent,nextSibling) {\\n\\t// Call the base class handleChangeEvent function\\n\\tObject.getPrototypeOf(Object.getPrototypeOf(this)).render.call(this,parent,nextSibling);\\n\\tvar self = this;\\n\\t$tw.utils.each(this.attributes,function(v,a) {\\n\\t\\tif(a.substring(0,10) === \\\"data-node-\\\") {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tself.domNode.setAttributeNS(null,a,v);\\n\\t\\t\\t} catch(e){\\n\\t\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n};\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"widget-subclass\"},\"$:/plugins/sq/streams/framed-engine-tweak\":{\"title\":\"$:/plugins/sq/streams/framed-engine-tweak\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/framed-engine-tweak\\ntype: application/javascript\\nmodule-type: startup\\n\\n\\\\*/\\n\\nvar FramedEngine = require(\\\"$:/core/modules/editor/engines/framed.js\\\").FramedEngine;\\n\\nFramedEngine.prototype.focus = function() {\\n\\tif(this.domNode.focus && this.domNode.select) {\\n\\t\\tthis.domNode.focus();\\n\\t\\tif(this.widget.getAttribute(\\\"select\\\")===\\\"false\\\") {\\n\\t\\t\\tvar caretPosition = this.widget.getAttribute(\\\"caretPosition\\\",\\\"end\\\");\\n\\t\\t\\tcaretPosition = (caretPosition === \\\"end\\\") ? this.domNode.value.length : parseInt(caretPosition);\\n\\t\\t\\tthis.domNode.setSelectionRange(caretPosition,caretPosition);\\n\\t\\t} else {\\n\\t\\t\\tthis.domNode.select();\\n\\t\\t}\\n\\t}\\n\\t/*\\n\\tif(!this.setupDblClick) {\\n\\t\\tthis.domNode.addEventListener(\\\"dblclick\\\",this.propagateDblClick.bind(this));\\n\\t\\tthis.setupDblClick = true;\\n\\t}\\n\\t*/\\n}\\n\\n/*\\nFramedEngine.prototype.propagateDblClick = function(event) {\\n\\tif(this.widget.wiki.getTiddlerText(\\\"$:/config/sq/streams/dblclick-editor-to-exit\\\") === \\\"yes\\\") {\\n\\t\\tvar newEvent = this.widget.document.createEventObject ? this.widget.document.createEventObject() : this.widget.document.createEvent(\\\"Events\\\");\\n\\t\\tif(newEvent.initEvent) {\\n\\t\\t\\tnewEvent.initEvent(\\\"dblclick\\\", true, true);\\n\\t\\t}\\n\\t\\tnewEvent.keyCode = event.keyCode;\\n\\t\\tnewEvent.which = event.which;\\n\\t\\tnewEvent.metaKey = event.metaKey;\\n\\t\\tnewEvent.ctrlKey = event.ctrlKey;\\n\\t\\tnewEvent.altKey = event.altKey;\\n\\t\\tnewEvent.shiftKey = event.shiftKey;\\n\\t\\treturn !this.widget.parentDomNode.dispatchEvent(newEvent);\\n\\t}\\n\\treturn false;\\n}\\n*/\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/sq/streams/simple-engine-tweak\":{\"title\":\"$:/plugins/sq/streams/simple-engine-tweak\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/simple-engine-tweak\\ntype: application/javascript\\nmodule-type: startup\\n\\n\\\\*/\\n\\nvar SimpleEngine = require(\\\"$:/core/modules/editor/engines/simple.js\\\").SimpleEngine;\\n\\nSimpleEngine.prototype.focus = function() {\\n\\tif(this.domNode.focus && this.domNode.select) {\\n\\t\\tthis.domNode.focus();\\n\\t\\tif(this.widget.getAttribute(\\\"select\\\")===\\\"false\\\") {\\n\\t\\t\\tvar caretPosition = this.widget.getAttribute(\\\"caretPosition\\\",\\\"end\\\");\\n\\t\\t\\tcaretPosition = (caretPosition === \\\"end\\\") ? this.domNode.value.length : parseInt(caretPosition);\\n\\t\\t\\tthis.domNode.setSelectionRange(caretPosition,caretPosition);\\n\\t\\t} else {\\n\\t\\t\\tthis.domNode.select();\\n\\t\\t}\\n\\t}\\n}\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/sq/streams/delete-hook/actions\":{\"title\":\"$:/plugins/sq/streams/delete-hook/actions\",\"created\":\"20200527200401408\",\"modified\":\"20200527234136578\",\"tags\":\"$:/tags/deleteTiddlerAction\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define delete-children()\\n\\t<$list filter=\\\"[enlist{!!stream-list}]\\\">\\n\\t\\t<<delete-children>>\\n\\t</$list>\\n\\t<<$action-deletetiddler $filter=\\\"[enlist{!!stream-list}]\\\"/>\\n\\\\end\\n\\n<$list filter=\\\"[<currentTiddler>has[stream-type]]\\\">\\n\\t<$list filter=\\\"[<currentTiddler>has[parent]]\\\">\\n\\t\\t<$action-listops $tiddler={{!!parent}} $field=\\\"stream-list\\\" $subfilter=\\\"-[<currentTiddler>]\\\" />\\n\\t</$list>\\n\\t<$list variable=\\\"count\\\" filter=\\\"[enlist{!!stream-list}count[]!match[0]]\\\">\\n\\t\\t<$action-confirm $message=\\\"Do you wish to delete all tiddlers descended from this tiddler?\\\">\\n\\t\\t\\t<<delete-children>>\\n\\t\\t</$action-confirm>\\n\\t</$list>\\n</$list>\"},\"$:/plugins/sq/streams/delete-hook/hook\":{\"title\":\"$:/plugins/sq/streams/delete-hook/hook\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/delete-hook/hook\\ntype: application/javascript\\nmodule-type: startup\\n\\n\\\\*/\\n\\n$tw.hooks.addHook(\\\"th-deleting-tiddler\\\",function(tiddler) {\\n\\tif(tiddler.fields[\\\"draft.of\\\"]) {\\n\\t\\treturn;\\n\\t}\\n\\t\\n\\t$tw.rootWidget.invokeActionsByTag(\\\"$:/tags/deleteTiddlerAction\\\",null,{currentTiddler : tiddler.fields.title});\\n});\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/sq/streams/filters/get-stream-nodes.js\":{\"title\":\"$:/plugins/sq/streams/filters/get-stream-nodes.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/filters/get-stream-nodes.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports[\\\"get-stream-nodes\\\"] = function(source,operator,options) {\\n\\tvar results = [],\\n        suffixes = (operator.suffixes || []),\\n\\t\\tmatchTitles = (suffixes[0] || []).indexOf(\\\"matchtitles\\\") !== -1;\\n\\n\\tsource(function(tiddler,title) {\\n\\t\\t\\n\\t\\tvar processNode = function(node,nodeTitle) {\\n\\t\\t\\tif(node && node.fields[\\\"stream-list\\\"] && node.fields[\\\"stream-type\\\"]) {\\n\\t\\t\\t\\tresults.push(nodeTitle);\\n\\t\\t\\t\\tvar streamList = $tw.utils.parseStringArray(node.fields[\\\"stream-list\\\"]);\\n\\t\\t\\t\\t$tw.utils.each(streamList,function(streamListNodeTitle) {\\n\\t\\t\\t\\t\\tvar streamListNode = options.wiki.getTiddler(streamListNodeTitle);\\n\\t\\t\\t\\t\\tif(streamListNode) {\\n\\t\\t\\t\\t\\t\\tprocessNode(streamListNode,streamListNodeTitle);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tresults.push(nodeTitle);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif(tiddler) {\\n\\t\\t\\tprocessNode(tiddler,title);\\n\\t\\t}\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"filteroperator\"},\"$:/plugins/sq/streams/filters/get-stream-root.js\":{\"title\":\"$:/plugins/sq/streams/filters/get-stream-root.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/filters/get-stream-root.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n\\n//\\t[[xyz]get-stream-root[]]\\n//\\t[[xyz]get-stream-root:matchtitles[]]\\n//\\t[[xyz]get-stream-root:includeall,matchtitles[]]\\n\\n*/\\nexports[\\\"get-stream-root\\\"] = function(source,operator,options) {\\n\\tvar results = [],\\n        suffixes = (operator.suffixes || []),\\n\\t\\tincludeAll = (suffixes[0] || []).indexOf(\\\"includeall\\\") !== -1,\\n\\t\\tmatchTitles = (suffixes[0] || []).indexOf(\\\"matchtitles\\\") !== -1;\\n\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar ancestors = [];\\n\\t\\tif(tiddler && tiddler.fields[\\\"parent\\\"] && tiddler.fields[\\\"stream-type\\\"]) {\\n\\t\\t\\tvar parentTiddler = tiddler;\\n\\t\\t\\twhile(parentTiddler) {\\n\\t\\t\\t\\t\\tif(tiddler.fields.title.startsWith(parentTiddler.fields[\\\"title\\\"].split(\\\"/\\\")[0]) || !matchTitles ) {\\n\\t\\t\\t\\t\\t\\tancestors.unshift(parentTiddler.fields.title);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(parentTiddler.fields.parent) {\\t\\n\\t\\t\\t\\t\\tparentTiddler = options.wiki.getTiddler(parentTiddler.fields.parent);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tancestors.unshift(title);\\n\\t\\t}\\n\\t\\tif(!includeAll) {\\n\\t\\t\\tancestors.splice(1);\\n\\t\\t}\\n\\t\\t$tw.utils.pushTop(results,ancestors);\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\\n\",\"type\":\"application/javascript\",\"module-type\":\"filteroperator\"},\"$:/plugins/sq/streams/info/keyboard-shortcuts\":{\"title\":\"$:/plugins/sq/streams/info/keyboard-shortcuts\",\"text\":\"!! Streams keyboard shortcuts\\n\\n<table>\\n<tbody>\\n<$list filter=\\\"[all[shadows+tiddlers]prefix[$:/config/ShortcutInfo/streams-]]\\\">\\n<tr>\\n<td>{{!!text}}</td>\\n<td><$macrocall $name=\\\"displayshortcuts\\\" $output=\\\"text/plain\\\" shortcuts={{{[<currentTiddler>removeprefix[$:/config/ShortcutInfo/]addprefix[((]addsuffix[))]]}}} prefix=\\\"\\\" separator=\\\" \\\" suffix=\\\"\\\"/></td>\\n</tr>\\n</$list>\\n</tbody>\\n</table>\\n\\nShortcuts can be customized in the [[Control Panel|$:/core/ui/ControlPanel/KeyboardShortcuts]]\\n\\n''Drag and drop''\\n\\n* hold <kbd>control</kbd> key to drag and drop and create a copy of the node in another stream tiddler\\n* hold <kbd>shift</kbd> key to drag and drop and create a node that transcludes the contents of this node, in another stream tiddler\\n\\n''for the moment it is a design decision to disallow copying/transcluding the node inside the same root (story) tiddler''\\n\\n//Note that it is a known limitation that copying a node or transcluding it does not apply to the children of the node. This is on the [[list of things to implement|Roadmap]].//\"},\"$:/plugins/sq/streams/keyboard-shortcuts/cancel-edit-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/cancel-edit-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-cancel-edit))\",\"text\":\"<<cancel-edit-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/delete-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/delete-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-delete))\",\"text\":\"<<delete-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/demote-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/demote-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-demote))\",\"text\":\"<<demote-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/focus-higher-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/focus-higher-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-focus-higher))\",\"text\":\"<<focus-higher-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/focus-lower-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/focus-lower-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-focus-lower))\",\"text\":\"<<focus-lower-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/indent-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/indent-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts $:/tags/streams/contextmenu\",\"key\":\"((streams-indent))\",\"sq-contextmenu-name\":\"Indent\",\"sq-contextmenu-subtitle\":\"\",\"text\":\"<<indent-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/merge-with-previous\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/merge-with-previous\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-merge-with-previous))\",\"prevent-default\":\"no\",\"text\":\"<<merge-with-previous-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/promote-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/promote-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-promote))\",\"text\":\"<<promote-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/rename-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/rename-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-rename))\",\"text\":\"<<rename-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/save-and-continue\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/save-and-continue\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-save-and-continue))\",\"text\":\"<<save-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/save-and-exit\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/save-and-exit\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-save-and-exit))\",\"text\":\"<<save-edit-node-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/save-multiple\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/save-multiple\",\"tags\":\"$:/tags/streams/keyboard-shortcuts\",\"key\":\"((streams-save-multiple))\",\"text\":\"<<save-multiple-actions>>\"},\"$:/plugins/sq/streams/keyboard-shortcuts/unindent-node\":{\"title\":\"$:/plugins/sq/streams/keyboard-shortcuts/unindent-node\",\"tags\":\"$:/tags/streams/keyboard-shortcuts $:/tags/streams/contextmenu\",\"key\":\"((streams-unindent))\",\"sq-contextmenu-name\":\"Un-indent\",\"sq-contextmenu-subtitle\":\"\",\"text\":\"<<unindent-node-actions>>\"},\"$:/plugins/sq/streams/icons/new-node-btn\":{\"title\":\"$:/plugins/sq/streams/icons/new-node-btn\",\"created\":\"20200528160920973\",\"modified\":\"20200528164140128\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\">\\n<style>\\n  .line{\\n    stroke:#868c90;\\n  }\\n</style>\\n  <circle cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9\\\" class=\\\"circle\\\" fill=\\\"#fff\\\" ></circle>\\n  <line x1=\\\"6\\\" y1=\\\"10.5\\\" x2=\\\"15\\\" y2=\\\"10.5\\\" class=\\\"line\\\"></line>\\n  <line x1=\\\"10.5\\\" y1=\\\"6\\\" x2=\\\"10.5\\\" y2=\\\"15\\\" class=\\\"line\\\"></line>\\n</svg>\"},\"$:/plugins/sq/streams/refresh-hook.js\":{\"title\":\"$:/plugins/sq/streams/refresh-hook.js\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/refresh-hook.js\\ntype: application/javascript\\nmodule-type: startup\\n\\\\*/\\n\\n$tw.hooks.addHook(\\\"th-page-refreshed\\\",function handleEvent() {\\n\\t$tw.wiki.deleteTiddler(\\\"$:/state/sq/streams/caret-position\\\");\\n});\\n\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/sq/streams/releasenotes\":{\"title\":\"$:/plugins/sq/streams/releasenotes\",\"text\":\"<h3 id=\\\"1224-2022-04-07\\\"><a href=\\\"https://github.com/saqimtiaz/streams/compare/v1.2.23...v1.2.24\\\">1.2.24</a> (2022-04-07)</h3>\\n<h3 id=\\\"bug-fixes\\\">Bug Fixes</h3>\\n<ul>\\n<li>hide breadcrumbs when tiddler is folded (<a href=\\\"https://github.com/saqimtiaz/streams/commit/814bc9e604a55ec91d9d7b2600905469a2cfa10b\\\">814bc9e</a>)</li>\\n</ul>\\n\",\"type\":\"text/vnd.tiddlywiki\"},\"$:/config/flibbles/relink/fields/parent\":{\"title\":\"$:/config/flibbles/relink/fields/parent\",\"created\":\"20200530105147302\",\"modified\":\"20200530105155682\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"title\"},\"$:/config/flibbles/relink/fields/stream-list\":{\"title\":\"$:/config/flibbles/relink/fields/stream-list\",\"created\":\"20200530105147302\",\"modified\":\"20200530105155682\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"list\"},\"$:/plugins/sq/streams/styles\":{\"title\":\"$:/plugins/sq/streams/styles\",\"created\":\"20170922203553093\",\"modified\":\"20170927050808722\",\"tags\":\"[[$:/tags/Stylesheet]]\",\"text\":\".stream-root {\\n\\tmargin-left: -2.5em;\\n}\\n\\n@media only screen and (max-width: 600px) {\\n\\t.stream-root {\\n\\t\\tmargin-left: -1em;\\n\\t}\\n}\\n\\n.stream-row {\\n    display: flex;\\n    flex: 0 0 auto;\\n\\tuser-select: none;\\n}\\n\\n.stream-row-children {\\n\\tdisplay:flex;\\n\\tflex: 0 0 auto;\\n\\tflex-direction: column;\\n\\t/*padding-left: 0.5em;*/\\n\\tborder-left: 1px solid <<color message-border>>;\\n\\tmargin-left: 30px;\\n}\\n\\n.stream-row-nochildren + .stream-row-children {\\n\\tborder-left: none;\\n}\\n\\n\\n.stream-node-disabled,\\n.stream-node-disabled + div.stream-row-children{\\n\\tbackground-color: <<color tiddler-editor-border>>;\\n}\\n\\n.stream-node-disabled + div.stream-row-children + div.stream-node-disabled,\\n.stream-node-disabled + div.stream-row-children + div.stream-node-disabled + div.stream-row-children,\\n.stream-node-disabled.stream-row-nochildren + div.stream-row-children,\\n.stream-node-disabled.stream-row-nochildren + div.stream-row-children > div.stream-node-disabled {\\n\\tbackground-color: transparent;\\n}\\n\\n/* hide last droppable in a list when the last row is disabled */\\n.stream-node-disabled + div.stream-row-children + div.stream-droppable.tc-droppable.stream-droppable-terminal{\\n\\tdisplay: none;\\n\\t/*visibility: hidden;*/\\n}\\n\\n.stream-node-disabled + div.stream-row-children + .stream-node-disabled + div.stream-row-children + div.stream-droppable.tc-droppable.stream-droppable-terminal{\\n\\tdisplay: block;\\n}\\n\\n\\n/*\\n.stream-node-disabled.stream-row-nochildren + div.stream-row-children  {\\n\\tvisibility: hidden;\\n}\\n\\n.stream-node-disabled.stream-row-nochildren + div.stream-row-children + div + div {\\n\\tvisibility: visible;\\n}\\n*/\\n\\n\\n.stream-droppable.tc-droppable.tc-dragover > .tc-droppable-placeholder,\\n.stream-droppable.tc-droppable.tc-dragover > div > .tc-droppable-placeholder {\\n\\tmargin-left: 29px;\\n\\tline-height: 5px;\\n\\theight: 5px;\\n\\tborder: 2px solid <<color dropzone-background>>;\\n\\tbackground-color: <<color dropzone-background>>;\\n}\\n\\n/*\\n.stream-droppable-terminal.tc-drag-over .stream-droppable-spacer {\\n\\theight: 0;\\n}\\n*/\\n\\n.stream-droppable-spacer {\\n\\theight: 0.3em;\\n}\\n\\n<$vars currentTiddler={{{[prefix[$:/state/sq-context-popup]]}}}>\\n[data-node-title=\\\"{{!!current}}\\\"],\\n[data-node-title=\\\"{{!!current}}\\\"] + div{\\n\\tbackground: <<color notification-background>>;\\n\\tcolor: <<color message-foreground>>;\\n}\\n</$vars>\\n\\n.stream-node-control {\\n\\tdisplay: flex;\\n    flex: 0 0 45px;\\n    padding-top: 4px;\\n    padding-left: 4px;\\n}\\n\\n.stream-node-control .stream-node-collapser,\\n.stream-node-control .stream-node-handle {\\n    display: flex;\\n    height: 13px;\\n    width: 13px;\\n    margin-top: 4px;\\n    border-radius: 50%;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.stream-node-control.stream-node-control-addnew .stream-node-handle {\\n\\twidth: 20px;\\n\\theight: 20px;\\n\\tmargin-top: 0;\\n}\\n\\n.stream-node-control.stream-node-control-addnew .stream-node-collapser {\\n\\twidth: 16px;\\n}\\n\\n.stream-node-control.stream-node-control-addnew div.tc-btn-invisible svg {\\n\\topacity: 0.8;\\n}\\n\\n\\n.stream-node-control.stream-node-control-addnew div.tc-btn-invisible svg circle {\\n\\tfill: <<color tiddler-controls-foreground>>;\\n\\topacity: 0.6;\\n}\\n\\n.stream-node-control.stream-node-control-addnew div.tc-btn-invisible svg line.line {\\n\\tstroke: <<color foreground>>;\\n\\topacity: 1;\\n}\\n\\n.stream-node-control.stream-node-control-addnew div.tc-btn-invisible:hover svg circle {\\n\\tfill: <<color tiddler-controls-foreground-hover>>;\\n}\\n\\n.stream-node-control .stream-node-collapser {\\n\\theight: 13px;\\n\\twidth: 20px;\\n\\topacity:0;\\n}\\n\\n.stream-row-nochildren .stream-node-collapser {\\n\\tvisibility: hidden;\\n}\\n\\n.stream-row:hover .stream-node-collapser,\\n.stream-row-children-collapsed.stream-row:hover .stream-node-collapser {\\n\\topacity: 0.4;\\n}\\n\\n.stream-row:hover .stream-node-collapser:hover,\\n.stream-row-children-collapsed.stream-row:hover .stream-node-collapser:hover {\\n\\topacity: 0.9;\\n}\\n\\n.stream-row-children-collapsed .stream-node-control .stream-node-collapser {\\n\\topacity: 0.4;\\n}\\n\\n.stream-node-collapser.tc-btn-invisible,\\n.stream-node-collapser.tc-btn-invisible:focus {\\n\\toutline: none;\\n}\\n\\n.stream-node-collapser svg {\\n\\ttransform: rotateZ(90deg);\\n\\ttransition: transform 200ms ease-in-out 0s;\\n}\\n\\n.stream-row-children-collapsed .stream-node-collapser svg {\\n\\ttransform: rotateZ(0deg);\\n}\\n\\n/*\\n.stream-node-control .stream-node-handle-wrapper .stream-node-handle {\\n\\twidth: 13px;\\n\\theight: 13px;\\n\\tdisplay: flex;\\n\\talign-items : center;\\n\\tjustify-content: center;\\n}\\n*/\\n\\n.stream-node-control .stream-node-handle .stream-node-handle-inner {\\n    border-radius: 50%;\\n    width: 6px;\\n    height: 6px;\\n    background-color: <<color foreground>>;\\n\\topacity: 0.3;\\n}\\n\\n.stream-node-control .sq-contextmenu-container {\\n\\tdisplay: flex;\\n}\\n\\n/*\\n.stream-row:hover .stream-node-control .stream-node-handle-wrapper .stream-node-handle-inner {\\n\\topacity: 0.7;\\n}\\n*/\\n\\n.stream-row:hover .stream-node-control .stream-node-handle:hover .stream-node-handle-inner {\\n\\topacity: 1;\\n} \\n\\n<$vars currentTiddler={{{[prefix[$:/state/sq-context-popup]]}}}>\\n[data-node-title=\\\"{{!!current}}\\\"] .stream-node-handle .stream-node-handle-inner  {\\n    border: 5px solid #5778d8;\\n    opacity: 1;\\n}\\n</$vars>\\n\\n\\n.stream-node-block {\\n    overflow-wrap: break-word;\\n\\tmax-width: {{$:/config/sq/streams/node-max-width}}px;\\n    min-height: calc(1.5em + 8px);\\n    box-sizing: border-box;\\n    margin-top: -1px;\\n    min-width: 100px;\\n    width: 100%;\\n    line-height: 1.5em;\\n    cursor: text;\\n    padding-top: 4px;\\n    padding-bottom: 4px;\\n\\tuser-select: text;\\n\\t/*white-space: pre-wrap;*/\\n}\\n\\n.stream-node-block textarea {\\n\\twidth: 100%;\\n\\toutline-color: <<color tiddler-editor-border>>;\\n\\tborder: 1px solid <<color tiddler-editor-border>>;\\n\\n\\tresize: none;\\n}\\n\\n.stream-node-block textarea.streams-editor {\\n\\tline-height:1.5em;\\n\\tmargin-bottom: 0.6em;\\n}\\n\\n.stream-node-block > h1:first-child,\\n.stream-node-block > h2:first-child,\\n.stream-node-block > h3:first-child,\\n.stream-node-block > h4:first-child,\\n.stream-node-block > h5:first-child,\\n.stream-node-block > h6:first-child,\\n.stream-node-block p:first-child {\\n\\tmargin-top:0;\\n}\\n\\n.stream-node-block > h1:last-child,\\n.stream-node-block > h2:last-child,\\n.stream-node-block > h3:last-child,\\n.stream-node-block > h4:last-child,\\n.stream-node-block > h5:last-child,\\n.stream-node-block > h6:last-child,\\n.stream-node-block p:last-child {\\n\\tmargin-bottom:0;\\n}\\n\\nspan.sq-breadcrumbs-fragment {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    display: inline-block;\\n    text-overflow: ellipsis;\\n    max-width: calc({{$:/config/sq/streams/node-max-width}}px - 50px);\\n}\\n\\nspan.sq-breadcrumbs-fragment a.tc-tiddlylink {\\n\\tcolor: <<color foreground>>;\\n}\\n\\n/*** framed engine styles ***/\\n\\n.tc-tiddler-frame .stream-node-block input.tc-edit-texteditor,\\n.tc-tiddler-frame .stream-node-block textarea.tc-edit-texteditor,\\n.tc-tiddler-frame .stream-node-block iframe.tc-edit-texteditor {\\n\\tbackground: <<color background>> !important;\\n\\tmargin-top:0;\\n\\tmargin-bottom: -1.6em;\\n}\\n\\n<$reveal state=\\\"$:/config/sq/streams/enable-edit-toolbar\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n.stream-node-block .tc-editor-toolbar {\\n\\tdisplay: none;\\n}\\n</$reveal>\\n\\n<$reveal state=\\\"$:/state/sq/streams/global-drag-state\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\n/** active drag css **/\\n\\n</$reveal>\\n\\n<$reveal state=\\\"$:/state/sq/streams/global-drag-state\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\n/**no active drag css **/\\n\\n</$reveal>\"},\"$:/plugins/sq/streams/breadcrumbs-view-template\":{\"title\":\"$:/plugins/sq/streams/breadcrumbs-view-template\",\"created\":\"20200529205858594\",\"list-before\":\"$:/core/ui/ViewTemplate/body\",\"modified\":\"20200530055142652\",\"tags\":\"$:/tags/ViewTemplate\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\whitespace trim\\n\\\\define stream-show-breadcrumbs()\\n<$list filter=\\\"[<currentTiddler>has[stream-type]]\\\">\\n\\t<$list filter=\\\"[<currentTiddler>has[parent]]\\\">\\n\\t\\t<$set name=\\\"currentTiddler\\\" filter=\\\"[{!!parent}]\\\" select=\\\"0\\\">\\n\\t\\t\\t<<stream-show-breadcrumbs>>\\n\\t\\t</$set>\\n\\t</$list>\\t\\n\\t<$list filter=\\\"[<currentTiddler>!match<storyTiddler>]\\\">\\n\\t\\t<$wikify name=\\\"display-title\\\" text={{{ [<currentTiddler>!is[binary]get[text]!is[blank]] ~[{!!title}] }}}>\\n\\t\\t\\t<span class=\\\"sq-breadcrumbs-fragment\\\">\\n\\t\\t\\t<$link to=<<currentTiddler>>>\\n\\t\\t\\t\\t<$text text={{{ [<display-title>split[]first[50]join[]] }}}/>\\n\\t\\t\\t</$link>>\\n\\t\\t\\t</span>\\n\\t\\t</$wikify>\\n\\t</$list>\\n</$list>\\n\\\\end\\n<$list filter=\\\"\\\"\\\"[<folded-state>get[text]!is[blank]else[show]!match[hide]]\\\"\\\"\\\" variable=\\\"_NULL\\\">\\n<$list filter=\\\"[{$:/config/sq/streams/enable-breadcrumbs}match[yes]]\\\" variable=\\\"_NULL\\\">\\n<<stream-show-breadcrumbs>>\\n</$list>\\n</$list>\\n\\n\"},\"$:/plugins/sq/streams/editor-template\":{\"title\":\"$:/plugins/sq/streams/editor-template\",\"created\":\"20200601145424630\",\"modified\":\"20200602053704598\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\define config-visibility-title()\\n$:/config/EditorToolbarButtons/Visibility/$(currentTiddler)$\\n\\\\end\\n<$streams-edit tag=\\\"textarea\\\" autoHeight=\\\"yes\\\" minHeight=\\\"1em\\\" focus=\\\"yes\\\" select=\\\"false\\\" class=\\\"streams-editor tc-edit-texteditor tc-edit-texteditor-body\\\" caretPosition={{{[{$:/state/sq/streams/caret-position}!is[blank]else[end]]}}}><$set name=\\\"targetTiddler\\\"value=<<currentTiddler>>><$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/EditorToolbar]!has[draft.of]]\\\"><$reveal type=\\\"nomatch\\\" state=<<config-visibility-title>> text=\\\"hide\\\" class=\\\"tc-text-editor-toolbar-item-wrapper\\\"><$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/toolbar/button\\\"\\nmode=\\\"inline\\\"/></$reveal></$list></$set></$streams-edit>\"},\"$:/plugins/sq/streams/nodes-list-template\":{\"title\":\"$:/plugins/sq/streams/nodes-list-template\",\"created\":\"20171022203553093\",\"modified\":\"20171122050808722\",\"text\":\"\\\\import [[$:/plugins/sq/streams/action-macros]] [all[shadows+tiddlers]tag[$:/tags/streams/actionmacros]]  [all[shadows+tiddlers]tag[$:/tags/streams/user-actionmacros]]\\n\\\\whitespace trim\\n\\n<$vars stream-root-title=<<currentTiddler>>\\n\\tcontextmenu-state=<<qualify \\\"$:/state/sq-context-popup\\\">>\\n\\trow-edit-state=<<qualify \\\"$:/state/sq/streams/current-edit-tiddler\\\">>\\n\\tdrag-title-state=<<qualify \\\"$:/state/sq/streams/current-drag-title\\\">>\\n\\tdrag-title-nextsibling-state=<<qualify \\\"$:/state/sq/streams/current-drag-nextsibling\\\">> \\n>\\n\\t<$eventcatcher\\n\\t\\tevents=\\\"click\\\"\\n\\t\\tselector=\\\".stream-node-ctrl-btn\\\"\\n\\t\\tactions-click=<<node-ctrl-btn-actions>>\\n\\t\\ttag=\\\"div\\\"\\n\\t>\\n\\t<$eventcatcher\\n\\t\\tevents=\\\"dblclick swiped-right swiped-left\\\"\\n\\t\\ttag=\\\"div\\\"\\n\\t\\tselector=\\\".stream-row\\\"\\n\\t\\tactions-dblclick=<<toggle-row-edit-state>>\\n\\t\\tactions-swiped-right=<<swiped-right-actions>>\\n\\t\\tactions-swiped-left=<<swiped-left-actions>>\\n\\t>\\n\\t<$eventcatcher\\n\\t\\ttag=\\\"div\\\"\\n\\t\\tevents=\\\"contextmenu\\\"\\n\\t\\tselector=\\\".sq-contextmenu-container\\\"\\n\\t\\tactions-contextmenu=<<oncontext-menu-actions>>\\n\\t>\\n\\t<$swiper\\n\\t\\ttag=\\\"div\\\"\\n\\t\\tenable={{$:/config/sq/streams/swipe-enabled}}\\n\\t\\tswipethreshold={{$:/config/sq/streams/swipe-threshold}}\\n\\t>\\n\\t<div class={{{ stream-root [{$:/state/sq/nodes/global-drag-state}match[yes]then[stream-dragactive]] [<currentTiddler>!has[stream-list]then[stream-newlist]] +[join[ ]] }}}>\\n\\t\\t{{||$:/plugins/sq/streams/templates/stream-root-template}}\\n\\t\\t<$list filter=\\\"[all[current]match<stream-root-title>]\\\" variable=\\\"_NULL\\\">\\n\\t\\t\\t<!-- if we are the root, add a button to add more nodes-->\\n\\t\\t\\t<div class=\\\"stream-row\\\">\\n\\t\\t\\t\\t<div class=\\\"stream-node-control stream-node-control-addnew\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"stream-node-collapser\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"stream-node-handle\\\">\\n\\t\\t\\t\\t\\t\\t<$button tag=\\\"div\\\" class=\\\"tc-btn-invisible\\\" tooltip=\\\"add node\\\" actions=<<add-new-node-actions>> >\\n\\t\\t\\t\\t\\t\\t\\t{{$:/plugins/sq/streams/icons/new-node-btn}}\\n\\t\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/streams/root-buttons]]\\\" variable=\\\"btnTiddler\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"stream-node-handle\\\">\\n\\t\\t\\t\\t\\t\\t\\t<$transclude tiddler=<<btnTiddler>>/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</$list>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"stream-node-block\\\">\\n\\t\\t\\t\\t\\t<!--consider moving last child dropzone in here, though thats for children too-->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\t\\t\\t\\n\\t\\t\\t<$set name=\\\"currentTiddler\\\" filter={{{[<contextmenu-state>get[current]]}}}>\\n\\t\\t\\t\\t{{||$:/plugins/sq/streams/contextmenu/contextmenu-template}}\\n\\t\\t\\t</$set>\\n\\t\\t</$list>\\t\\n\\t</div>\\n\\t</$swiper>\\n\\t</$eventcatcher>\\n\\t</$eventcatcher>\\n\\t</$eventcatcher>\\n</$vars>\\n\"},\"$:/plugins/sq/streams/templates/stream-root-template\":{\"title\":\"$:/plugins/sq/streams/templates/stream-root-template\",\"text\":\"\\\\whitespace trim\\n<$vars dropTargetTiddler=<<currentTiddler>> >\\n\\t<$list filter=\\\"[list[!!stream-list]!is[missing]]\\\">\\n\\t\\t<$set name=\\\"enable-dnd\\\" filter=\\\"[<enable-dnd>match[no]] ~[<drag-title-state>get[text]match<currentTiddler>then[no]]\\\" select=\\\"0\\\">\\n\\t\\t\\t{{||$:/plugins/sq/streams/templates/stream-row-template}}\\n\\t\\t</$set>\\n\\t</$list>\\n\\t<$tiddler tiddler=\\\"\\\">\\n\\t\\t<!-- to drop after the last child of any list level-->\\n\\t\\t<$droppable\\n\\t\\t\\tactions=<<stream-drop-actions>>\\n\\t\\t\\ttag=\\\"div\\\"\\n\\t\\t\\tenable=<<enable-dnd>>\\n\\t\\t\\tclass=\\\"stream-droppable stream-droppable-terminal\\\"\\n\\t\\t\\tdisabledClass=\\\"stream-node-disabled\\\"\\n\\t\\t>\\n\\t\\t\\t<div class=\\\"tc-droppable-placeholder\\\">\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t</div><!-- idea only want below div with height when its a child with no more children-->\\n\\t\\t\\t<$list filter=\\\"[<currentTiddler>!has[stream-list]]\\\" variable=\\\"_NULL\\\"><div class=\\\"stream-droppable-spacer\\\"/></$list>\\n\\t\\t</$droppable>\\n\\t</$tiddler>\\n</$vars>\"},\"$:/plugins/sq/streams/templates/stream-row-body\":{\"title\":\"$:/plugins/sq/streams/templates/stream-row-body\",\"text\":\"<$transclude mode=\\\"block\\\"/>\"},\"$:/plugins/sq/streams/templates/stream-row-template\":{\"title\":\"$:/plugins/sq/streams/templates/stream-row-template\",\"text\":\"\\\\whitespace trim\\n<$qualify\\n\\tname=\\\"row-children-visibility-state\\\"\\n\\ttitle={{{ [[$:/state/sq/streams/visibility/]addsuffix<currentTiddler>] }}}\\n>\\n<$droppable \\n\\tactions=<<stream-drop-actions>>\\n\\ttag=\\\"div\\\"\\n\\tclass={{{ stream-droppable [list[!!stream-list]is[tiddler]then[]else[stream-row-nochildren]] +[join[ ]]}}}\\n\\tenable={{{[<drag-title-nextsibling-state>get[text]match<currentTiddler>then[no]] ~[<enable-dnd>]}}}\\n\\tdisabledClass=\\\"stream-node-disabled\\\"\\n\\tdata-node-title=<<currentTiddler>>\\n>\\n\\t<div class=\\\"tc-droppable-placeholder\\\"/>\\n\\t<div class={{{ stream-row [<row-children-visibility-state>get[text]match[hide]then[stream-row-children-collapsed]] +[join[ ]]}}}\\n\\t\\tdata-node-title=<<currentTiddler>>\\n\\t\\tdata-node-tags={{!!tags}}\\n\\t>\\n\\t\\t<$draggable\\n\\t\\t\\ttag=\\\"div\\\"\\n\\t\\t\\ttiddler=<<currentTiddler>>\\n\\t\\t\\tstartactions=<<node-drag-start-actions>>\\n\\t\\t\\tendactions=<<node-drag-end-actions>>\\n\\t\\t\\tclass=\\\"stream-node-control sq-contextmenu-container\\\"\\n\\t\\t\\tdata-node-title=<<currentTiddler>>\\n\\t\\t>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"tc-btn-invisible stream-node-ctrl-btn stream-node-collapser\\\" data-btn-role=\\\"stream-node-visibility\\\" data-rowchildren-visibility-state=<<row-children-visibility-state>>>\\n\\t\\t\\t\\t{{$:/plugins/sq/streams/icons/node-expand-arrow}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<div class=\\\"stream-node-handle tc-btn-invisible stream-node-ctrl-btn\\\" data-btn-role=\\\"stream-node-decorator\\\" data-node-title=<<currentTiddler>>>\\n\\t\\t\\t\\t\\t<div class=\\\"stream-node-handle-inner\\\"/>\\n\\t\\t\\t</div>\\n\\t\\t</$draggable>\\n\\t\\t<div class=\\\"stream-node-block\\\">\\n\\t\\t\\t<$list filter=\\\"[<row-edit-state>get[text]!is[blank]else[]match<currentTiddler>]\\\" variable=\\\"NULL\\\" emptyMessage=\\\"\\\"\\\"{{||$:/plugins/sq/streams/templates/stream-row-body}}\\\"\\\"\\\">\\n\\t\\t\\t\\t<$keyboard-plus shortcutTag=\\\"$:/tags/streams/keyboard-shortcuts\\\">\\n\\t\\t\\t\\t\\t{{||$:/plugins/sq/streams/editor-template}}\\n\\t\\t\\t\\t</$keyboard-plus>\\t\\t\\t\\n\\t\\t\\t</$list>\\n\\t\\t</div>\\n\\t</div>\\n</$droppable>\\n<$reveal\\n\\ttag=\\\"div\\\"\\n\\ttype=\\\"nomatch\\\"\\n\\tstateTitle=<<row-children-visibility-state>>\\n\\ttext=\\\"hide\\\"\\n\\tclass=\\\"stream-row-children\\\"\\n>\\n\\t\\t{{||$:/plugins/sq/streams/templates/stream-root-template}}\\n</$reveal>\\n</$qualify>\"},\"$:/plugins/sq/streams/stream-view-template\":{\"title\":\"$:/plugins/sq/streams/stream-view-template\",\"created\":\"20170922203553093\",\"modified\":\"20170929050808722\",\"tags\":\"[[$:/tags/ViewTemplate]]\",\"list-after\":\"$:/core/ui/ViewTemplate/body\",\"text\":\"<$list filter=\\\"\\\"\\\"[<folded-state>get[text]!is[blank]else[show]!match[hide]]\\\"\\\"\\\" variable=\\\"_NULL\\\">\\n<$list filter=\\\"\\\"\\\"[all[current]subfilter{$:/config/sq/streams/stream-enable-filter}]\\\"\\\"\\\">\\n{{||$:/plugins/sq/streams/nodes-list-template}}\\n</$list>\\n</$list>\"},\"$:/plugins/sq/streams/sq-ui-styles\":{\"title\":\"$:/plugins/sq/streams/sq-ui-styles\",\"tags\":\"[[$:/tags/Stylesheet]]\",\"text\":\"/** checkbox switches start **/\\n/** https://www.w3schools.com/howto/howto_css_switch.asp **/\\n/* The switch - the box around the slider */\\nlabel.squi-form-switch {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\twidth: 36px;\\n\\theight: 12px;\\n}\\n\\n/* Hide default HTML checkbox */\\nlabel.squi-form-switch input {\\n\\topacity: 0;\\n\\twidth: 0;\\n\\theight: 0;\\n}\\n\\n/* The slider */\\nlabel.squi-form-switch span {\\n\\tposition: absolute;\\n\\tcursor: pointer;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\tbackground-color: <<color tiddler-controls-foreground>>;\\n\\t-webkit-transition: .2s;\\n\\ttransition: .2s;\\n}\\n\\nlabel.squi-form-switch span:before {\\n\\tposition: absolute;\\n\\tcontent: \\\"\\\";\\n\\theight: 20px;\\n\\twidth: 20px;\\n\\tleft: -1px;\\n\\ttop: -4px;\\n\\tbottom: 4px;\\n\\tbackground-color: <<color background>>;\\n\\t-webkit-transition: .2s;\\n\\ttransition: .2s;\\n\\tbox-shadow: 0 1px 3px 0 rgba(0,0,0,0.7);\\n}\\n\\nlabel.squi-form-switch input:checked + span {\\n\\tbackground-color: rgba(26,115,232,0.5);\\n}\\n\\nlabel.squi-form-switch input:checked + span:before {\\n\\tbackground-color: rgb(26,115,232);\\n\\topacity: 1;\\n}\\n\\nlabel.squi-form-switch input:focus + span {\\n\\tbox-shadow: 0 0 1px #2196F3;\\n}\\n\\nlabel.squi-form-switch input:checked + span:before {\\n\\t-webkit-transform: translateX(17px);\\n\\t-ms-transform: translateX(17px);\\n\\ttransform: translateX(17px);\\n}\\n\\nlabel.squi-form-switch span {\\n\\tborder-radius: 12px;\\n}\\n\\nlabel.squi-form-switch span:before {\\n\\tborder-radius: 50%;\\n}\\n\\ndiv.squi-form-label {\\n\\t\\n}\\n\\n/*** checkbox switches end ***/\\n\\n/** form select elements **/\\n.squi-form-select {\\n\\tappearance: none;\\n\\tbackground: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='12' fill='%235F6368'%3E%3Cpath d='M0 0h24L12 12z'/%3E%3C/svg%3E\\\") calc(100% - 8px) center no-repeat;\\n\\tbackground-color: rgb(241,243,244);\\n\\tbackground-size: 10px;\\n\\tborder: none;\\n\\tborder-radius: 4px;\\n\\tcolor: rgb(32,33,36);\\n\\tcursor: pointer;\\n\\tmax-width: 100%;\\n\\toutline: none;\\n\\tpadding: 6px 21px 6px 8px;\\n/*\\twidth: 200px;*/\\n}\\n\\ninput.squi-form-input {\\n\\tborder: 1px solid <<color tiddler-controls-foreground>>;\\n\\tborder-radius: 3px;\\n\\tbackground-color: rgb(241,243,244);\\n\\tpadding: 6px;\\n}\\n\\ninput.squi-form-input:focus {\\n\\toutline-color: #ccc;\\n}\\n\\n\\n.sq-list-group {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tpadding-left: 0;\\n\\tmargin-bottom: 0;\\n\\tbox-sizing: border-box;\\n}\\n\\n.sq-list-group-box-shadow {\\n\\tbox-shadow:1px 1px 5px rgba(0, 0, 0, 0.3);\\t\\n\\tborder-bottom-left-radius: .25rem;\\n\\tborder-bottom-right-radius: .25rem;\\n\\tborder-top-left-radius: .25rem;\\n\\tborder-top-right-radius: .25rem;\\t\\t\\n}\\n\\t\\n.sq-list-group-item\\t{\\n\\tposition: relative;\\n\\tdisplay: block;\\n\\tpadding: 0.75rem 1.25rem;\\n\\tbackground-color:  <<color background>>;\\n\\tborder: 1px solid rgba(0,0,0,.125);\\n\\twidth: 100%;\\n\\tcolor: #495057;\\n\\ttext-align:\\tinherit;\\t\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tjustify-content: space-between!important;\\n\\talign-items: center!important;\\n\\tword-spacing: 0.1em;\\n}\\n\\n\\n.sq-list-group-item+.sq-list-group-item {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-list-group-item:first-child {\\n\\tborder-top-left-radius: .25rem;\\n\\tborder-top-right-radius: .25rem;\\n}\\n\\n.sq-list-group-item:last-child {\\n\\tborder-bottom-left-radius: .25rem;\\n\\tborder-bottom-right-radius: .25rem;\\n}\\n\\n.sq-list-stream-settings {\\n\\tfont-size: 90%;\\n}\\n\\ninput.sq-search-input {\\n    display: block;\\n    width: 100%;\\n    height: calc(1.5em + .75rem + 2px);\\n    padding: .375rem .75rem;\\n    font-size: 0.8rem;\\n    font-weight: 400;\\n    line-height: 1.5;\\n    color: #495057;\\n    background-color:  <<color background>>;\\n    background-clip: padding-box;\\n    border: 1px solid #ced4da;\\n    border-radius: .25rem;\\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\n    margin-bottom: 0.75em;\\n}\\n\\ninput.sq-search-input:focus {\\ncolor: #495057;\\n    background-color:  <<color background>>;\\n    border-color: #80bdff;\\n    outline: 0;\\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\\n}\\n\"},\"$:/plugins/sq/streams/ui/templates/settings/input-switch\":{\"title\":\"$:/plugins/sq/streams/ui/templates/settings/input-switch\",\"text\":\"<label class=\\\"squi-form-label\\\"><$link tooltip={{!!description}}>{{!!caption}}</$link></label><$checkbox field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" class=\\\"squi-form-switch\\\"/>\"},\"$:/plugins/sq/streams/ui/templates/settings/input\":{\"title\":\"$:/plugins/sq/streams/ui/templates/settings/input\",\"text\":\"<label class=\\\"squi-form-label\\\"><$link tooltip={{!!description}}>{{!!caption}}</$link></label>\\n<$edit-text tag=\\\"input\\\" class=\\\"squi-form-input\\\"/>\"},\"$:/plugins/sq/streams/ui/templates/settings/select\":{\"title\":\"$:/plugins/sq/streams/ui/templates/settings/select\",\"text\":\"<label class=\\\"squi-form-label\\\"><$link tooltip={{!!description}}>{{!!caption}}</$link></label>\\n<$vars cnt={{{[enlist{!!option-names}count[]]}}}>\\n<$select class=\\\"squi-form-select\\\">\\n<$list filter=\\\"[range<cnt>]\\\" variable=\\\"index\\\">\\n<option value={{{[enlist{!!option-values}nth<index>]}}}><$text text={{{[enlist{!!option-names}nth<index>]}}}/></option>\\n</$list>\\n</$select>\\n</$vars>\"},\"$:/plugins/sq/lib/swipeevents.js\":{\"title\":\"$:/plugins/sq/lib/swipeevents.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/lib/swipeevents.js\\ntype: application/javascript\\nmodule-type: library\\nBased on https://github.com/john-doherty/swiped-events\\nhttps://github.com/umanghome/swipe-listener\\nhttps://github.com/scriptex/touchsweep/blob/master/src/touchsweep.js\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.platforms = [\\\"browser\\\"];\\n\\nfunction SwipeEventsFactory(element,options) {\\n\\n\\tif(typeof window.CustomEvent !== 'function') {\\n\\t\\t\\n\\t\\twindow.CustomEvent = function (event, params) {\\n\\t\\t\\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\\n\\t\\t\\tvar evt = document.createEvent('CustomEvent');\\n\\t\\t\\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\\n\\t\\t\\treturn evt;\\n\\t\\t};\\n\\t\\twindow.CustomEvent.prototype = window.Event.prototype;\\n\\t}\\n\\t\\n\\tif(!element) {\\n\\t\\treturn;\\n\\t}\\n\\telement.addEventListener(\\\"touchstart\\\", handleTouchStart, false);\\n\\telement.addEventListener(\\\"touchmove\\\", handleTouchMove, false);\\n\\telement.addEventListener(\\\"touchend\\\", handleTouchEnd, false);\\n\\t\\n\\toptions = options || {};\\n\\t\\n\\tvar xDown = null,\\n\\t\\tyDown = null,\\n\\t\\txDiff = null,\\n\\t\\tyDiff = null,\\n\\t\\ttimeDown = null,\\n\\t\\tstartEl = null,\\n\\t\\tdefaults = {\\n\\t\\t\\t\\\"swipe-threshold\\\": 20,\\n\\t\\t\\t\\\"swipe-timeout\\\": 500\\n\\t\\t};\\n\\t\\t\\n\\t$tw.utils.extend(defaults,options);\\t\\n\\n\\t/**\\n\\t * Fires swiped event if swipe detected on touchend\\n\\t * @param {object} e - browser event object\\n\\t * @returns {void}\\n\\t */\\n\\tfunction handleTouchEnd(e) {\\n\\n\\t\\t// if the user released on a different target, cancel!\\n\\t\\tif (startEl !== e.target) return;\\n\\n\\t\\tvar swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', defaults[\\\"swipe-threshold\\\"]), 10); // default 20px\\n\\t\\tvar swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', defaults[\\\"swipe-timeout\\\"]), 10);\\t   // default 500ms\\n\\t\\tvar timeDiff = Date.now() - timeDown;\\n\\t\\tvar eventType = '';\\n\\t\\tvar changedTouches = e.changedTouches || e.touches || [];\\n\\n\\t\\tif (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\\n\\t\\t\\tif (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\\n\\t\\t\\t\\tif (xDiff > 0) {\\n\\t\\t\\t\\t\\teventType = 'swiped-left';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\teventType = 'swiped-right';\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\\n\\t\\t\\tif (yDiff > 0) {\\n\\t\\t\\t\\teventType = 'swiped-up';\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\teventType = 'swiped-down';\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (eventType !== '') {\\n\\n\\t\\t\\tvar eventData = {\\n\\t\\t\\t\\tdir: eventType.replace(/swiped-/, ''),\\n\\t\\t\\t\\txStart: parseInt(xDown, 10),\\n\\t\\t\\t\\txEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\\n\\t\\t\\t\\tyStart: parseInt(yDown, 10),\\n\\t\\t\\t\\tyEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\\n\\t\\t\\t};\\n\\n\\t\\t\\t// fire `swiped` event event on the element that started the swipe\\n\\t\\t\\tstartEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\\n\\n\\t\\t\\t// fire `swiped-dir` event on the element that started the swipe\\n\\t\\t\\tstartEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\\n\\t\\t}\\n\\n\\t\\t// reset values\\n\\t\\txDown = null;\\n\\t\\tyDown = null;\\n\\t\\ttimeDown = null;\\n\\t}\\n\\n\\t/**\\n\\t * Records current location on touchstart event\\n\\t * @param {object} e - browser event object\\n\\t * @returns {void}\\n\\t */\\n\\tfunction handleTouchStart(e) {\\n\\n\\t\\t// if the element has data-swipe-ignore=\\\"true\\\" we stop listening for swipe events\\n\\t\\tif (e.target.getAttribute('data-swipe-ignore') === 'true') return;\\n\\n\\t\\tstartEl = e.target;\\n\\n\\t\\ttimeDown = Date.now();\\n\\t\\txDown = e.touches[0].clientX;\\n\\t\\tyDown = e.touches[0].clientY;\\n\\t\\txDiff = 0;\\n\\t\\tyDiff = 0;\\n\\t}\\n\\n\\t/**\\n\\t * Records location diff in px on touchmove event\\n\\t * @param {object} e - browser event object\\n\\t * @returns {void}\\n\\t */\\n\\tfunction handleTouchMove(e) {\\n\\n\\t\\tif (!xDown || !yDown) return;\\n\\n\\t\\tvar xUp = e.touches[0].clientX;\\n\\t\\tvar yUp = e.touches[0].clientY;\\n\\n\\t\\txDiff = xDown - xUp;\\n\\t\\tyDiff = yDown - yUp;\\n\\t}\\n\\n\\t/**\\n\\t * Gets attribute off HTML element or nearest parent\\n\\t * @param {object} el - HTML element to retrieve attribute from\\n\\t * @param {string} attributeName - name of the attribute\\n\\t * @param {any} defaultValue - default value to return if no match found\\n\\t * @returns {any} attribute value or defaultValue\\n\\t */\\n\\tfunction getNearestAttribute(el, attributeName, defaultValue) {\\n\\n\\t\\t// walk up the dom tree looking for data-action and data-trigger\\n\\t\\twhile (el && el !== document.documentElement) {\\n\\n\\t\\t\\tvar attributeValue = el.getAttribute(attributeName);\\n\\n\\t\\t\\tif (attributeValue) {\\n\\t\\t\\t\\treturn attributeValue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tel = el.parentNode;\\n\\t\\t}\\n\\n\\t\\treturn defaultValue;\\n\\t}\\n};\\n\\nexports.SwipeEvents = SwipeEventsFactory;\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"Based on https\":\"//github.com/john-doherty/swiped-events\",\"https\":\"//github.com/scriptex/touchsweep/blob/master/src/touchsweep.js\"},\"$:/plugins/sq/streams/action-unselect.js\":{\"title\":\"$:/plugins/sq/streams/action-unselect.js\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/action-unselect.js\\ntype: application/javascript\\nmodule-type: widget\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar UnselectWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nUnselectWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nUnselectWidget.prototype.render = function(parent,nextSibling) {\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n\\tthis.parentDomNode = parent;\\n\\tthis.renderChildren(parent,nextSibling);\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nUnselectWidget.prototype.execute = function() {\\n\\tthis.makeChildWidgets();\\n};\\n\\n/*\\nRefresh the widget by ensuring our attributes are up to date\\n*/\\nUnselectWidget.prototype.refresh = function(changedTiddlers) {\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\n/*\\nInvoke the action associated with this widget\\n*/\\nUnselectWidget.prototype.invokeAction = function(triggeringWidget,event) {\\n\\tif (window.getSelection) {\\n\\t\\twindow.getSelection().removeAllRanges();\\n\\t} else if (document.selection) {\\n\\t\\tdocument.selection.empty();\\n\\t}\\n\\treturn true;\\n};\\n\\nUnselectWidget.prototype.allowActionPropagation = function() {\\n\\treturn false;\\n};\\n\\nexports[\\\"action-unselect\\\"] = UnselectWidget;\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/sq/streams/action-withinput.js\":{\"title\":\"$:/plugins/sq/streams/action-withinput.js\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/action-withinput.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nPrompt user for input before executing actions contained inside the widget.\\nThe string entered by the user is available in the variable userInput in the actions contained in the widget.\\n\\nPrompt user for confirmation before executing actions contained inside the widget.\\nIf the user cancels, the actions are not executed.\\n\\nExample:\\n<$button>go\\n<$action-withinput message=\\\"What is your name?\\\" actions=\\\"\\\"\\\"<$action-setfield $tiddler=\\\"name\\\" $value=<<userInput>>/>\\\"\\\"\\\" />\\n</$button>\\n\\nParameters:\\nmessage : message to display\\ndefault: default value, defaults to an empty string\\n\\n\\n\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar WithInputWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nWithInputWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nWithInputWidget.prototype.render = function(parent,nextSibling) {\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n\\tthis.parentDomNode = parent;\\n\\tthis.renderChildren(parent,nextSibling);\\n};\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nWithInputWidget.prototype.execute = function() {\\n\\tthis.message = this.getAttribute(\\\"message\\\");\\n\\tthis.defaultValue = this.getAttribute(\\\"default\\\",\\\"\\\");\\n\\tthis.actions = this.getAttribute(\\\"actions\\\");\\n\\tthis.makeChildWidgets();\\n};\\n\\n/*\\nRefresh the widget by ensuring our attributes are up to date\\n*/\\nWithInputWidget.prototype.refresh = function(changedTiddlers) {\\n\\tvar changedAttributes = this.computeAttributes();\\n\\tif(changedAttributes[\\\"message\\\"] || changedAttributes[\\\"default\\\"] || changedAttributes[\\\"actions\\\"]) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\n/*\\nInvoke the action associated with this widget\\n*/\\nWithInputWidget.prototype.invokeAction = function(triggeringWidget,event) {\\n\\tif(this.message && this.actions) {\\n\\t\\tvar userData = prompt(this.message,this.defaultValue);\\n\\t\\tif(userData != null) {\\n\\t\\t\\tthis.setVariable(\\\"userInput\\\",userData);\\n\\t\\t\\tthis.invokeActionString(this.actions,this,event);\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t}\\n};\\n\\nWithInputWidget.prototype.allowActionPropagation = function() {\\n\\treturn false;\\n};\\n\\nexports[\\\"action-withinput\\\"] = WithInputWidget;\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/sq/streams/widgets/keyboard-plus.js\":{\"title\":\"$:/plugins/sq/streams/widgets/keyboard-plus.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/widgets/keyboard-plus.js\\ntype: application/javascript\\nmodule-type: widget\\n\\\\*/\\n(function(){\\n\\t\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar KeyboardWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nKeyboardWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nKeyboardWidget.prototype.render = function(parent,nextSibling) {\\n\\tvar self = this;\\n\\t// Remember parent\\n\\tthis.parentDomNode = parent;\\n\\t// Compute attributes and execute state\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n\\tvar tag = this.parseTreeNode.isBlock ? \\\"div\\\" : \\\"span\\\";\\n\\tif(this.tag && $tw.config.htmlUnsafeElements.indexOf(this.tag) === -1) {\\n\\t\\ttag = this.tag;\\n\\t}\\n\\t// Create element\\n\\tvar domNode = this.document.createElement(tag);\\n\\t// Assign classes\\n\\tvar classes = (this[\\\"class\\\"] || \\\"\\\").split(\\\" \\\");\\n\\tclasses.push(\\\"tc-keyboard\\\");\\n\\tdomNode.className = classes.join(\\\" \\\");\\n\\t\\n\\t\\n\\t// Add a keyboard event handler\\n\\tdomNode.addEventListener(\\\"keydown\\\",function (event) {\\n\\t\\t\\t// CM triggers two events\\n\\t\\t\\t// second event has:\\n\\t\\t\\t//\\t\\tdefaultPrevented : true\\n\\t\\t\\t//\\t\\tdetail: 0\\n\\t\\t\\t// \\t\\teventPhase 3 (instead of 2)\\n\\t\\t\\t// \\t\\tisComposing : false\\n\\t\\t\\tif(!event.defaultPrevented) {\\n\\t\\t\\t\\tvar key, action, preventDefault;\\n\\t\\t\\t\\tfor(var i=0; i<self.shortcutTiddlers.length; i++) {\\n\\t\\t\\t\\t\\tif(self.shortcutParsedList[i] !== undefined && $tw.keyboardManager.checkKeyDescriptors(event,self.shortcutParsedList[i])) {\\n\\t\\t\\t\\t\\t\\tkey = self.shortcutParsedList[i];\\n\\t\\t\\t\\t\\t\\taction = self.shortcutActionList[i];\\n\\t\\t\\t\\t\\t\\tpreventDefault = self.shortcutPreventDefaultList[i];\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(key !== undefined) {\\n\\t\\t\\t\\t\\tif(preventDefault) {\\n\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tObject.defineProperty(event,\\\"sqHandled\\\",{value:true});\\n\\t\\t\\t\\t\\t//event.sqHandled = true;\\n\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t\\t//event.stopImmediatePropagation();\\n\\t\\t\\t\\t\\tself.invokeActionString(action,self,event);\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn false;\\n\\t\\t}\\n\\t},false);\\n\\t\\n\\t// Insert element\\n\\tparent.insertBefore(domNode,nextSibling);\\n\\tthis.renderChildren(domNode,null);\\n\\tthis.domNodes.push(domNode);\\t\\n}\\t\\n\\t\\nKeyboardWidget.prototype.execute = function() {\\n\\tvar self = this;\\n\\t// Get attributes\\n\\tthis.tag = this.getAttribute(\\\"tag\\\",\\\"\\\");\\n\\tthis[\\\"class\\\"] = this.getAttribute(\\\"class\\\",\\\"\\\");\\n\\tthis.shortcutTiddlerTag = this.getAttribute(\\\"shortcutTag\\\");\\n\\t//var keyInfoArray = [];\\n\\t\\n\\tthis.shortcutTiddlers = this.wiki.getTiddlersWithTag(this.shortcutTiddlerTag);\\n\\tthis.shortcutKeysList = [];\\n\\tthis.shortcutActionList = [];\\n\\tthis.shortcutParsedList = [];\\n\\tthis.shortcutPreventDefaultList = [];\\n\\t\\n\\tfor(var i=0; i<this.shortcutTiddlers.length; i++) {\\n\\t\\tvar title = this.shortcutTiddlers[i],\\n\\t\\t\\ttiddlerFields = this.wiki.getTiddler(title).fields;\\n\\t\\tthis.shortcutKeysList[i] = tiddlerFields.key !== undefined ? tiddlerFields.key : undefined;\\n\\t\\tthis.shortcutActionList[i] = tiddlerFields.text;\\n\\t\\tthis.shortcutPreventDefaultList[i] = tiddlerFields[\\\"prevent-default\\\"] && tiddlerFields[\\\"prevent-default\\\"] === \\\"no\\\" ? false : true;\\n\\t\\tthis.shortcutParsedList[i] = this.shortcutKeysList[i] !== undefined ? $tw.keyboardManager.parseKeyDescriptors(this.shortcutKeysList[i]) : undefined;\\n\\t}\\n\\t\\n\\t// Make child widgets\\n\\tthis.makeChildWidgets();\\n};\\n\\n/*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\nKeyboardWidget.prototype.refresh = function(changedTiddlers) {\\n\\t\\n\\tvar newList = this.wiki.getTiddlersWithTag(this.shortcutTiddlerTag)\\n\\tvar hasChanged = $tw.utils.hopArray(changedTiddlers,this.shortcutTiddlers) ? true :\\n\\t\\t($tw.utils.hopArray(changedTiddlers,newList) ? true :\\n\\t\\t($tw.keyboardManager.detectNewShortcuts(changedTiddlers))\\n\\t);\\n\\t// Re-cache shortcuts if something changed\\n\\tif(hasChanged) {\\n\\t//\\tthis.updateShortcutLists(newList);\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\t\\n\\tvar changedAttributes = this.computeAttributes();\\n\\tif(changedAttributes[\\\"class\\\"] || changedAttributes.tag) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t}\\n\\n\\treturn this.refreshChildren(changedTiddlers);\\n};\\n\\n\\nKeyboardWidget.prototype.invokeActionString = function(actions,triggeringWidget,event,variables) {\\n\\tif(!variables) {\\n\\t\\tvariables = {};\\n\\t}\\n\\t\\n\\tvar activeElement = document.activeElement;\\n\\tvar selection;\\n\\tif(activeElement && activeElement.tagName === \\\"IFRAME\\\") {\\n\\t\\tvar idoc = activeElement.contentDocument || activeElement.contentWindow.document;\\n\\t\\tactiveElement = idoc.activeElement;\\n\\t\\tselection = idoc.getSelection();\\n\\t} else {\\n\\t\\tselection = window.getSelection();\\n\\t}\\n\\n\\tif(window.CodeMirror && document.activeElement.closest(\\\".CodeMirror\\\")) {\\n\\t\\tvar cm = document.activeElement.closest(\\\".CodeMirror\\\").CodeMirror;\\n\\t\\tvar cursor = cm.getCursor(\\\"start\\\");\\n\\t\\tvar startRange = cm.getRange({\\\"line\\\":0,\\\"ch\\\":0},{\\\"line\\\":cursor.line,\\\"ch\\\":cursor.ch});\\n\\t\\tvar selectionStart = startRange.length;\\n\\t\\tvar selection = cm.getSelection();\\n\\t\\tvar selectionEnd = selectionStart + selection.length;\\n\\t\\t\\n\\t\\tvariables[\\\"selectionStart\\\"] = startRange.length.toString();\\n\\t\\tvariables[\\\"selectionEnd\\\"] = (selectionStart + selection.length).toString();\\n\\t\\tvariables[\\\"selection\\\"] = cm.getSelection().toString();\\n\\t} else if(activeElement && selection && ((activeElement.tagName === \\\"INPUT\\\" && activeElement.type === \\\"TEXT\\\") || activeElement.tagName === \\\"TEXTAREA\\\")) {\\n\\t\\tvariables[\\\"selectionStart\\\"] = activeElement.selectionStart.toString();\\n\\t\\tvariables[\\\"selectionEnd\\\"] = activeElement.selectionEnd.toString();\\n\\t\\tvariables[\\\"selection\\\"] = selection.toString();\\n\\t}\\n\\n\\t//this.selection_original_invokeActionString(actions,triggeringWidget,event,variables);\\n\\tObject.getPrototypeOf(Object.getPrototypeOf(this)).invokeActionString.call(this,actions,triggeringWidget,event,variables);\\n}\\n\\nexports[\\\"keyboard-plus\\\"] = KeyboardWidget;\\n\\n})();\\t\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/sq/streams/streams-edit\":{\"title\":\"$:/plugins/sq/streams/streams-edit\",\"text\":\"/*\\\\\\n\\ntitle: $:/plugins/sq/streams/streams-edit\\ntype: application/javascript\\nmodule-type: widget-subclass\\n\\n\\\\*/\\n\\nexports.baseClass = \\\"edit\\\";\\nexports.name = \\\"streams-edit\\\";\\n\\nexports.constructor = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n}\\nexports.prototype = {};\\n\\nexports.prototype.getEditorType = function() {\\n\\tvar tiddler = this.wiki.getTiddler(this.editTitle);\\n\\tvar type = tiddler.fields.type || \\\"text/vnd.tiddlywiki\\\";\\n\\tvar editorType;\\n\\tif(type === \\\"text/vnd.tiddlywiki\\\") {\\n\\t\\teditorType = this.wiki.getTiddlerText(\\\"$:/config/sq/streams/editor-engine\\\");\\n\\t\\tif((!$tw.wiki.getTiddler(\\\"$:/plugins/tiddlywiki/codemirror\\\") || $tw.wiki.getTiddlerText(\\\"$:/config/Plugins/Disabled/$:/plugins/tiddlywiki/codemirror\\\",\\\"no\\\") === \\\"yes\\\" || !$tw.modules.titles[\\\"$:/plugins/tiddlywiki/codemirror/edit-codemirror.js\\\"]) && (editorType === \\\"codemirror\\\") ) {\\n\\t\\t\\teditorType = \\\"text\\\";\\n\\t\\t}\\n\\t\\treturn editorType;\\n\\t}\\n\\teditorType = this.wiki.getTiddlerText(EDITOR_MAPPING_PREFIX + type);\\n\\tif(!editorType) {\\n\\t\\tvar typeInfo = $tw.config.contentTypeInfo[type];\\n\\t\\tif(typeInfo && typeInfo.encoding === \\\"base64\\\") {\\n\\t\\t\\teditorType = \\\"binary\\\";\\n\\t\\t} else {\\n\\t\\t\\teditorType = \\\"text\\\";\\n\\t\\t}\\n\\t}\\n\\treturn editorType;\\n};\",\"type\":\"application/javascript\",\"module-type\":\"widget-subclass\"},\"$:/plugins/sq/streams/widgets/swiper.js\":{\"title\":\"$:/plugins/sq/streams/widgets/swiper.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/streams/widgets/swiper.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nSwipe event handler widget\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n//var SwipeListener = require(\\\"$:/sq/lib/swipe-listener\\\");\\nvar SwipeEvents = require(\\\"$:/plugins/sq/lib/swipeevents.js\\\").SwipeEvents;\\n\\nvar SwipeWidget = function(parseTreeNode,options) {\\n\\tthis.initialise(parseTreeNode,options);\\n};\\n\\n/*\\nInherit from the base widget class\\n*/\\nSwipeWidget.prototype = new Widget();\\n\\n/*\\nRender this widget into the DOM\\n*/\\nSwipeWidget.prototype.render = function(parent,nextSibling) {\\n\\tvar self = this;\\n\\t// Remember parent\\n\\tthis.parentDomNode = parent;\\n\\t// Compute attributes and execute state\\n\\tthis.computeAttributes();\\n\\tthis.execute();\\n\\t// Create element\\n\\tvar tag = this.parseTreeNode.isBlock ? \\\"div\\\" : \\\"span\\\";\\n\\tif(this.swipeTag && $tw.config.htmlUnsafeElements.indexOf(this.swipeTag) === -1) {\\n\\t\\ttag = this.swipeTag;\\n\\t}\\t\\n\\tvar domNode = this.document.createElement(tag);\\n\\tif(this.swipeEnable) {\\n\\t\\tSwipeEvents(domNode,{\\\"swipe-threshold\\\": this.swipeThreshold});\\n\\t}\\n\\tparent.insertBefore(domNode,nextSibling);\\n\\tthis.renderChildren(domNode,null);\\n\\tthis.domNodes.push(domNode);\\n}\\n\\n/*\\nCompute the internal state of the widget\\n*/\\nSwipeWidget.prototype.execute = function() {\\n\\tvar self = this;\\n\\tthis.swipeThreshold = parseInt(this.getAttribute(\\\"swipethreshold\\\",\\\"100\\\"));\\n\\tthis.swipeEnable = this.getAttribute(\\\"enable\\\",\\\"yes\\\") === \\\"yes\\\";\\n\\tthis.swipeTag = this.getAttribute(\\\"tag\\\");\\n\\tthis.makeChildWidgets();\\n};\\n\\n/*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\nSwipeWidget.prototype.refresh = function(changedTiddlers) {\\n\\tvar changedAttributes = this.computeAttributes();\\n\\tif($tw.utils.count(changedAttributes) > 0) {\\n\\t\\tthis.refreshSelf();\\n\\t\\treturn true;\\n\\t} else {\\n\\t\\treturn this.refreshChildren(changedTiddlers);\\n\\t}\\n};\\n\\nexports.swiper = SwipeWidget;\\n\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}