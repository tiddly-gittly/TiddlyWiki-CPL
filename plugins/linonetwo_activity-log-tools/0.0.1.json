{"author":"linonetwo","dependents":"","description":"Filter and library to read and write to daily activity save log tiddlers.","list":"readme","name":"activity-log-tools","plugin-type":"plugin","stability":"STABILITY_1_EXPERIMENTAL","text":"{\"tiddlers\":{\"$:/plugins/linonetwo/activity-log-tools/function/activity-log-title\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/function/activity-log-title\",\"tags\":\"$:/tags/Global\",\"text\":\"\\\\function fallback-activity-log-title() [addsuffix[-Log]]\\n\\\\function activity-log-title(sourceTitle) [<sourceTitle>get[activity-log]] ~[<sourceTitle>function[fallback-activity-log-title]]\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/Readme\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/Readme\",\"text\":\"\\\\procedure lingo-base() $:/plugins/linonetwo/activity-log-tools/language/\\n\\n! <<lingo Name>>\\n\\n<<lingo Description>>\\n\\nThis is a low-level JS library for developing plugins that will generate activity logs.\\n\\nThe following is a description of the development tools provided with this plug-in.\\n\\n!! Creating Log Files\\n\\n!!! JS Library\\n\\n!!!! createActivityLog\\n\\nCreates a log file, if it already exists it will be overwritten depending on the options.\\n\\n```ts\\nfunction createActivityLog(logTiddlerType: LogFileTypes, fields: Partial<ITiddlerFields> & Pick<ITiddlerFields, 'title'>, options?: {\\n    overwrite?: boolean;\\n}): void\\n```\\n\\nUsage\\n\\n```ts\\nimport { createActivityLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/createActivityLog';\\ncreateActivityLog(activityLog.type, { title: activityLog.title });\\n```\\n\\n!!!! addActivityToLog\\n\\nAdds an activity log to the log file, if it doesn't exist it will be created for you.\\n\\n```ts\\nfunction addActivityToLog(activityLog: IActivityLogFile | undefined, newActivityTimestamp: number): void\\n```\\n\\nUsage\\n\\n```ts\\nimport { addActivityToLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/addActivityToLog';\\naddActivityToLog(eventLog, event.timestamp)\\n```\\n\\n!! Read the log file\\n\\n!!! JS Library\\n\\n!!!! getActivityLog\\n\\nGets a log file based on the provided header, see the `IActivityLogFile` type, and the contents of the log will be stored in an ES6 `Map`, depending on the specific type of the file. The second parameter provided is not actually used, but just added directly to the returned object. If the tiddler doesn't exist, an empty `Map` is returned, which you can use as usual to add new stuff to, and then create the corresponding tiddler when storing it.\\n\\n```ts\\nfunction getActivityLog(logTiddlerTitle: string, logTiddlerType: LogFileTypes): IActivityLogFile | undefined\\n```\\n\\nUsage\\n\\n```ts\\nimport { getActivityLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/getActivityLog';\\nconst activityLog = getActivityLog(title, logTiddlerType);\\n```\\n\\n!!! Filters\\n\\nYou can use filters to get summaries of logs for visualization and other scenarios.\\n\\n!!!! activitydaycounts\\n\\nCalculates the number of activities per day for a given time frame. (The following example uses the `weekstart` and `weekend` macros from the [[visualization dashboard plugin|https://tw-cpl.netlify.app/#Plugin_202403161108223]])\\n\\n```scss\\n[[logFileTitle]activitydaycounts<weekstart>,<weekend>[]]\\n```\\n\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/Name\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/Name\",\"text\":\"Activity Log Tools\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/Description\",\"text\":\"Filter and library to read and write to daily activity save log tiddlers, for gamification frameworks, visualization frameworks, etc.\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DayInterval/Caption\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DayInterval/Caption\",\"text\":\"Day Interval\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DayInterval/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DayInterval/Description\",\"text\":\"Stored in days, suitable for hourly, frequent events. Save file small, calculation slow, vis is good.\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/Date/Caption\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/Date/Caption\",\"text\":\"Specific date\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/Date/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/Date/Description\",\"text\":\"store specific dates one by one, suitable for events that occur centrally for a period of time, and rarely occur thereafter, or events that occur more irregularly. Save file large, calculation fast, vis is good.\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DailyCount/Caption\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DailyCount/Caption\",\"text\":\"Counter on day\"},\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DailyCount/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/en-GB/RealityEventLog/Type/DailyCount/Description\",\"text\":\"store count of events in days, only save the number of times per day, not the specific time point to save space, suitable for events that occur very frequently. Save file small, calculation fast, vis is bad.\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/Readme\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/Readme\",\"text\":\"\\\\procedure lingo-base() $:/plugins/linonetwo/activity-log-tools/language/\\n\\n! <<lingo Name>>\\n\\n<<lingo Description>>\\n\\n这是一个底层的 JS 库，用于插件开发者开发可生成活动记录的其它插件。\\n\\n以下是本插件提供的开发工具的介绍。\\n\\n!! 创建记录文件\\n\\n!!! JS 库\\n\\n!!!! createActivityLog\\n\\n创建一个记录文件，如果文件已存在，会根据选项决定是否覆盖。\\n\\n```ts\\nfunction createActivityLog(logTiddlerType: LogFileTypes, fields: Partial<ITiddlerFields> & Pick<ITiddlerFields, 'title'>, options?: {\\n    overwrite?: boolean;\\n}): void\\n```\\n\\n用法\\n\\n```ts\\nimport { createActivityLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/createActivityLog';\\ncreateActivityLog(activityLog.type, { title: activityLog.title });\\n```\\n\\n!!!! addActivityToLog\\n\\n向记录文件添加一条活动记录，如果不存在会帮你创建。\\n\\n```ts\\nfunction addActivityToLog(activityLog: IActivityLogFile | undefined, newActivityTimestamp: number): void\\n```\\n\\n用法\\n\\n```ts\\nimport { addActivityToLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/addActivityToLog';\\naddActivityToLog(eventLog, event.timestamp)\\n```\\n\\n!! 读取记录文件\\n\\n!!! JS 库\\n\\n!!!! getActivityLog\\n\\n根据提供的标题获取一个记录文件，详见 `IActivityLogFile` 类型，记录内容将存放在一个 ES6 `Map` 里，内容根据文件的具体类型而定。提供的第二个参数其实并没有用上，而只是直接加到了返回的对象里。如果条目不存在，会返回空的 `Map`，你可以照常使用它往里面添加新的东西，然后在存储时再创建相应条目。\\n\\n```ts\\nfunction getActivityLog(logTiddlerTitle: string, logTiddlerType: LogFileTypes): IActivityLogFile | undefined\\n```\\n\\n用法\\n\\n```ts\\nimport { getActivityLog } from '$:/plugins/linonetwo/activity-log-tools/log-file-tools/getActivityLog';\\nconst activityLog = getActivityLog(title, logTiddlerType);\\n```\\n\\n!!! 筛选器\\n\\n你可以用筛选器获取记录的摘要，用于可视化等场景。\\n\\n!!!! activitydaycounts\\n\\n计算给定的时间范围内每天的活动次数。（下面的例子里使用了来自 [[visualization dashboard 插件|https://tw-cpl.netlify.app/#Plugin_202403161108223]]的`weekstart` 和 `weekend` 宏）\\n\\n```scss\\n[[logFileTitle]activitydaycounts<weekstart>,<weekend>[]]\\n```\\n\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/Name\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/Name\",\"text\":\"活动记录工具\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/Description\",\"text\":\"用于读写日常活动保存日志条目的筛选器和库，用于游戏化框架和可视化框架等。\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DayInterval/Caption\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DayInterval/Caption\",\"text\":\"日间隔\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DayInterval/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DayInterval/Description\",\"text\":\"以日为单位存储，适合以小时为单位，频繁发生的事件。存档较小，可视化计算慢效果好。\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/Date/Caption\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/Date/Caption\",\"text\":\"具体日期\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/Date/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/Date/Description\",\"text\":\"一行一个存储具体日期，适合一段时间集中发生，此后就很少再做的事件，或发生较无规律的事件。存档较大，可视化计算快效果好。\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DailyCount/Caption\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DailyCount/Caption\",\"text\":\"日次数\"},\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DailyCount/Description\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/language/zh-Hans/RealityEventLog/Type/DailyCount/Description\",\"text\":\"以日为单位存储，但只保存每日发生次数，不保存具体发生时间点以节省空间，适合每日发生非常频繁的事件。存档较小，可视化计算慢效果不好。\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-types/daily-count\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-types/daily-count\",\"caption\":\"<<lingo RealityEventLog/Type/DailyCount/Caption $:/plugins/linonetwo/activity-log-tools/language/>>\",\"description\":\"<<lingo RealityEventLog/Type/DailyCount/Description $:/plugins/linonetwo/activity-log-tools/language/>>\",\"tags\":\"$:/Tags/LogFileTypes\",\"text\":\"daily-count\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-types/date\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-types/date\",\"caption\":\"<<lingo RealityEventLog/Type/Date/Caption $:/plugins/linonetwo/activity-log-tools/language/>>\",\"description\":\"<<lingo RealityEventLog/Type/Date/Description $:/plugins/linonetwo/activity-log-tools/language/>>\",\"tags\":\"$:/Tags/LogFileTypes\",\"text\":\"date\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-types/day-interval\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-types/day-interval\",\"caption\":\"<<lingo RealityEventLog/Type/DayInterval/Caption $:/plugins/linonetwo/activity-log-tools/language/>>\",\"description\":\"<<lingo RealityEventLog/Type/DayInterval/Description $:/plugins/linonetwo/activity-log-tools/language/>>\",\"tags\":\"$:/Tags/LogFileTypes\",\"text\":\"day-interval\"},\"$:/plugins/linonetwo/activity-log-tools/readme\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\\\procedure lingo-base() $:/plugins/linonetwo/activity-log-tools/language/\\n\\n<<lingo Readme>>\"},\"$:/plugins/linonetwo/activity-log-tools/filter/activitydaycounts.js\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/filter/activitydaycounts.js\",\"type\":\"application/javascript\",\"module-type\":\"filteroperator\",\"Modern.TiddlyDev#Origin\":\"filter/activitydaycounts.ts\",\"text\":\"\\\"use strict\\\";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(e,t)=>{for(var o in t)__defProp(e,o,{get:t[o],enumerable:!0})},__copyProps=(t,o,r,a)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let e of __getOwnPropNames(o))__hasOwnProp.call(t,e)||e===r||__defProp(t,e,{get:()=>o[e],enumerable:!(a=__getOwnPropDesc(o,e))||a.enumerable});return t},__toCommonJS=e=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),e),activitydaycounts_exports={},import_getActivityLog=(__export(activitydaycounts_exports,{activitydaycounts:()=>activitydaycounts}),module.exports=__toCommonJS(activitydaycounts_exports),require(\\\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/getActivityLog\\\")),DAY_INTERVAL=864e5,activitydaycounts=(e,y)=>{const d=[];return e(function(e,t){var[o,r]=y.operands,o=getRangeAndLogFile(e,t,o,r);if(void 0===o)d.push(\\\"\\\");else{const[u,c,m]=o;var{items:a,type:r}=m;switch(r){case\\\"daily-count\\\":var n,i,s=new Map;for([n,i]of a){var g,p=new Date(Number(n.replace(\\\"daily-count\\\",\\\"\\\")));p.getTime()<u.getTime()||p.getTime()>c.getTime()||(g=i.split(\\\",\\\").map(e=>{var t=Number(e);return Number.isInteger(t)?t:0}),s.set(p,g))}var l=[...s].flatMap(([r,e])=>e.map((e,t)=>{var o=new Date(r);return o.setDate(o.getDate()+t),o.getMonth()!==r.getMonth()&&(o.setMonth(r.getMonth()),o.setFullYear(r.getFullYear()+Math.floor((r.getMonth()+t)/12)),o.setMonth((r.getMonth()+t)%12)),[o,e]})).filter(([e])=>e>=u&&e<=c).sort(([e],[t])=>e.getTime()-t.getTime()).map(([,e])=>e).join(\\\",\\\");d.push(l);break;case\\\"date\\\":{const _=new Map;a.forEach(e=>{var t=new Date(Number(e));t>=u&&t<=c&&(t=getLocaleDateKey(t),_.set(t,(null!=(t=_.get(t))?t:0)+1))}),d.push(getSortedCount(u,c,_));break}case\\\"day-interval\\\":{const v=new Map;a.forEach((e,t)=>{var o=t.replace(\\\"day-interval\\\",\\\"\\\"),r=e.split(\\\",\\\").map(Number);let a=new Date(Number(o));r.reverse().forEach(e=>{var t;(a=new Date(a.getTime()-e*DAY_INTERVAL))>=u&&a<=c&&(t=getLocaleDateKey(a),v.set(t,(null!=(t=v.get(t))?t:0)+1))})}),d.push(getSortedCount(u,c,v));break}default:d.push(\\\"\\\")}}}),d};function getRangeAndLogFile(e,t,o,r){var a=null==e?void 0:e.fields[\\\"activity-log-type\\\"];if(void 0!==a&&void 0!==o&&void 0!==r){var n,a=(0,import_getActivityLog.getActivityLog)(t,a);if(void 0!==a){let[e,t]=[o,r].map(e=>{var t=$tw.utils.parseDate(e);return null===t||Number.isNaN(t.getTime())?new Date:t});if(e.getTime()!==t.getTime())return e.getTime()>t.getTime()&&(n=e,e=t,t=n),[e,t,a]}}}function getSortedCount(e,t,o){for(let r=e.getTime();r<=t.getTime();r+=864e5)o.has(r)||o.set(r,0);return[...o].sort(([e],[t])=>e-t).map(([,e])=>e).join(\\\",\\\")}function getLocaleDateKey(e){var t=e.getFullYear(),o=e.getMonth()+1,r=e.getDate();return new Date(t,o-1,r).getTime()}\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/addActivityToLog.js\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/addActivityToLog.js\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"Modern.TiddlyDev#Origin\":\"log-file-tools/addActivityToLog.ts\",\"text\":\"\\\"use strict\\\";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(t,e)=>{for(var o in e)__defProp(t,o,{get:e[o],enumerable:!0})},__copyProps=(e,o,i,r)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let t of __getOwnPropNames(o))__hasOwnProp.call(e,t)||t===i||__defProp(e,t,{get:()=>o[t],enumerable:!(r=__getOwnPropDesc(o,t))||r.enumerable});return e},__toCommonJS=t=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),t),addActivityToLog_exports={},import_createActivityLog=(__export(addActivityToLog_exports,{addActivityToLog:()=>addActivityToLog}),module.exports=__toCommonJS(addActivityToLog_exports),require(\\\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/createActivityLog\\\")),DAY_INTERVAL=864e5,MAX_ACTIVITY_LOG_ITEM_DURATION=30*DAY_INTERVAL;function addActivityToLog(t,e){if(void 0!==t){var{items:o,type:i}=t;switch(i){case\\\"date\\\":var r=String(Object.keys(o).length);o.set(r,String(e));break;case\\\"daily-count\\\":var r=new Date(e),a=[...o.keys()].filter(t=>t.startsWith(\\\"daily-count\\\")).sort().pop();void 0===a?o.set(\\\"\\\".concat(\\\"daily-count\\\").concat(r.getTime()),\\\"1\\\"):(_=new Date(Number(a.replace(\\\"daily-count\\\",\\\"\\\"))),c=\\\"\\\".concat(\\\"daily-count\\\").concat(r.getTime()),void 0===(n=o.get(a))||r.getTime()-_.getTime()>MAX_ACTIVITY_LOG_ITEM_DURATION?o.set(c,\\\"1\\\"):(n=n.split(\\\",\\\"),r.toDateString()===_.toDateString()?n[n.length-1]=String(Number(n.at(-1))+1):n.push(\\\"1\\\"),o[\\\"delete\\\"](a),o.set(c,n.join(\\\",\\\"))));break;case\\\"day-interval\\\":var n,c,r=new Date(e),_=[...o.keys()].filter(t=>t.startsWith(\\\"day-interval\\\")).sort().pop();void 0===_?o.set(\\\"\\\".concat(\\\"day-interval\\\").concat(r.getTime()),\\\"0\\\"):(a=new Date(Number(_.replace(\\\"day-interval\\\",\\\"\\\"))),void 0===(c=o.get(_))||r.getTime()-a.getTime()>MAX_ACTIVITY_LOG_ITEM_DURATION?(n=\\\"\\\".concat(\\\"day-interval\\\").concat(r.getTime()),o.set(n,\\\"0\\\")):(n=c.split(\\\",\\\"),c=r.getTime()-a.getTime(),n.push(formatDayInterval(c)),o[\\\"delete\\\"](_),o.set(_,n.join(\\\",\\\"))))}updateActivityLogFile(t)}}function formatDayInterval(t){var e=t/DAY_INTERVAL;return 1<=e?e.toFixed(1):1/24<=e?e.toFixed(2):e.toFixed(5)}function updateActivityLogFile(t){(0,import_createActivityLog.createActivityLog)(t.type,{title:t.title}),$tw.wiki.setTiddlerData(t.title,Object.fromEntries(t.items))}\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/checkActivityLog.js\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/checkActivityLog.js\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"Modern.TiddlyDev#Origin\":\"log-file-tools/checkActivityLog.ts\",\"text\":\"\\\"use strict\\\";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(e,t)=>{for(var o in t)__defProp(e,o,{get:t[o],enumerable:!0})},__copyProps=(t,o,r,_)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let e of __getOwnPropNames(o))__hasOwnProp.call(t,e)||e===r||__defProp(t,e,{get:()=>o[e],enumerable:!(_=__getOwnPropDesc(o,e))||_.enumerable});return t},__toCommonJS=e=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),e),checkActivityLog_exports={};function isValidActivityLogData(e){return!(!e||Array.isArray(e))}__export(checkActivityLog_exports,{isValidActivityLogData:()=>isValidActivityLogData}),module.exports=__toCommonJS(checkActivityLog_exports);\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/createActivityLog.js\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/createActivityLog.js\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"Modern.TiddlyDev#Origin\":\"log-file-tools/createActivityLog.ts\",\"text\":\"\\\"use strict\\\";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(e,t)=>{for(var o in t)__defProp(e,o,{get:t[o],enumerable:!0})},__copyProps=(t,o,r,i)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let e of __getOwnPropNames(o))__hasOwnProp.call(t,e)||e===r||__defProp(t,e,{get:()=>o[e],enumerable:!(i=__getOwnPropDesc(o,e))||i.enumerable});return t},__toCommonJS=e=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),e),createActivityLog_exports={};function createActivityLog(e,t,o){var r;void 0!==$tw.wiki.getTiddler(t.title)&&(null==o||!o.overwrite)||$tw.wiki.addTiddler({...t,type:\\\"application/x-tiddler-dictionary\\\",text:\\\"\\\",\\\"hide-body\\\":\\\"yes\\\",\\\"activity-log-type\\\":e,tags:[...null!=(r=null==t?void 0:t.tags)?r:[],\\\"$:/Tags/ActivityLog\\\"]})}__export(createActivityLog_exports,{createActivityLog:()=>createActivityLog}),module.exports=__toCommonJS(createActivityLog_exports);\"},\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/getActivityLog.js\":{\"title\":\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/getActivityLog.js\",\"type\":\"application/javascript\",\"module-type\":\"library\",\"Modern.TiddlyDev#Origin\":\"log-file-tools/getActivityLog.ts\",\"text\":\"\\\"use strict\\\";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(t,e)=>{for(var o in e)__defProp(t,o,{get:e[o],enumerable:!0})},__copyProps=(e,o,i,r)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let t of __getOwnPropNames(o))__hasOwnProp.call(e,t)||t===i||__defProp(e,t,{get:()=>o[t],enumerable:!(r=__getOwnPropDesc(o,t))||r.enumerable});return e},__toCommonJS=t=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),t),getActivityLog_exports={},import_checkActivityLog=(__export(getActivityLog_exports,{getActivityLog:()=>getActivityLog}),module.exports=__toCommonJS(getActivityLog_exports),require(\\\"$:/plugins/linonetwo/activity-log-tools/log-file-tools/checkActivityLog\\\"));function getActivityLog(t,e){var o=void 0!==$tw.wiki.getTiddler(t),i=$tw.wiki.getTiddlerData(t);return(0,import_checkActivityLog.isValidActivityLogData)(i)?{exists:o,items:new Map(Object.entries(i)),title:t,type:e}:{exists:o,items:new Map,title:t,type:e}}\"}}}","title":"$:/plugins/linonetwo/activity-log-tools","type":"application/json","version":"0.0.1","Modern.TiddlyDev#SHA256-Hashed":"2cc37b1ca41b9e1946543b312c04219246651bfd1c385982d0256dcc58e53be8","core-version":">=5.3.0"}