{"title":"$:/plugins/oeyoews/neotw-reading-time","description":"neotw-reading-time","author":"oeyoews","version":"0.1.0","core-version":">=5.3.4","type":"application/json","plugin-type":"plugin","name":"neotw-reading-time","meat#disabled":"yes","qrcode":"yes","created":"20250227","dependents":"","stability":"STABILITY_2_STABLE","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-reading-time/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-reading-time/readme\",\"description\":\"neotw-reading-time\",\"text\":\"[[在线文档|https://neotw.vercel.app/docs/plugins/neotw-reading-time]]\\n\\n当前wiki总字数(英文按照单词统计): <<reading-time-full>>\\n\\n{{ $:/state/reading-time-full }}\"},\"$:/plugins/oeyoews/neotw-reading-time/lib.js\":{\"title\":\"$:/plugins/oeyoews/neotw-reading-time/lib.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-reading-time/lib.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n\\n/**\\n * 估算阅读时间\\n * @param {string} text - 需要阅读的文本\\n * @param {number} chineseSpeed - 每分钟中文阅读速度（默认 400 字）\\n * @param {number} englishSpeed - 每分钟英文阅读速度（默认 200 词）\\n * @returns {string} 预估阅读时间和字数统计（格式：“阅读时间: 3 分钟，字数: 1200”）\\n */\\nfunction estimateReadingTime(text, chineseSpeed = 400, englishSpeed = 200) {\\n  if (!text) return '阅读时间: 0 分钟，字数: 0';\\n\\n  // 统计中文字符数量（汉字、标点等）\\n  const chineseChars = (text.match(/[\\\\u4e00-\\\\u9fa5]/g) || []).length;\\n\\n  // 统计英文单词数量（按空格分隔）\\n  const englishWords = (text.match(/[a-zA-Z]+/g) || []).length;\\n\\n  // 计算总字数\\n  const totalWords = chineseChars + englishWords;\\n\\n  // 计算阅读时间（分钟）\\n  const time = chineseChars / chineseSpeed + englishWords / englishSpeed;\\n\\n  // 向上取整，至少 1 分钟\\n  return `阅读时间: ${Math.max(Math.ceil(time), 1)} 分钟，字数: ${totalWords}`;\\n}\\n\\nmodule.exports = estimateReadingTime;\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/neotw-reading-time/reading-time-full.js\":{\"title\":\"$:/plugins/oeyoews/neotw-reading-time/reading-time-full.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-reading-time/reading-time-full.js\\ntype: application/javascript\\nmodule-type: macro\\n\\n\\\\*/\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict';\\n\\n  function getTextTotal(text) {\\n    const chineseChars = (text.match(/[\\\\u4e00-\\\\u9fa5]/g) || []).length;\\n    const englishWords = (text.match(/[a-zA-Z]+/g) || []).length;\\n    return chineseChars + englishWords || 0;\\n  }\\n\\n  exports.name = 'reading-time-full';\\n\\n  exports.params = [\\n    {\\n      name: 'filter',\\n    },\\n  ];\\n\\n  exports.run = function (_filter) {\\n    const filter =\\n      '[!is[system]!is[binary]!type[application/json]!publish[private]has[text]]';\\n    const tiddlers = $tw.wiki.filterTiddlers(_filter || filter);\\n    if (!tiddlers || tiddlers.length === 0) return '0';\\n\\n    let topTiddlers = []; // 存储前 10 个最大值（有序）\\n\\n    let wordsTotal = 0;\\n    tiddlers.forEach((tiddler) => {\\n      if (!$tw.wiki.tiddlerExists(tiddler)) return;\\n      const text = $tw.wiki.getTiddler(tiddler).fields?.text;\\n      if (!text) return;\\n\\n      const wordCount = getTextTotal(text);\\n      wordsTotal += wordCount;\\n      const entry = { title: tiddler, wordCount };\\n\\n      if (topTiddlers.length < 20) {\\n        // 直接插入，并保持有序（降序）\\n        topTiddlers.push(entry);\\n        topTiddlers.sort((a, b) => b.wordCount - a.wordCount);\\n      } else if (wordCount > topTiddlers[19].wordCount) {\\n        // 只替换最小值，并保持排序\\n        topTiddlers[19] = entry;\\n        topTiddlers.sort((a, b) => b.wordCount - a.wordCount);\\n      }\\n    });\\n\\n    // 防止title 含有|\\n    const res = topTiddlers\\n      .map(\\n        (t, index) =>\\n          `${index + 1}. <$link to=\\\"${t.title}\\\" /> (${t.wordCount.toLocaleString()}字)`,\\n      )\\n      .join('\\\\n\\\\n');\\n    if (!_filter) {\\n      $tw.wiki.addTiddler({\\n        title: '$:/state/reading-time-full',\\n        text: res,\\n      });\\n    }\\n    return wordsTotal.toLocaleString();\\n  };\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"macro\"},\"$:/plugins/oeyoews/neotw-reading-time/reading-time.js\":{\"title\":\"$:/plugins/oeyoews/neotw-reading-time/reading-time.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-reading-time/reading-time.js\\ntype: application/javascript\\nmodule-type: macro\\n\\n\\\\*/\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict';\\n\\n  const estimateReadingTime = require('./lib');\\n  exports.name = 'reading-time'; // book image header\\n\\n  exports.params = [\\n    {\\n      name: 'tiddler',\\n    },\\n  ];\\n\\n  exports.run = function (_tiddler) {\\n    const tiddler = this.getVariable('currentTiddler') || _tiddler;\\n    const text = $tw.wiki.getTiddler(tiddler)?.fields?.text;\\n    return estimateReadingTime(text);\\n  };\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"macro\"}}}"}