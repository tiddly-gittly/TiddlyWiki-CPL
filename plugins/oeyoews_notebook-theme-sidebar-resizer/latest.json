{"title":"$:/plugins/oeyoews/notebook-theme-sidebar-resizer","description":"notebook-theme-sidebar-resizer","author":"oeyoews","version":"0.4.0","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"notebook theme sidebar resizer","meat#disabled":"yes","qrcode":"yes","created":"2023-12-19","list":"readme","dependents":"","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/readme\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/readme\",\"text\":\"!! Notebook theme sidebar resizer\\n\\n> support left/right sidebar resizer\\n\\n> 可拖动调整侧边栏宽度.\\n\\n> 最初仅仅是为了支持 notebook theme 而写的 sidebar resizer, 后来开始支持 vanilla(and based vanilla sidebar theme), captivate, whitespace, leftbar 等插件, 布局或主题.\\n\\n<!-- 在切换主题时，theme 会覆盖掉同名非系统文件，所以需要手动修改 -->\\n\\n!! For Leftbar\\n\\nneed add `<$nbresizer position=\\\"left\\\" widthTiddler=\\\"$:/xp/leftopentab/metrics/width\\\" statusTiddler=\\\"$:/config/LeftOpenTab/Status\\\" close=\\\"hide\\\"/>` in [[$:/xp/ui/PageTemplate/leftsidebar]] tiddler.\\n\\n```html\\n<!-- here -->\\n<$nbresizer position=\\\"left\\\" widthTiddler=\\\"$:/xp/leftopentab/metrics/width\\\" statusTiddler=\\\"$:/config/LeftOpenTab/Status\\\" close=\\\"hide\\\"/>\\n\\n</$scrollable>\\n\\n</$reveal>\\n```\\n\\n!! For captivate theme\\n\\nneed add `<$nbresizer />` in [[$:/themes/cdr/captivate/ui/SideBar]] tiddler.\\n\\n```html\\n<<sidebarTabs>>\\n<!-- here -->\\n<$nbresizer />\\n```\\n\\n!! For Whitespace theme\\n\\n> whitespace theme for two 5.1.17 and 5.1.22 version, if use latest version, maybe have some ui problems.\\n\\nneed add `<$nbresizer />` in [[$:/themes/jd/Whitespace/template/sidebar]] tiddler.\\n\\n```html\\n<!-- add resizer widget here  -->\\n\\n<$transclude/>\\n<$nbresizer />\\n```\\n\\n> 如果你在不同的主题切换, 你会发现一些 UI 上的异常, 那是因为 这个 tiddler 被修改后变成了 shadow tiddler, 在所有的主题下都会起作用.\\n\\n!! Recipes\\n\\n* 之所以部分主题需要手动修改 tiddler, 是因为他们的 sidebar 模板是写死的, 无法通过动态嵌入 tiddler. 这一点建议 学习 notebook theme\\n\\n!! TODO\\n\\n* resizer widget 暴露出对应的参数, 支持用户自定义\"},\"$:/themes/nico/notebook/ui/Sidebar/resizer\":{\"title\":\"$:/themes/nico/notebook/ui/Sidebar/resizer\",\"tags\":\"$:/themes/nico/notebook/tags/Sidebar $:/tags/SideBarSegment\",\"text\":\"<$nbresizer />\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/default-sidebar-width\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/default-sidebar-width\",\"text\":\"300px\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/en.js\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/en.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/en.js\\ntype: application/javascript\\nmodule-type: library\\n\\nnotebook-theme-sidebar-resizer locale en\\n\\\\*/\\n\\nmodule.exports = {\\n  pluginname: 'notebook-theme-sidebar-resizer',\\n  warning:\\n    \\\"[notebook-theme-sidebar-resizer]: requires the 'tiddlywiki/tailwindcss-v4' plugin to be installed\\\",\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/zh.js\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/zh.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/zh.js\\ntype: application/javascript\\nmodule-type: library\\n\\nnotebook-theme-sidebar-resizer locale zh\\n\\\\*/\\n\\nmodule.exports = {\\n  pluginname: '侧边栏宽度调整插件',\\n  warning: '需要安装 tailwindcss'\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/style.css\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/style.css\",\"text\":\".oresizer-left {\\n  transition: all ease 0.5s;\\n  left: 0;\\n}\\n.oresizer-right {\\n  right: 0;\\n  transition: all ease 0.5s;\\n}\\n\\n.oresizer {\\n  width: 3px;\\n  opacity: 0.1;\\n  border-radius: 5px;\\n  height: 99%;\\n  position: absolute;\\n  bottom: 4px;\\n  background-color: #f3f4f6;\\n  transition: all ease 0.5s;\\n}\\n\\n.oresizer:hover {\\n  cursor: col-resize;\\n  background-color: #e5e7eb;\\n  opacity: 1;\\n  width: 4px;\\n}\\n\\n.dark .oresizer {\\n  background-color: #6b7280;\\n}\\n.dark .oresizer:hover {\\n  background-color: #9d9fa4;\\n}\\n\",\"type\":\"text/css\",\"tags\":\"$:/tags/Stylesheet\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/widget.js\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/notebook-theme-sidebar-resizer/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nnotebook-theme-sidebar-resizer widget\\n\\\\*/\\n\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\nconst en = require('./locales/en');\\n\\nclass NotebookResizer extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n    this.leftClass = 'oresizer-left';\\n    this.rightClass = 'oresizer-right';\\n    this.VANILLA = 'vanilla';\\n    this.NOTEBOOK = 'notebook';\\n    this.LEFT = 'left';\\n    this.RIGHT = 'right';\\n\\n    // static\\n    // default\\n    this.defaultWidthTiddler =\\n      '$:/themes/tiddlywiki/vanilla/metrics/sidebarwidth';\\n    this.nbWidthTiddler =\\n      '$:/plugins/oeyoews/notebook-theme-sidebar-resizer/default-sidebar-width';\\n    this.themeTiddler = '$:/theme';\\n    this.theme = null;\\n    this.isResizing = false;\\n    this.width = 0;\\n    this.defaultStateTiddler = '$:/state/sidebar';\\n\\n    // notebook\\n    this.notebook = {\\n      name: 'NOTEBOOK',\\n      theme: [\\n        '$:/themes/nico/notebook',\\n        '$:/themes/oeyoews/notebook-plus', // for my custom notebook theme\\n      ],\\n      stateTiddler: '$:/state/notebook-sidebar',\\n      widthTiddler: '$:/themes/nico/notebook/metrics/sidebar-width',\\n      positionTiddler: '$:/themes/nico/notebook/metrics/sidebar-position',\\n    };\\n\\n    // theme: whitespace\\n    this.whitespace = {\\n      name: 'WHITESPACE',\\n      theme: '$:/themes/jd/Whitespace',\\n      positionTiddler: '$:/config/Whitespace/sidebar',\\n      widthTiddler: this.defaultWidthTiddler,\\n    };\\n\\n    this.sidebarLayoutTiddler =\\n      '$:/themes/tiddlywiki/vanilla/options/sidebarlayout';\\n\\n    this.user = {\\n      widthTiddler: '',\\n      statusTiddler: '',\\n      close: '',\\n    };\\n    // listen tiddlers\\n    this.listenTiddlers = [\\n      this.notebook.positionTiddler,\\n      '$:/language',\\n      '$:/layout',\\n      this.themeTiddler,\\n      this.whitespace.positionTiddler,\\n      this.sidebarLayoutTiddler,\\n      this.user.statusTiddler,\\n    ];\\n    this.position = this.RIGHT;\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const createElement = $tw.utils.domMaker;\\n\\n    // this.checker();\\n    this.checkTheme(); // 01: update theme\\n    this.updatePosition(); // 02: update position\\n    // after update this.theme\\n    this.presetForVanillaTheme();\\n\\n    const { position, widthTiddler, close, statusTiddler } = this.attributes;\\n    if (position) {\\n      this.position = position;\\n    }\\n\\n    if (widthTiddler) {\\n      this.user.widthTiddler = widthTiddler;\\n    }\\n    if (close) {\\n      this.user.close = close;\\n    }\\n    if (statusTiddler) {\\n      this.user.statusTiddler = statusTiddler;\\n    }\\n\\n    // NOTE: Tailwindcss class here, if you dont want install the extra tailwindcss dependency, you can rewrite it use general style()\\n    const resizer = createElement('div', {\\n      class: 'oresizer',\\n    });\\n\\n    switch (this.LEFT) {\\n      case this.position:\\n        resizer.classList.add(this.rightClass);\\n        break;\\n      default:\\n        resizer.classList.add(this.leftClass);\\n        break;\\n    }\\n\\n    resizer.addEventListener('pointerdown', (e) => {\\n      e.preventDefault(); // prevent select text on move sidebar width\\n\\n      this.isResizing = true;\\n      document.addEventListener('pointermove', (e) => this.resize(e));\\n      document.addEventListener('pointerup', (e) => this.stopResize(e));\\n    });\\n\\n    parent.insertBefore(resizer, nextSibling);\\n    this.domNodes.push(resizer);\\n  }\\n\\n  checkTheme() {\\n    // NOTE: $:/theme 条目可能会不存在\\n    const theme = this.getText(this.themeTiddler) || this.VANILLA;\\n\\n    switch (theme) {\\n      case this.notebook.theme[0]:\\n      case this.notebook.theme[1]:\\n        this.theme = this.notebook.name;\\n        break;\\n      case this.whitespace.theme:\\n        this.theme = this.whitespace.name;\\n        break;\\n      case this.VANILLA:\\n        this.theme = this.VANILLA;\\n      default:\\n        break;\\n    }\\n  }\\n\\n  presetForVanillaTheme() {\\n    const sidebarLayout = this.getText(this.sidebarLayoutTiddler);\\n\\n    if (this.theme === this.VANILLA) {\\n      if (sidebarLayout !== 'fluid-fixed') {\\n        console.warn('you should set sidebar layout to fluid-fixed');\\n        $tw.wiki.setText(\\n          this.sidebarLayoutTiddler,\\n          'text',\\n          null,\\n          'fluid-fixed',\\n        );\\n      }\\n    }\\n  }\\n\\n  // base theme to get sidebarpositon\\n  updatePosition() {\\n    // NOTE: before vanilla adjust\\n    if (this.getText(this.themeTiddler) === '$:/themes/cdr/captivate') {\\n      this.position = this.LEFT;\\n      return;\\n    }\\n\\n    switch (this.theme) {\\n      case this.whitespace.name:\\n        if (!$tw.wiki.tiddlerExists(this.whitespace.positionTiddler)) {\\n          this.position = this.LEFT;\\n        }\\n        this.position = this.getText(this.whitespace.positionTiddler);\\n        break;\\n\\n      case this.notebook.name:\\n        if (!$tw.wiki.tiddlerExists(this.notebook.positionTiddler)) {\\n          this.position = this.LEFT;\\n        } else {\\n          const { position = this.LEFT } = $tw.wiki.getTiddler(\\n            this.notebook.positionTiddler,\\n          ).fields;\\n\\n          this.position = position;\\n        }\\n\\n        break;\\n      case this.VANILLA:\\n        this.position = this.RIGHT;\\n        break;\\n      default:\\n        break;\\n    }\\n  }\\n\\n  getDefaultSidebarWidth() {\\n    return this.getText(this.nbWidthTiddler).replace('px', '');\\n  }\\n\\n  getText(tiddler) {\\n    return $tw.wiki.getTiddlerText(tiddler);\\n  }\\n\\n  resize(e) {\\n    const clientX = e.clientX;\\n    if (this.isResizing) {\\n      if (this.position === this.LEFT) {\\n        this.width = clientX;\\n      } else {\\n        this.width = window.innerWidth - clientX;\\n      }\\n      if (this.width / window.innerWidth > 0.5) {\\n        return;\\n      }\\n      if (this.width / window.innerWidth < 0.05) {\\n        this.closeSidebar();\\n        this.isResizing = false;\\n        return;\\n      }\\n      this.updateSidebarWidth(this.width);\\n    }\\n  }\\n\\n  stopResize(e) {\\n    this.isResizing = false;\\n    // 监听事件的this 指向全局window, 如果希望指向当前 class 的this , 可以使用箭头函数, 或者手动修改this 指向\\n    document.removeEventListener('pointermove', (e) => this.resize(e));\\n  }\\n\\n  closeSidebar() {\\n    let stateTiddler =\\n      this.theme === this.notebook.name\\n        ? this.notebook.stateTiddler\\n        : this.defaultStateTiddler;\\n    // NOTE: leftbar plugini use show/hide not yes/no\\n    if (this.user.statusTiddler) {\\n      stateTiddler = this.user.statusTiddler;\\n      $tw.wiki.setText(stateTiddler, 'text', null, this.user.close);\\n    } else {\\n      $tw.wiki.setText(stateTiddler, 'text', null, 'no');\\n      this.updateSidebarWidth(this.getDefaultSidebarWidth());\\n    }\\n  }\\n\\n  updateSidebarWidth(width) {\\n    let targetTiddler =\\n      this.theme === this.notebook.name\\n        ? this.notebook.widthTiddler\\n        : this.defaultWidthTiddler;\\n\\n    if (this.user.widthTiddler) {\\n      targetTiddler = this.user.widthTiddler;\\n    }\\n\\n    requestAnimationFrame(() => {\\n      $tw.wiki.setText(\\n        targetTiddler,\\n        null,\\n        null,\\n        `${Number(width).toFixed(0)}px`,\\n        {\\n          suppressTimestamp: true,\\n        },\\n      );\\n    });\\n  }\\n\\n  /*   checker() {\\n    const logger = new $tw.utils.Logger(en.pluginname);\\n    if (!$tw.modules.titles['tailwindcss.min.js']) {\\n      logger.alert(en.warning);\\n    }\\n  }\\n */\\n  shouldRefresh(changedTiddlers, tiddlerList) {\\n    const changedKeys = Object.keys(changedTiddlers);\\n    return tiddlerList.some((tiddler) => changedKeys.includes(tiddler));\\n  }\\n\\n  refresh(changedTiddlers) {\\n    if (this.shouldRefresh(changedTiddlers, this.listenTiddlers)) {\\n      this.refreshSelf();\\n      return true;\\n    }\\n    return false;\\n  }\\n}\\n\\nexports.nbresizer = NotebookResizer;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}