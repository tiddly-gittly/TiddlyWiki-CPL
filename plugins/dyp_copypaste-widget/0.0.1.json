{"title":"$:/plugins/dyp/copypaste-widget","version":"0.0.1","stability":"STABILITY_2_STABLE","name":"copypaste-widget","description":"复制粘贴小工具","author":"dyp","source":"https://github.com/dyp1121054136/dyp-plugins-library","list":"readme usage history","plugin-priority":"","parent-plugin":"","dependents":"","plugin-type":"plugin","core-version":"5.3.7-prerelease","packaged-by":"Gatha on 26th 六月 2025, 16:15:27","type":"application/json","text":"{\"tiddlers\":{\"$:/core/modules/widgets/copypaste.js\":{\"title\":\"$:/core/modules/widgets/copypaste.js\",\"created\":\"20250624024951607\",\"modified\":\"20250624031639363\",\"module-type\":\"widget\",\"tags\":\"复制粘贴库\",\"type\":\"application/javascript\",\"text\":\"/*\\\\  \\ntitle: $:/core/modules/widgets/copypaste.js  \\ntype: application/javascript  \\nmodule-type: widget  \\n  \\n复制粘贴小部件  \\n  \\n\\\\*/  \\n(function(){  \\n  \\n\\\"use strict\\\";  \\n  \\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;  \\n  \\nvar CopyPasteWidget = function(parseTreeNode,options) {  \\n\\tthis.initialise(parseTreeNode,options);  \\n};  \\n  \\n/*  \\n继承基础小部件类  \\n*/  \\nCopyPasteWidget.prototype = new Widget();  \\n  \\n/*  \\n静态数据存储，模仿原始库的CopyPasteJS.data  \\n*/  \\nCopyPasteWidget.data = \\\"\\\";  \\n  \\n/*  \\n将此小部件渲染到DOM中  \\n*/  \\nCopyPasteWidget.prototype.render = function(parent,nextSibling) {  \\n\\tvar self = this;  \\n\\tthis.parentDomNode = parent;  \\n\\tthis.computeAttributes();  \\n\\tthis.execute();  \\n\\t  \\n\\tvar domNode = this.document.createElement(this.tagName || \\\"button\\\");  \\n\\tdomNode.className = this.className || \\\"tc-btn-invisible tc-copypaste-button\\\";  \\n\\t  \\n\\tif(this.buttonText) {  \\n\\t\\tdomNode.appendChild(this.document.createTextNode(this.buttonText));  \\n\\t}  \\n\\t  \\n\\tdomNode.addEventListener(\\\"click\\\", function(event) {  \\n\\t\\tself.handleClickEvent(event);  \\n\\t\\tevent.preventDefault();  \\n\\t\\treturn false;  \\n\\t});  \\n\\t  \\n\\tparent.insertBefore(domNode,nextSibling);  \\n\\tthis.renderChildren(domNode,null);  \\n\\tthis.domNodes.push(domNode);  \\n};  \\n  \\n/*  \\n计算小部件的内部状态  \\n*/  \\nCopyPasteWidget.prototype.execute = function() {  \\n\\tthis.copyOrigin = this.getAttribute(\\\"copy-origin\\\");  \\n\\tthis.copyText = this.getAttribute(\\\"copy-text\\\");  \\n\\tthis.copyTiddler = this.getAttribute(\\\"copy-tiddler\\\"); // 从条目复制  \\n\\tthis.copyField = this.getAttribute(\\\"copy-field\\\", \\\"text\\\"); // 复制的字段  \\n\\tthis.pasteTarget = this.getAttribute(\\\"paste-target\\\");  \\n\\tthis.pasteTiddler = this.getAttribute(\\\"paste-tiddler\\\");  \\n\\tthis.pasteField = this.getAttribute(\\\"paste-field\\\", \\\"text\\\");  \\n\\tthis.cutOrigin = this.getAttribute(\\\"cut-origin\\\");  \\n\\tthis.copyCallback = this.getAttribute(\\\"copy-callback\\\");  \\n\\tthis.pasteCallback = this.getAttribute(\\\"paste-callback\\\");  \\n\\tthis.buttonText = this.getAttribute(\\\"text\\\",\\\"复制\\\");  \\n\\tthis.tagName = this.getAttribute(\\\"tag\\\",\\\"button\\\");  \\n\\tthis.className = this.getAttribute(\\\"class\\\");  \\n\\t  \\n\\tthis.makeChildWidgets();  \\n};  \\n  \\n/*  \\n处理点击事件  \\n*/  \\nCopyPasteWidget.prototype.handleClickEvent = function(event) {  \\n\\tif(this.copyOrigin) {  \\n\\t\\tthis.copyFromOrigin();  \\n\\t}  \\n\\telse if(this.copyText) {  \\n\\t\\tthis.copySpecificText();  \\n\\t}  \\n\\telse if(this.copyTiddler) {  \\n\\t\\tthis.copyFromTiddler(); // 从条目复制  \\n\\t}  \\n\\t  \\n\\tif(this.pasteTarget) {  \\n\\t\\tthis.pasteToTarget();  \\n\\t}  \\n\\t  \\n\\tif(this.pasteTiddler) {  \\n\\t\\tthis.pasteToTiddler();  \\n\\t}  \\n\\t  \\n\\tif(this.cutOrigin) {  \\n\\t\\tthis.cutFromOrigin();  \\n\\t}  \\n};  \\n  \\n/*  \\n从来源元素复制  \\n*/  \\nCopyPasteWidget.prototype.copyFromOrigin = function() {  \\n\\tif(!this.copyOrigin) return;  \\n\\t  \\n\\tvar copyElement = this.document.querySelector(this.copyOrigin);  \\n\\tif(!copyElement) return;  \\n\\t  \\n\\tvar textToCopy;  \\n\\tif(copyElement.tagName && (copyElement.tagName.toLowerCase() === \\\"input\\\" || copyElement.tagName.toLowerCase() === \\\"textarea\\\")) {  \\n\\t\\tCopyPasteWidget.data = copyElement.value;  \\n\\t\\ttextToCopy = copyElement.value;  \\n\\t\\tcopyElement.select();  \\n\\t} else {  \\n\\t\\tCopyPasteWidget.data = copyElement.innerText || copyElement.textContent;  \\n\\t\\ttextToCopy = CopyPasteWidget.data;  \\n\\t\\tthis.selectText(copyElement);  \\n\\t}  \\n\\t  \\n\\tvar succeeded = document.execCommand(\\\"copy\\\");  \\n\\t  \\n\\tif(succeeded) {  \\n\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Succeeded\\\");  \\n\\t} else {  \\n\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Failed\\\");  \\n\\t}  \\n\\t  \\n\\tif(this.copyCallback) {  \\n\\t\\tthis.executeCallback(this.copyCallback);  \\n\\t}  \\n};  \\n  \\n/*  \\n复制指定文本  \\n*/  \\nCopyPasteWidget.prototype.copySpecificText = function() {  \\n\\tif(!this.copyText) return;  \\n\\t  \\n\\tCopyPasteWidget.data = this.copyText;  \\n\\t  \\n\\tvar element = this.document.createElement('input');  \\n\\telement.value = this.copyText;  \\n\\tthis.document.body.appendChild(element);  \\n\\telement.select();  \\n\\tvar succeeded = document.execCommand('copy');  \\n\\tthis.document.body.removeChild(element);  \\n\\t  \\n\\tif(succeeded) {  \\n\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Succeeded\\\");  \\n\\t} else {  \\n\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Failed\\\");  \\n\\t}  \\n\\t  \\n\\tif(this.copyCallback) {  \\n\\t\\tthis.executeCallback(this.copyCallback);  \\n\\t}  \\n};  \\n  \\n/*  \\n从条目复制内容  \\n*/  \\nCopyPasteWidget.prototype.copyFromTiddler = function() {  \\n\\tif(!this.copyTiddler) return;  \\n\\t  \\n\\tvar textToCopy = \\\"\\\";  \\n\\tvar tiddler = this.wiki.getTiddler(this.copyTiddler);  \\n\\t  \\n\\tif(tiddler) {  \\n\\t\\tif(this.copyField === \\\"text\\\") {  \\n\\t\\t\\t// 获取条目的文本内容  \\n\\t\\t\\ttextToCopy = this.wiki.getTiddlerText(this.copyTiddler);  \\n\\t\\t} else {  \\n\\t\\t\\t// 获取指定字段的内容  \\n\\t\\t\\tif(tiddler.hasField(this.copyField)) {  \\n\\t\\t\\t\\ttextToCopy = tiddler.getFieldString(this.copyField);  \\n\\t\\t\\t}  \\n\\t\\t}  \\n\\t} else {  \\n\\t\\t// 如果条目不存在，根据字段类型返回默认值  \\n\\t\\tif(this.copyField === \\\"title\\\") {  \\n\\t\\t\\ttextToCopy = this.copyTiddler;  \\n\\t\\t}  \\n\\t}  \\n\\t  \\n\\tif(textToCopy) {  \\n\\t\\tCopyPasteWidget.data = textToCopy;  \\n\\t\\t  \\n\\t\\t// 创建临时元素进行复制  \\n\\t\\tvar element = this.document.createElement('input');  \\n\\t\\telement.value = textToCopy;  \\n\\t\\tthis.document.body.appendChild(element);  \\n\\t\\telement.select();  \\n\\t\\tvar succeeded = document.execCommand('copy');  \\n\\t\\tthis.document.body.removeChild(element);  \\n\\t\\t  \\n\\t\\t// 显示通知  \\n\\t\\tif(succeeded) {  \\n\\t\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Succeeded\\\");  \\n\\t\\t} else {  \\n\\t\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Failed\\\");  \\n\\t\\t}  \\n\\t\\t  \\n\\t\\t// 执行回调  \\n\\t\\tif(this.copyCallback) {  \\n\\t\\t\\tthis.executeCallback(this.copyCallback);  \\n\\t\\t}  \\n\\t}  \\n};  \\n  \\n/*  \\n粘贴到目标元素  \\n*/  \\nCopyPasteWidget.prototype.pasteToTarget = function() {  \\n\\tif(!this.pasteTarget) return;  \\n\\t  \\n\\tvar pasteElement = this.document.querySelector(this.pasteTarget);  \\n\\tif(!pasteElement) return;  \\n\\t  \\n\\tpasteElement.focus();  \\n\\t  \\n\\tvar pasteSuccessfully = document.execCommand(\\\"paste\\\");  \\n\\t  \\n\\tif(!pasteSuccessfully) {  \\n\\t\\tpasteElement.value = CopyPasteWidget.data;  \\n\\t}  \\n\\t  \\n\\tif(this.pasteCallback) {  \\n\\t\\tthis.executeCallback(this.pasteCallback);  \\n\\t}  \\n};  \\n  \\n/*  \\n粘贴到条目 - 只使用存储的数据  \\n*/  \\nCopyPasteWidget.prototype.pasteToTiddler = function() {  \\n\\tif(!this.pasteTiddler) return;  \\n\\t  \\n\\t// 只使用存储的数据，不使用剪贴板API  \\n\\tif(CopyPasteWidget.data) {  \\n\\t\\tthis.wiki.setText(this.pasteTiddler, this.pasteField, null, CopyPasteWidget.data);  \\n\\t\\tif(this.pasteCallback) {  \\n\\t\\t\\tthis.executeCallback(this.pasteCallback);  \\n\\t\\t}  \\n\\t}  \\n};  \\n  \\n/*  \\n从来源元素剪切  \\n*/  \\nCopyPasteWidget.prototype.cutFromOrigin = function() {  \\n\\tif(!this.cutOrigin) return;  \\n\\t  \\n\\tvar cutElement = this.document.querySelector(this.cutOrigin);  \\n\\tif(!cutElement) return;  \\n\\t  \\n\\tif(cutElement.tagName && (cutElement.tagName.toLowerCase() === \\\"input\\\" || cutElement.tagName.toLowerCase() === \\\"textarea\\\")) {  \\n\\t\\tCopyPasteWidget.data = cutElement.value;  \\n\\t\\tcutElement.select();  \\n\\t\\tvar succeeded = document.execCommand(\\\"cut\\\");  \\n\\t\\t  \\n\\t\\tif(succeeded) {  \\n\\t\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Succeeded\\\");  \\n\\t\\t} else {  \\n\\t\\t\\t$tw.notifier.display(\\\"$:/language/Notifications/CopiedToClipboard/Failed\\\");  \\n\\t\\t}  \\n\\t}  \\n};  \\n  \\n/*  \\n选择元素中的文本  \\n*/  \\nCopyPasteWidget.prototype.selectText = function(element) {  \\n\\tvar range, selection;  \\n\\t  \\n\\tif (this.document.body.createTextRange) {  \\n\\t\\trange = this.document.body.createTextRange();  \\n\\t\\trange.moveToElementText(element);  \\n\\t\\trange.select();  \\n\\t} else if (window.getSelection) {  \\n\\t\\tselection = window.getSelection();  \\n\\t\\trange = this.document.createRange();  \\n\\t\\trange.selectNodeContents(element);  \\n\\t\\tselection.removeAllRanges();  \\n\\t\\tselection.addRange(range);  \\n\\t}  \\n};  \\n  \\n/*  \\n执行回调函数  \\n*/  \\nCopyPasteWidget.prototype.executeCallback = function(callback) {  \\n\\tif(callback) {  \\n\\t\\tthis.invokeActionString(callback, this);  \\n\\t}  \\n};  \\n  \\n/*  \\n刷新小部件  \\n*/  \\nCopyPasteWidget.prototype.refresh = function(changedTiddlers) {  \\n\\tvar changedAttributes = this.computeAttributes();  \\n\\tif(changedAttributes[\\\"copy-origin\\\"] || changedAttributes[\\\"copy-text\\\"] ||   \\n\\t   changedAttributes[\\\"copy-tiddler\\\"] || changedAttributes[\\\"copy-field\\\"] ||  \\n\\t   changedAttributes[\\\"paste-target\\\"] || changedAttributes[\\\"paste-tiddler\\\"] ||   \\n\\t   changedAttributes[\\\"paste-field\\\"] || changedAttributes[\\\"cut-origin\\\"] ||   \\n\\t   changedAttributes[\\\"copy-callback\\\"] || changedAttributes[\\\"paste-callback\\\"] ||  \\n\\t   changedAttributes.text || changedAttributes.tag || changedAttributes[\\\"class\\\"]) {  \\n\\t\\tthis.refreshSelf();  \\n\\t\\treturn true;  \\n\\t}  \\n\\treturn this.refreshChildren(changedTiddlers);  \\n};  \\n  \\nexports.copypaste = CopyPasteWidget;  \\n  \\n})();\"},\"$:/plugins/dyp/copypaste-widget/history\":{\"title\":\"$:/plugins/dyp/copypaste-widget/history\",\"created\":\"20250626081442457\",\"modified\":\"20250626081448536\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\"},\"$:/plugins/dyp/copypaste-widget/readme\":{\"title\":\"$:/plugins/dyp/copypaste-widget/readme\",\"created\":\"20250626081413604\",\"modified\":\"20250626081427488\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"; 复制粘贴小工具\"},\"$:/plugins/dyp/copypaste-widget/usage\":{\"title\":\"$:/plugins/dyp/copypaste-widget/usage\",\"created\":\"20250626081432663\",\"modified\":\"20250626081439283\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\"},\"AnotherTiddler\":{\"title\":\"AnotherTiddler\",\"created\":\"20250624032420087\",\"modified\":\"20250624033347607\",\"tags\":\"复制粘贴库\",\"text\":\"是吗修改一下\"},\"MyTestTiddler\":{\"title\":\"MyTestTiddler\",\"caption\":\"这是caption\",\"created\":\"20250624032406617\",\"modified\":\"20250624033402645\",\"tags\":\"复制粘贴库\",\"text\":\"可以的修改内容\"},\"复制粘贴库\":{\"title\":\"复制粘贴库\",\"created\":\"20250624030721138\",\"modified\":\"20250624030737104\",\"tags\":\"导出\",\"type\":\"\",\"text\":\"<<filter-pill \\\"[tag[复制粘贴库]][[复制粘贴库]]\\\" 复制粘贴库>>\"},\"复制粘贴库测试\":{\"title\":\"复制粘贴库测试\",\"created\":\"20250624025040652\",\"modified\":\"20250624032853134\",\"tags\":\"复制粘贴库\",\"text\":\"<style>    \\n.test-section {    \\n  border: 1px solid #ccc;    \\n  padding: 15px;    \\n  margin: 10px 0;    \\n  border-radius: 5px;    \\n}    \\n.test-section h5 {    \\n  margin-top: 0;    \\n  color: #333;    \\n  border-bottom: 1px solid #eee;    \\n  padding-bottom: 5px;    \\n}    \\n.input-group {    \\n  margin: 10px 0;    \\n}    \\n.input-group label {    \\n  display: block;    \\n  font-weight: bold;    \\n  margin-bottom: 5px;    \\n}    \\n.button-group {    \\n  margin: 10px 0;    \\n}    \\n</style>    \\n    \\n<!-- 第一部分：源数据设置 -->    \\n<div class=\\\"test-section\\\">    \\n<h5>📝 源数据设置</h5>    \\n<div class=\\\"input-group\\\">    \\n<label>MyTestTiddler 主要内容：</label>    \\n<$edit-text tiddler=\\\"MyTestTiddler\\\" field=\\\"text\\\" default=\\\"这是MyTestTiddler的内容\\\" tag=\\\"input\\\" class=\\\"tc-edit-texteditor\\\"/>    \\n</div>    \\n<div class=\\\"input-group\\\">    \\n<label>MyTestTiddler caption字段：</label>    \\n<$edit-text tiddler=\\\"MyTestTiddler\\\" field=\\\"caption\\\" default=\\\"测试标题\\\" tag=\\\"input\\\" class=\\\"tc-edit-texteditor\\\"/>    \\n</div>    \\n</div>    \\n    \\n<!-- 第二部分：复制功能测试 -->    \\n<div class=\\\"test-section\\\">    \\n<h5>📋 复制功能测试</h5>    \\n<div class=\\\"button-group\\\">    \\n<$copypaste copy-tiddler=\\\"MyTestTiddler\\\" text=\\\"复制条目内容\\\"/> ← 复制上面的主要内容    \\n</div>    \\n<div class=\\\"button-group\\\">    \\n<$copypaste copy-tiddler=\\\"MyTestTiddler\\\" copy-field=\\\"caption\\\" text=\\\"复制caption字段\\\"/> ← 复制上面的caption字段    \\n</div>    \\n<div class=\\\"input-group\\\">    \\n<label>自定义复制文本：</label>    \\n<input type=\\\"text\\\" id=\\\"custom-copy-text\\\" value=\\\"Hello World!\\\" style=\\\"width: 200px; padding: 5px;\\\"/>    \\n<$copypaste copy-origin=\\\"#custom-copy-text\\\" text=\\\"复制自定义文本\\\"/> ← 复制左边输入框的内容    \\n</div>    \\n</div>    \\n    \\n<!-- 第三部分：验证复制结果 -->    \\n<div class=\\\"test-section\\\">    \\n<h5>🔍 验证复制结果</h5>    \\n<div class=\\\"input-group\\\">    \\n<label>测试输入框（手动粘贴 Ctrl+V 查看复制的内容）：</label>    \\n<input type=\\\"text\\\" id=\\\"test-input\\\" placeholder=\\\"在这里粘贴测试复制的内容\\\" style=\\\"width: 100%; padding: 5px;\\\"/>    \\n</div>    \\n</div>    \\n    \\n<!-- 第四部分：粘贴功能测试 -->    \\n<div class=\\\"test-section\\\">    \\n<h5>📥 粘贴功能测试</h5>    \\n<div class=\\\"input-group\\\">    \\n<label>目标条目编辑框：</label>    \\n<$edit-text tiddler=\\\"AnotherTiddler\\\" field=\\\"text\\\" placeholder=\\\"粘贴内容将显示在这里\\\" tag=\\\"input\\\" class=\\\"tc-edit-texteditor\\\"/>    \\n</div>    \\n<div class=\\\"button-group\\\">    \\n<$copypaste paste-tiddler=\\\"AnotherTiddler\\\" text=\\\"粘贴到条目\\\"/> ← 将复制的内容粘贴到上面的输入框    \\n</div>    \\n</div>    \\n    \\n<!-- 第五部分：结果显示 -->    \\n<div class=\\\"test-section\\\">    \\n<h5>📊 结果显示</h5>    \\n<div class=\\\"input-group\\\">    \\n<label>MyTestTiddler 当前内容：</label>    \\n<div style=\\\"background: #f5f5f5; padding: 10px; border-radius: 3px;\\\">    \\n<$transclude tiddler=\\\"MyTestTiddler\\\"/>    \\n</div>    \\n</div>    \\n<div class=\\\"input-group\\\">    \\n<label>AnotherTiddler 当前内容：</label>    \\n<div style=\\\"background: #f5f5f5; padding: 10px; border-radius: 3px;\\\">    \\n<$transclude tiddler=\\\"AnotherTiddler\\\"/>    \\n</div>    \\n</div>    \\n</div>\"},\"复制粘贴库源代码\":{\"title\":\"复制粘贴库源代码\",\"created\":\"20250624033037406\",\"modified\":\"20250624033102986\",\"tags\":\"复制粘贴库\",\"text\":\"https://github.com/assisfery/CopyPasteJS\\n\\nhttps://assisfery.github.io/CopyPasteJS/index.html\"}}}"}