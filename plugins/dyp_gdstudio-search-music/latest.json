{"title":"$:/plugins/dyp/gdstudio-search-music","version":"0.1.4","stability":"STABILITY_2_STABLE","name":"gdstudio-search-music","description":"GD音乐库在线听歌","author":"dyp","source":"https://github.com/dyp1121054136/dyp-plugins-library","list":"readme usage history","plugin-priority":"","parent-plugin":"","dependents":"","plugin-type":"plugin","core-version":"5.3.7-prerelease","packaged-by":"Gatha on 29th 五月 2025, 14:31:49","type":"application/json","text":"{\"tiddlers\":{\"$:/core/images/downloadSvg\":{\"title\":\"$:/core/images/downloadSvg\",\"code-body\":\"yes\",\"created\":\"20250621061743485\",\"modified\":\"20250621062637007\",\"tags\":\"$:/tags/Image 图标 gdstudio 音乐播放器 音乐下载\",\"text\":\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"bi bi-download\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\\\"/>\\n  <path d=\\\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\\\"/>\\n</svg>\"},\"$:/core/images/gdstudio-pause-music\":{\"title\":\"$:/core/images/gdstudio-pause-music\",\"created\":\"20250530120850506\",\"modified\":\"20250530122903467\",\"tags\":\"$:/tags/Image 图标 gdstudio 音乐播放器\",\"text\":\"<svg class=\\\"bi bi-pause-circle\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\\\"/>\\n  <path d=\\\"M5 6.25a1.25 1.25 0 1 1 2.5 0v3.5a1.25 1.25 0 1 1-2.5 0zm3.5 0a1.25 1.25 0 1 1 2.5 0v3.5a1.25 1.25 0 1 1-2.5 0z\\\"/>\\n</svg>\\n\"},\"$:/core/images/gdstudio-play-music\":{\"title\":\"$:/core/images/gdstudio-play-music\",\"created\":\"20250528132634777\",\"modified\":\"20250528132842039\",\"tags\":\"$:/tags/Image 图标 gdstudio\",\"text\":\"\\\\parameters (size:\\\"22pt\\\")\\n\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=<<size>> height=<<size>> class=\\\"bi bi-play-circle tc-image-button\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\\\"/>\\n  <path d=\\\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\\\"/>\\n</svg>\"},\"$:/core/images/gdstudio-search-music\":{\"title\":\"$:/core/images/gdstudio-search-music\",\"created\":\"20250529061556039\",\"modified\":\"20250529061627223\",\"tags\":\"$:/tags/Image 图标 gdstudio\",\"text\":\"\\\\parameters (size:\\\"22pt\\\")\\n\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=<<size>> height=<<size>> class=\\\"bi bi-music-note-list tc-image-button\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M12 13c0 1.105-1.12 2-2.5 2S7 14.105 7 13s1.12-2 2.5-2 2.5.895 2.5 2z\\\"/>\\n  <path fill-rule=\\\"evenodd\\\" d=\\\"M12 3v10h-1V3h1z\\\"/>\\n  <path d=\\\"M11 2.82a1 1 0 0 1 .804-.98l3-.6A1 1 0 0 1 16 2.22V4l-5 1V2.82z\\\"/>\\n  <path fill-rule=\\\"evenodd\\\" d=\\\"M0 11.5a.5.5 0 0 1 .5-.5H4a.5.5 0 0 1 0 1H.5a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 .5 7H8a.5.5 0 0 1 0 1H.5a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 .5 3H8a.5.5 0 0 1 0 1H.5a.5.5 0 0 1-.5-.5z\\\"/>\\n</svg>\"},\"$:/core/images/mute\":{\"title\":\"$:/core/images/mute\",\"created\":\"20250530121009186\",\"modified\":\"20250530121015151\",\"tags\":\"$:/tags/Image 图标 gdstudio 音乐播放器\",\"text\":\"\\\\parameters (size:\\\"22pt\\\")\\n\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=<<size>> height=<<size>> class=\\\"bi bi-play-circle tc-image-button\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\\\"/>\\n  <path d=\\\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\\\"/>\\n</svg>\"},\"$:/core/images/volume-up\":{\"title\":\"$:/core/images/volume-up\",\"created\":\"20250530121034670\",\"modified\":\"20250530121037668\",\"tags\":\"$:/tags/Image 图标 gdstudio 音乐播放器\",\"text\":\"\\\\parameters (size:\\\"22pt\\\")\\n\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=<<size>> height=<<size>> class=\\\"bi bi-play-circle tc-image-button\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\\\"/>\\n  <path d=\\\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\\\"/>\\n</svg>\"},\"$:/core/images/volume\":{\"title\":\"$:/core/images/volume\",\"code-body\":\"yes\",\"created\":\"20250530121020121\",\"modified\":\"20250530121024901\",\"tags\":\"$:/tags/Image 图标 gdstudio 音乐播放器\",\"text\":\"<svg class=\\\"bi-volume\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M9 4a.5.5 0 0 0-.812-.39L5.825 5.5H3.5A.5.5 0 0 0 3 6v4a.5.5 0 0 0 .5.5h2.325l2.363 1.89A.5.5 0 0 0 9 12zM6.312 6.39 8 5.04v5.92L6.312 9.61A.5.5 0 0 0 6 9.5H4v-3h2a.5.5 0 0 0 .312-.11M12.025 8a4.5 4.5 0 0 1-1.318 3.182L10 10.475A3.5 3.5 0 0 0 11.025 8 3.5 3.5 0 0 0 10 5.525l.707-.707A4.5 4.5 0 0 1 12.025 8\\\"/>\\n</svg>\\n\"},\"$:/core/modules/widgets/gdstudio-audio.js\":{\"title\":\"$:/core/modules/widgets/gdstudio-audio.js\",\"created\":\"20250530105155960\",\"modified\":\"20250530130618574\",\"module-type\":\"widget\",\"tags\":\"gdstudio 音乐播放器\",\"type\":\"application/javascript\",\"text\":\"/*\\\\\\ntitle: $:/core/modules/widgets/gdstudio-audio.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nGDStudio Audio Widget - 迷你音频播放器\\n\\\\*/\\n\\n\\\"use strict\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nvar GDStudioAudioWidget = function(parseTreeNode,options) {\\n    this.initialise(parseTreeNode,options);\\n};\\n\\nGDStudioAudioWidget.prototype = new Widget();\\n\\nGDStudioAudioWidget.prototype.execute = function() {\\n    this.coverUrl = this.getAttribute(\\\"cover-url\\\", \\\"\\\");\\n    this.musicUrl = this.getAttribute(\\\"music-url\\\", \\\"\\\");\\n    this.songName = this.getAttribute(\\\"song-name\\\", \\\"未知歌曲\\\");\\n    this.artist = this.getAttribute(\\\"artist\\\", \\\"未知歌手\\\");\\n    this.playerId = this.getAttribute(\\\"id\\\", \\\"\\\"); // 添加这行\\n    \\n    this.makeChildWidgets();\\n};\\n\\nGDStudioAudioWidget.prototype.createDefaultCover = function() {\\n    return \\\"data:image/svg+xml;charset=utf-8,\\\" + encodeURIComponent(\\n        '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"100\\\" height=\\\"100\\\">' +\\n        '<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#f0f0f0\\\"/>' +\\n        '</svg>'\\n    );\\n};\\n\\nGDStudioAudioWidget.prototype.render = function(parent,nextSibling) {\\n    var self = this;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n    \\n    var playerDiv = this.document.createElement(\\\"div\\\");\\n    playerDiv.className = \\\"gdstudio-mini-player\\\";\\n    if (this.playerId) {  \\n        playerDiv.id = this.playerId; // 添加这行  \\n    }\\n    \\n    var coverContainer = this.document.createElement(\\\"div\\\");\\n    coverContainer.className = \\\"gdstudio-mini-cover\\\";\\n    \\n    var coverImg = this.document.createElement(\\\"img\\\");\\n    coverImg.src = this.coverUrl || this.createDefaultCover();\\n    coverImg.className = \\\"gdstudio-mini-cover-img\\\";\\n    \\n    var playButton = this.document.createElement(\\\"button\\\");\\n    playButton.className = \\\"gdstudio-mini-play-btn\\\";\\n    playButton.innerHTML = \\\"▶\\\";\\n    \\n    coverContainer.appendChild(coverImg);\\n    coverContainer.appendChild(playButton);\\n    \\n    var infoSection = this.document.createElement(\\\"div\\\");\\n    infoSection.className = \\\"gdstudio-mini-info\\\";\\n    \\n    var musicName = this.document.createElement(\\\"div\\\");\\n    musicName.className = \\\"gdstudio-music-name\\\";\\n    musicName.textContent = this.songName + \\\" - \\\" + this.artist;\\n    \\n    var controls = this.document.createElement(\\\"div\\\");\\n    controls.className = \\\"gdstudio-mini-controls\\\";\\n    \\n    var timeDisplay = this.document.createElement(\\\"span\\\");\\n    timeDisplay.className = \\\"gdstudio-time\\\";\\n    timeDisplay.textContent = \\\"0:00/0:00\\\";\\n    \\n    var progressBar = this.document.createElement(\\\"div\\\");\\n    progressBar.className = \\\"gdstudio-progress\\\";\\n    \\n    var progressFill = this.document.createElement(\\\"div\\\");\\n    progressFill.className = \\\"gdstudio-progress-fill\\\";\\n    progressBar.appendChild(progressFill);\\n\\n// 在 controls 区域添加下载按钮  \\n// 下载的 SVG 代码，从条目text获取  \\nconst downloadSvg = this.wiki.getTiddlerText(\\\"$:/core/images/downloadSvg\\\");  \\nvar downloadBtn = this.document.createElement(\\\"button\\\");  \\ndownloadBtn.className = \\\"tc-btn-invisible gdstudio-download-btn\\\";  \\ndownloadBtn.innerHTML = downloadSvg;  \\ndownloadBtn.title = \\\"下载音频\\\";\\n\\n// 下载按钮事件处理  \\ndownloadBtn.addEventListener(\\\"click\\\", function() {  \\n    if (!self.musicUrl) return;  \\n      \\n    // 显示下载状态  \\n    downloadBtn.innerHTML = \\\"⏳\\\";  \\n    downloadBtn.disabled = true;  \\n      \\n    // 使用 fetch 获取音频数据  \\n    fetch(self.musicUrl)  \\n        .then(function(response) {  \\n            if (!response.ok) {  \\n                throw new Error('网络请求失败');  \\n            }  \\n            return response.blob();  \\n        })  \\n        .then(function(blob) {  \\n            // 创建下载链接  \\n            var link = self.document.createElement(\\\"a\\\");  \\n            var url = URL.createObjectURL(blob);  \\n            link.setAttribute(\\\"href\\\", url);  \\n              \\n            // 设置下载文件名 - 修改这里  \\n            var filename = (self.songName || \\\"未知歌曲\\\") + \\\"-\\\" + (self.artist || \\\"未知歌手\\\") + \\\".mp3\\\";  \\n            link.setAttribute(\\\"download\\\", filename);  \\n              \\n            // 触发下载  \\n            self.document.body.appendChild(link);  \\n            link.click();  \\n            self.document.body.removeChild(link);  \\n              \\n            // 清理 URL 对象  \\n            URL.revokeObjectURL(url);  \\n              \\n            // 恢复按钮状态  \\n            downloadBtn.innerHTML = downloadSvg;  \\n            downloadBtn.disabled = false;  \\n        })  \\n        .catch(function(error) {  \\n            console.error('下载失败:', error);  \\n            alert('下载失败，请检查网络连接或音频链接');  \\n              \\n            // 恢复按钮状态  \\n            downloadBtn.innerHTML = downloadSvg;  \\n            downloadBtn.disabled = false;  \\n        });  \\n});\\n// 添加点击事件监听器，允许用户手动调节播放位置\\nprogressBar.addEventListener(\\\"click\\\", function(e) {  \\n    if (audio.duration) {  \\n        var rect = progressBar.getBoundingClientRect();  \\n        var clickX = e.clientX - rect.left;  \\n        var percentage = clickX / rect.width;  \\n        var newTime = percentage * audio.duration;  \\n        audio.currentTime = newTime;  \\n    }  \\n});\\n    \\n    // 合并的音量控制按钮\\n// 音量的 SVG 代码，从条目text获取\\nconst volumeSvg = this.wiki.getTiddlerText(\\\"$:/core/images/volume\\\");\\n    var volumeBtn = this.document.createElement(\\\"button\\\");\\n    volumeBtn.className = \\\"gdstudio-volume-btn\\\";\\n    volumeBtn.innerHTML = volumeSvg;\\n    \\n    // 音量面板\\n    var volumePanel = this.document.createElement(\\\"div\\\");\\n    volumePanel.className = \\\"gdstudio-volume-panel\\\";\\n    \\n    var volumeSlider = this.document.createElement(\\\"input\\\");\\n    volumeSlider.type = \\\"range\\\";\\n    volumeSlider.min = \\\"0\\\";\\n    volumeSlider.max = \\\"100\\\";\\n    volumeSlider.value = \\\"50\\\";\\n    volumeSlider.className = \\\"gdstudio-volume-slider\\\";\\n    volumePanel.appendChild(volumeSlider);\\n    \\n    controls.appendChild(timeDisplay);\\n    controls.appendChild(progressBar);\\n    controls.appendChild(volumeBtn);\\ncontrols.appendChild(downloadBtn); // 新增下载按钮  \\n    controls.appendChild(volumePanel);\\n    \\n    infoSection.appendChild(musicName);\\n    infoSection.appendChild(controls);\\n    \\n    var audio = this.document.createElement(\\\"audio\\\");\\n    if(this.musicUrl) {\\n        audio.src = this.musicUrl;\\n    }\\n    audio.preload = \\\"metadata\\\";\\n    audio.volume = 0.5; // 设置初始音量\\n    \\n    playerDiv.appendChild(coverContainer);\\n    playerDiv.appendChild(infoSection);\\n    playerDiv.appendChild(audio);\\n    \\n    // 事件处理\\n    var isPlaying = false;\\n    var volumeVisible = false;\\n    var isMuted = false;\\n    var previousVolume = 0.5;\\n    \\n    // 播放控制\\n// 暂停播放的 SVG 代码，从条目text获取\\nconst pauseSvg = this.wiki.getTiddlerText(\\\"$:/core/images/gdstudio-pause-music\\\");\\n    playButton.addEventListener(\\\"click\\\", function() {\\n        if (!audio.src) return;\\n        if (isPlaying) {\\n            audio.pause();\\n            playButton.innerHTML = \\\"▶\\\";\\n            coverImg.classList.remove(\\\"spinning\\\");\\n        } else {\\n            audio.play();\\n            playButton.innerHTML = pauseSvg;\\n            coverImg.classList.add(\\\"spinning\\\");\\n        }\\n        isPlaying = !isPlaying;\\n    });\\n    \\n    // 合并的音量按钮控制\\n    volumeBtn.addEventListener(\\\"click\\\", function(e) {\\n        e.preventDefault();\\n        e.stopPropagation();\\n        \\n        if (!volumeVisible) {\\n            // 第一次点击：显示音量滑块\\n            volumeVisible = true;\\n            volumePanel.classList.add(\\\"visible\\\");\\n        } else {\\n            // 音量滑块已显示时：切换静音状态\\n            if (isMuted) {\\n                // 取消静音\\n                audio.volume = previousVolume;\\n                volumeSlider.value = previousVolume * 100;\\n                volumeBtn.innerHTML = volumeSvg;\\n                isMuted = false;\\n            } else {\\n                // 静音\\n                previousVolume = audio.volume;\\n                audio.volume = 0;\\n                volumeSlider.value = 0;\\n                volumeBtn.innerHTML = \\\"🔇\\\";\\n                isMuted = true;\\n            }\\n        }\\n    });\\n    \\n    // 音量滑块控制\\n    volumeSlider.addEventListener(\\\"input\\\", function() {\\n        var volume = this.value / 100;\\n        audio.volume = volume;\\n        \\n        if (volume === 0) {\\n            volumeBtn.innerHTML = \\\"🔇\\\";\\n            isMuted = true;\\n        } else {\\n            volumeBtn.innerHTML = volumeSvg;\\n            isMuted = false;\\n            if (volume > 0) {\\n                previousVolume = volume;\\n            }\\n        }\\n    });\\n    \\n    // 点击外部关闭音量面板\\n    this.document.addEventListener(\\\"click\\\", function(e) {\\n        if (!volumeBtn.contains(e.target) && !volumePanel.contains(e.target)) {\\n            volumeVisible = false;\\n            volumePanel.classList.remove(\\\"visible\\\");\\n        }\\n    });\\n    \\n    // 时间更新\\n    audio.addEventListener(\\\"timeupdate\\\", function() {\\n        if (audio.duration) {\\n            var progress = (audio.currentTime / audio.duration) * 100;\\n            progressFill.style.width = progress + \\\"%\\\";\\n            \\n            var currentMin = Math.floor(audio.currentTime / 60);\\n            var currentSec = Math.floor(audio.currentTime % 60);\\n            var totalMin = Math.floor(audio.duration / 60);\\n            var totalSec = Math.floor(audio.duration % 60);\\n            \\n            timeDisplay.textContent = currentMin + \\\":\\\" + (currentSec < 10 ? \\\"0\\\" : \\\"\\\") + currentSec + \\n                                    \\\"/\\\" + totalMin + \\\":\\\" + (totalSec < 10 ? \\\"0\\\" : \\\"\\\") + totalSec;\\n        }\\n    });\\n    \\n    audio.addEventListener(\\\"ended\\\", function() {\\n        playButton.innerHTML = \\\"▶\\\";\\n        coverImg.classList.remove(\\\"spinning\\\");\\n        isPlaying = false;\\n    });\\n    \\n    parent.insertBefore(playerDiv, nextSibling);\\n    this.domNodes.push(playerDiv);\\n};\\n\\nGDStudioAudioWidget.prototype.refresh = function(changedTiddlers) {\\n    var changedAttributes = this.computeAttributes();\\n    if (Object.keys(changedAttributes).length > 0) {\\n        this.refreshSelf();\\n        return true;\\n    }\\n    return this.refreshChildren(changedTiddlers);\\n};\\n\\nexports[\\\"gdstudio-audio\\\"] = GDStudioAudioWidget;\\n\"},\"$:/core/modules/widgets/lyric-display.js\":{\"title\":\"$:/core/modules/widgets/lyric-display.js\",\"created\":\"20250529133501913\",\"modified\":\"20250529144400784\",\"module-type\":\"widget\",\"tags\":\"动态歌词 gdstudio\",\"type\":\"application/javascript\",\"text\":\"/*\\\\    \\ntitle: $:/core/modules/widgets/lyric-display.js    \\ntype: application/javascript    \\nmodule-type: widget    \\n    \\n歌词显示widget    \\n\\\\*/    \\n\\\"use strict\\\";    \\n    \\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;    \\n    \\nvar LyricDisplayWidget = function(parseTreeNode,options) {    \\n    this.initialise(parseTreeNode,options);    \\n};    \\n    \\nLyricDisplayWidget.prototype = new Widget();    \\n    \\nLyricDisplayWidget.prototype.render = function(parent,nextSibling) {    \\n    this.parentDomNode = parent;    \\n    this.computeAttributes();    \\n    this.execute();    \\n    this.domNode = this.document.createElement(\\\"div\\\");    \\n    this.domNode.className = this.getSingleLineMode() ? \\\"lyric-display-container single-line-mode\\\" : \\\"lyric-display-container\\\";    \\n    this.domNode.style.overflow = \\\"hidden\\\"; \\n\\n    // 在这里添加高度设置  \\n    if (!this.getSingleLineMode()) {    \\n        var estimatedHeight = this.showLines * 40; // 40px 是默认行高    \\n        this.domNode.style.height = estimatedHeight + \\\"px\\\";    \\n    }  \\n        \\n    // 创建滚动容器    \\n    this.scrollContainer = this.document.createElement(\\\"div\\\");    \\n    this.scrollContainer.style.transition = \\\"transform 0.3s ease\\\";    \\n    this.scrollContainer.style.transform = \\\"translateY(0px)\\\";    \\n    this.domNode.appendChild(this.scrollContainer);    \\n        \\n    parent.insertBefore(this.domNode,nextSibling);    \\n    this.domNodes.push(this.domNode);    \\n        \\n    this.updateDisplay();    \\n};    \\n    \\nLyricDisplayWidget.prototype.execute = function() {    \\n    this.lyricTiddler = this.getAttribute(\\\"lyric-tiddler\\\");    \\n    this.showLines = parseInt(this.getAttribute(\\\"show-lines\\\", \\\"3\\\"));    \\n    this.singleLineMode = this.getAttribute(\\\"single-line-mode\\\", \\\"no\\\");    \\n    this.currentLineState = this.getAttribute(\\\"current-line-state\\\", \\\"$:/state/gdstudio-api/current-lyric-line\\\");    \\n    this.parsedLyrics = this.parseLyrics();    \\n    this.lastCurrentLineIndex = -1;    \\n};    \\n  \\nLyricDisplayWidget.prototype.getSingleLineMode = function() {  \\n    return this.singleLineMode === \\\"yes\\\" || this.singleLineMode === \\\"true\\\";  \\n};  \\n  \\nLyricDisplayWidget.prototype.isSmallScreen = function() {  \\n    return window.innerWidth <= 767;  \\n};  \\n  \\nLyricDisplayWidget.prototype.shouldShowOnlyCurrentLine = function() {  \\n    return this.getSingleLineMode() || this.isSmallScreen();  \\n};  \\n    \\nLyricDisplayWidget.prototype.getLineHeight = function() {    \\n    // 如果已经有歌词行，直接使用第一行的高度    \\n    if (this.scrollContainer.children.length > 0) {    \\n        return this.scrollContainer.children[0].offsetHeight;    \\n    }    \\n        \\n    // 否则创建临时元素    \\n    var tempElement = this.document.createElement(\\\"div\\\");    \\n    tempElement.className = \\\"lyric-line\\\";    \\n    tempElement.style.visibility = \\\"hidden\\\";    \\n    tempElement.style.position = \\\"absolute\\\";    \\n    tempElement.style.top = \\\"-9999px\\\";    \\n    tempElement.textContent = \\\"测试文本\\\";    \\n        \\n    this.domNode.appendChild(tempElement);    \\n    var actualHeight = tempElement.offsetHeight;    \\n    this.domNode.removeChild(tempElement);    \\n        \\n    return actualHeight || 40;    \\n};    \\n    \\nLyricDisplayWidget.prototype.parseLyrics = function() {    \\n    if (!this.lyricTiddler) return [];    \\n    var lyricText = this.wiki.getTiddlerText(this.lyricTiddler, \\\"\\\");    \\n    return lyricText.split('\\\\n')    \\n        .map(function(line) {    \\n            var match = line.match(/^\\\\[([0-9]{2}):([0-9]{2})\\\\.([0-9]{1,9})\\\\]\\\\s*(.*)$/);    \\n            if (!match) return null;    \\n            var timeInSeconds = parseInt(match[1]) * 60 + parseInt(match[2]) + parseInt(match[3]) / Math.pow(10, match[3].length);    \\n            return {    \\n                time: timeInSeconds,    \\n                text: match[4]    \\n            };    \\n        })    \\n        .filter(Boolean)    \\n        .sort(function(a, b) {    \\n            return a.time - b.time;    \\n        });    \\n};    \\n    \\nLyricDisplayWidget.prototype.updateDisplay = function() {    \\n    if (!this.domNode || !this.scrollContainer) return;    \\n        \\n    if (this.parsedLyrics.length === 0) {    \\n        this.scrollContainer.innerHTML = \\\"\\\";    \\n        this.scrollContainer.textContent = \\\"无歌词\\\";    \\n        return;    \\n    }    \\n        \\n    var currentLineIndex = parseInt(this.wiki.getTiddlerText(this.currentLineState, \\\"-1\\\"));    \\n        \\n    if (this.shouldShowOnlyCurrentLine()) {  \\n        // 单行模式：重新渲染当前行  \\n        if (currentLineIndex !== this.lastCurrentLineIndex) {  \\n            this.renderCurrentLineOnly(currentLineIndex);  \\n        }  \\n    } else {  \\n        // 多行模式：原有逻辑  \\n        if (this.scrollContainer.children.length === 0) {    \\n            this.renderAllLyrics();    \\n        }    \\n            \\n        if (!this.lineHeight) {    \\n            this.lineHeight = this.getLineHeight();    \\n        }    \\n            \\n        this.updateHighlight(currentLineIndex);    \\n            \\n        if (currentLineIndex >= 0 && currentLineIndex !== this.lastCurrentLineIndex) {    \\n            this.scrollToLine(currentLineIndex);    \\n        }    \\n    }  \\n        \\n    this.lastCurrentLineIndex = currentLineIndex;    \\n};    \\n  \\nLyricDisplayWidget.prototype.renderCurrentLineOnly = function(currentLineIndex) {  \\n    this.scrollContainer.innerHTML = \\\"\\\";  \\n    if (currentLineIndex >= 0 && currentLineIndex < this.parsedLyrics.length) {  \\n        var lineDiv = this.document.createElement(\\\"div\\\");  \\n        lineDiv.className = \\\"lyric-line lyric-current\\\";  \\n        lineDiv.textContent = this.parsedLyrics[currentLineIndex].text;  \\n        this.scrollContainer.appendChild(lineDiv);  \\n    }  \\n};  \\n    \\nLyricDisplayWidget.prototype.renderAllLyrics = function() {    \\n    this.scrollContainer.innerHTML = \\\"\\\";    \\n    for (var i = 0; i < this.parsedLyrics.length; i++) {    \\n        var lineDiv = this.document.createElement(\\\"div\\\");    \\n        lineDiv.className = \\\"lyric-line\\\";    \\n        lineDiv.textContent = this.parsedLyrics[i].text;    \\n        lineDiv.setAttribute(\\\"data-line-index\\\", i);    \\n        this.scrollContainer.appendChild(lineDiv);    \\n    }    \\n};    \\n    \\nLyricDisplayWidget.prototype.updateHighlight = function(currentLineIndex) {    \\n    var lines = this.scrollContainer.querySelectorAll('.lyric-line');    \\n    for (var i = 0; i < lines.length; i++) {    \\n        var line = lines[i];    \\n        if (i === currentLineIndex) {    \\n            line.className = \\\"lyric-line lyric-current\\\";    \\n        } else {    \\n            line.className = \\\"lyric-line\\\";    \\n        }    \\n    }    \\n};    \\n    \\nLyricDisplayWidget.prototype.scrollToLine = function(lineIndex) {    \\n    if (lineIndex < 0) return;    \\n        \\n    if (!this.lineHeight) {    \\n        this.lineHeight = this.getLineHeight();    \\n    }    \\n        \\n    var centerOffset = Math.floor(this.showLines / 2);    \\n    var targetOffset = (lineIndex - centerOffset) * this.lineHeight;    \\n        \\n    var maxOffset = Math.max(0, (this.parsedLyrics.length - this.showLines) * this.lineHeight);    \\n    targetOffset = Math.max(0, Math.min(targetOffset, maxOffset));    \\n        \\n    this.scrollContainer.style.transform = \\\"translateY(-\\\" + targetOffset + \\\"px)\\\";    \\n};    \\n    \\nLyricDisplayWidget.prototype.refresh = function(changedTiddlers) {    \\n    var changedAttributes = this.computeAttributes();    \\n        \\n    if (changedAttributes[\\\"lyric-tiddler\\\"] || changedTiddlers[this.lyricTiddler] ||   \\n        changedAttributes[\\\"single-line-mode\\\"]) {    \\n        this.refreshSelf();    \\n        return true;    \\n    }    \\n        \\n    if (changedTiddlers[this.currentLineState]) {    \\n        var currentLineIndex = parseInt(this.wiki.getTiddlerText(this.currentLineState, \\\"-1\\\"));    \\n        if (currentLineIndex !== this.lastCurrentLineIndex) {    \\n            this.updateDisplay();    \\n        }    \\n        return true;    \\n    }    \\n        \\n    return false;    \\n};    \\n    \\nexports[\\\"lyric-display\\\"] = LyricDisplayWidget;\\n\"},\"$:/core/modules/widgets/lyric-sync.js\":{\"title\":\"$:/core/modules/widgets/lyric-sync.js\",\"created\":\"20250529133321082\",\"modified\":\"20250529144406776\",\"module-type\":\"widget\",\"tags\":\"动态歌词 gdstudio\",\"type\":\"application/javascript\",\"text\":\"/*\\\\  \\ntitle: $:/core/modules/widgets/lyric-sync.js  \\ntype: application/javascript  \\nmodule-type: widget  \\n  \\n歌词同步widget  \\n\\\\*/  \\n  \\n\\\"use strict\\\";  \\n  \\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;  \\n  \\nvar LyricSyncWidget = function(parseTreeNode,options) {  \\n    this.initialise(parseTreeNode,options);  \\n};  \\n  \\nLyricSyncWidget.prototype = new Widget();  \\n  \\nLyricSyncWidget.prototype.render = function(parent,nextSibling) {  \\n    this.parentDomNode = parent;  \\n    this.computeAttributes();  \\n    this.execute();  \\n      \\n    var domNode = this.document.createElement(\\\"div\\\");  \\n    domNode.className = \\\"lyric-sync-container\\\";  \\n      \\n    this.renderChildren(domNode,null);  \\n      \\n    parent.insertBefore(domNode,nextSibling);  \\n    this.domNodes.push(domNode);  \\n      \\n    this.initLyricSync();  \\n};  \\n  \\nLyricSyncWidget.prototype.execute = function() {  \\n    this.lyricTiddler = this.getAttribute(\\\"lyric-tiddler\\\");  \\n    this.audioSelector = this.getAttribute(\\\"audio-selector\\\");  \\n    this.currentLineState = this.getAttribute(\\\"current-line-state\\\", \\\"$:/state/gdstudio-api/current-lyric-line\\\");  \\n    this.makeChildWidgets();  \\n};  \\n  \\nLyricSyncWidget.prototype.initLyricSync = function() {  \\n    this.parsedLyrics = this.parseLyrics();  \\n    this.lastLineIndex = -1;  \\n    this.bindToAudioElement();  \\n};  \\n  \\nLyricSyncWidget.prototype.bindToAudioElement = function() {  \\n    var self = this;  \\n    if (this.audioEventsBound || !$tw.browser) return;  \\n      \\n    this.timeUpdateHandler = function(event) {  \\n        var targetElement = event.target;  \\n          \\n        // 确保事件目标是audio元素  \\n        if (!targetElement.tagName || targetElement.tagName.toLowerCase() !== 'audio') {  \\n            return;  \\n        }  \\n          \\n        // 如果指定了音频选择器，检查audio元素是否在指定容器内  \\n        if (self.audioSelector) {  \\n            var containerElement = targetElement.closest(self.audioSelector);  \\n            if (!containerElement) {  \\n                return; // audio元素不在指定容器内  \\n            }  \\n        }  \\n          \\n        self.updateCurrentLyric(targetElement.currentTime);  \\n    };  \\n      \\n    document.addEventListener('timeupdate', this.timeUpdateHandler, {passive: true, capture: true});  \\n    document.addEventListener('seeked', this.timeUpdateHandler, {passive: true, capture: true});  \\n    this.audioEventsBound = true;  \\n};  \\n  \\nLyricSyncWidget.prototype.parseLyrics = function() {  \\n    if (!this.lyricTiddler) return [];  \\n      \\n    var lyricText = this.wiki.getTiddlerText(this.lyricTiddler, \\\"\\\");  \\n    return lyricText.split('\\\\n')  \\n        .map(function(line) {  \\n            var match = line.match(/^\\\\[([0-9]{2}):([0-9]{2})\\\\.([0-9]{1,9})\\\\]\\\\s*(.*)$/);  \\n            if (!match) return null;  \\n              \\n            var timeInSeconds = parseInt(match[1]) * 60 + parseInt(match[2]) + parseInt(match[3]) / Math.pow(10, match[3].length);  \\n            return {  \\n                time: timeInSeconds,  \\n                text: match[4]  \\n            };  \\n        })  \\n        .filter(Boolean)  \\n        .sort(function(a, b) { return a.time - b.time; });  \\n};  \\n  \\nLyricSyncWidget.prototype.updateCurrentLyric = function(currentTime) {  \\n    var currentLineIndex = -1;  \\n      \\n    for (var i = 0; i < this.parsedLyrics.length; i++) {  \\n        if (this.parsedLyrics[i].time <= currentTime) {  \\n            currentLineIndex = i;  \\n        } else {  \\n            break;  \\n        }  \\n    }  \\n      \\n    if (this.lastLineIndex !== currentLineIndex) {  \\n        this.lastLineIndex = currentLineIndex;  \\n        this.wiki.addTiddler({  \\n            title: this.currentLineState,  \\n            text: currentLineIndex.toString()  \\n        });  \\n    }  \\n};  \\n  \\nLyricSyncWidget.prototype.removeFromDocument = function() {  \\n    if (this.audioEventsBound && $tw.browser) {  \\n        document.removeEventListener('timeupdate', this.timeUpdateHandler, {passive: true, capture: true});  \\n        document.removeEventListener('seeked', this.timeUpdateHandler, {passive: true, capture: true});  \\n        this.audioEventsBound = false;  \\n        this.timeUpdateHandler = null;  \\n    }  \\n    Widget.prototype.removeFromDocument.call(this);  \\n};  \\n  \\nLyricSyncWidget.prototype.refresh = function(changedTiddlers) {  \\n    var changedAttributes = this.computeAttributes();  \\n    if (changedAttributes[\\\"lyric-tiddler\\\"] || changedTiddlers[this.lyricTiddler] ||  \\n        changedAttributes[\\\"audio-selector\\\"]) {  \\n        this.refreshSelf();  \\n        return true;  \\n    }  \\n    return this.refreshChildren(changedTiddlers);  \\n};  \\n  \\nexports[\\\"lyric-sync\\\"] = LyricSyncWidget;\\n\"},\"$:/core/ui/Buttons/gdstudio-search-music\":{\"title\":\"$:/core/ui/Buttons/gdstudio-search-music\",\"caption\":\"{{$:/core/images/gdstudio-search-music}} 打开搜索音乐\",\"created\":\"20250529061651198\",\"description\":\"打开搜索音乐\",\"modified\":\"20250529062624832\",\"tags\":\"按钮 $:/tags/PageControls gdstudio\",\"text\":\"\\\\whitespace trim\\n<$button tooltip=\\\"打开搜索音乐\\\" class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/gdstudio-search-music|22px}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=打开搜索音乐/>\\n</span>\\n</$list>\\n\\n<$action-navigate $to=\\\"gdstudio-搜索音乐\\\"/>\\n\\n</$button>\\n\"},\"$:/core/ui/Buttons/open-close-music-player\":{\"title\":\"$:/core/ui/Buttons/open-close-music-player\",\"created\":\"20250703013630660\",\"modified\":\"20250703014028120\",\"tags\":\"gdstudio 音乐 按钮\",\"text\":\"<$button class=\\\"tc-btn-invisible gdstudio-button\\\" tooltip=\\\"开启/关闭页面音乐播放器\\\">\\n<$action-listops $tiddler=\\\"调用自定义播放器-固定页面\\\" $tags=\\\"+[toggle[$:/tags/PageTemplate]]\\\"/>\\n\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">{{$:/core/images/gdstudio-play-music}}</$list><$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n开启/关闭页面音乐播放器\\n</span></$list>\\n\\n</$button>\"},\"$:/lyrics/同归-云之泣\":{\"title\":\"$:/lyrics/同归-云之泣\",\"br\":\"0\",\"created\":\"20250701095823457\",\"modified\":\"20250701100402392\",\"tags\":\"本地音乐\",\"text\":\"[00:00.00]同归 - 云の泣\\n[00:10.19]词：小鱼萝莉\\n[00:20.41]曲：小旭\\n[00:30.60]风沙的暗涌日月的更替\\n[00:36.64]昨夜一壶酒\\n[00:38.82]留不住明朝他的来去\\n[00:43.99]呼啸的孤寂黑暗中独行\\n[00:50.10]哪怕剩一口气三分真情\\n[00:53.42]覆了黄沙也要寻你\\n[00:57.07]踏上这一程路 艰难险阻\\n[01:00.71]凡俗岂能领悟\\n[01:03.65]但问生亦何欢 死亦何苦\\n[01:07.51]岁月只有沉默\\n[01:10.89]相逢相知本无意\\n[01:14.18]乱世最难相许\\n[01:17.22]恩仇千里迢递刀光血影\\n[01:20.96]谁吹大漠旧曲\\n[01:23.59]再见是危墙将倾以天下济\\n[01:27.76]往事何须再提\\n[01:30.65]待到你我老去 焚了残躯\\n[01:34.50]扬灰在青史里\\n[02:05.20]呼啸的孤寂黑暗中独行\\n[02:11.15]哪怕剩一口气三分真情\\n[02:14.68]覆了黄沙也要寻你\\n[02:18.04]踏上这一程路 艰难险阻\\n[02:21.83]凡俗岂能领悟\\n[02:24.86]但问生亦何欢 死亦何苦\\n[02:28.55]岁月只有沉默\\n[02:31.87]相逢相知本无意\\n[02:35.19]乱世最难相许\\n[02:38.31]恩仇千里迢递刀光血影\\n[02:42.12]谁吹大漠旧曲\\n[02:44.66]再见是危墙将倾 以天下济\\n[02:48.71]往事何须再提\\n[02:51.78]待到你我老去 焚了残躯\\n[02:55.70]扬灰在青史里\\n[02:59.02]相逢相知本无意\\n[03:02.41]乱世最难相许\\n[03:05.31]恩仇千里迢递刀光血影\\n[03:09.22]谁吹大漠旧曲\\n[03:11.71]再见是危墙将倾 以天下济\\n[03:15.84]满城风雨何惧\\n[03:18.83]待到你我老去 焚了残躯\\n[03:22.68]同归在青史里\"},\"$:/plugins/dyp/gdstudio-search-music/history\":{\"title\":\"$:/plugins/dyp/gdstudio-search-music/history\",\"created\":\"20250529063124818\",\"modified\":\"20250529063130800\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"; v.0.1.4 2025-07-04\\n\\n# 支持一键关闭页面音乐播放器；\\n# 优化按钮样式；\\n\\n; v.0.1.3 2025-07-03\\n\\n# 动态歌词根据行数自动设置歌词容器高度；\\n# 支持添加本地mp3和图片(实测只在单条目html中生效，github pages和tiddlyhost均无效)，动态歌词需要创建新条目并引用条目内容，音乐播放器 `id` 和 动态歌词 `audio-selector` 需要一致；\\n\\n; v.0.1.2 2025-07-01\\n\\n# 优化了 [[$:/core/modules/widgets/gdstudio-audio.js]] 和 [[$:/core/modules/widgets/lyric-sync.js]]，音乐播放器和歌词同步添加统一id，避免冲突；\\n\\n; v.0.1.1 2025-06-21\\n\\n# 音乐播放器界面新增下载按钮；\\n\\n; v.0.1.0 2025-06-12\\n\\n# 音乐播放器可切换精简模式和完整模式 [[调用自定义播放器-精简模式]]\\n\\n; v.0.0.9 2025-06-11\\n\\n# 优化了歌词解析procedure，只保留带时间戳的行，避免音乐播放器获取不了动态歌词；\\n\\n; v.0.0.8 2025-06-10\\n\\n# 移除官方酷狗音乐api，已不需要通过此方式来获取歌曲hash；\\n# 如果gdstudio-api未能成功获取歌曲url则自动使用洛雪音乐api；\\n\\n; v.0.0.7 2025-06-09\\n\\n# 新增官方酷狗音乐api，并通过添加cors绕过权限，经测试酷狗vip歌曲仍然无法播放；\\n# 新增洛雪音乐源，并通过添加cors绕过权限，解决vip歌曲无法播放的问题；\\n# 经测试，需要打开网址 https://cors-anywhere.herokuapp.com/corsdemo 点击确认 “Request temporary access to the demo server”，才可使用cors服务。\\n\\n; v.0.0.6 2025-06-02\\n\\n# 动态歌词显示方式新增单行模式和多行模式自由设置 [[动态歌词单行模式与多行模式]]；\\n# 音乐播放器audio组件和动态歌词容器位置使用类名.gdstudio-audio-position设置，仅作用于 [[调用自定义播放器-固定页面]]，固定显示在屏幕上，在普通条目中正常显示在条目中；\\n# 手机端下隐藏音乐播放进度条 [[自定义音乐播放器补充样式css]]。\\n\\n; v.0.0.5 2025-05-31\\n\\n# 精简audio widget，禁音和音量控制按钮合为一个；\\n# 设置自定义按钮，svg从条目text获取。\\n\\n; v.0.0.4 2025-05-30\\n\\n音乐播放器audio组件完全重构，新增滚动唱片式海报动画，新增widget：\\n\\n[[$:/core/modules/widgets/gdstudio-audio.js]]\\n\\n; v.0.0.3 2025-05-30\\n\\n# 优化动态歌词滚动动画，平滑过渡；\\n# 优化歌词排版，过长则省略，不换行；\\n# 优化音乐播放器歌曲歌手名排版，过长则省略，不换行；\\n# 手机端歌词显示在页面顶部，只显示一行。\\n\\n; v.0.0.2 2025-05-29\\n\\n新增动态歌词功能，主要依赖两个新增 `widget`：\\n\\n[[$:/core/modules/widgets/lyric-sync.js]]\\n\\n[[$:/core/modules/widgets/lyric-display.js]]\\n\\n```tw\\n<!-- 添加歌词同步功能 -->\\n<$lyric-sync lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" audio-selector=\\\"audio\\\">\\n<$lyric-display lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" show-lines=\\\"5\\\"/>\\n</$lyric-sync>\\n```\\n\"},\"$:/plugins/dyp/gdstudio-search-music/readme\":{\"title\":\"$:/plugins/dyp/gdstudio-search-music/readme\",\"created\":\"20250529062820740\",\"modified\":\"20250529063110806\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"; GD音乐库在线听歌\\n\\n使用gdstudio-api搭建的音乐播放器，可以搜索歌曲并播放，支持动态歌词。\\n\\ngdstudio-api源网站：\\n\\nhttps://music.gdstudio.xyz\\n\\nhttps://space.bilibili.com/13715770\\n\\n目前稳定维护的音乐源有：网易云、QQ、酷我、Tidal、Qobuz\\n\\n测试音乐源，不保证可用：喜马FM、咪咕、酷狗、油管、Spotify\\n\\n; 洛雪音乐api\\n\\n作为备用，支持网易云、酷我、酷狗\\n\\n洛雪音乐api公众号：洛雪音乐\\n\\n洛雪音乐api官网：https://www.lxmusic.cc\\n\"},\"$:/plugins/dyp/gdstudio-search-music/usage\":{\"title\":\"$:/plugins/dyp/gdstudio-search-music/usage\",\"created\":\"20250529063114438\",\"modified\":\"20250529063122309\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\"},\"$:/state/audio-player-mode\":{\"title\":\"$:/state/audio-player-mode\",\"created\":\"20250612030742337\",\"modified\":\"20250612033615190\",\"text\":\"auto\"},\"$:/state/gdstudio-api/br\":{\"title\":\"$:/state/gdstudio-api/br\",\"created\":\"20250528080251005\",\"modified\":\"20250529015414616\",\"tags\":\"音乐 gdstudio\",\"text\":\"320\"},\"$:/state/gdstudio-api/cover-url\":{\"title\":\"$:/state/gdstudio-api/cover-url\",\"created\":\"20250528095524556\",\"modified\":\"20250529022458101\",\"tags\":\"音乐 gdstudio\"},\"$:/state/gdstudio-api/keyword\":{\"title\":\"$:/state/gdstudio-api/keyword\",\"created\":\"20250528061315602\",\"modified\":\"20250529022451889\",\"tags\":\"音乐 gdstudio\",\"text\":\"晚枫歌\\n\"},\"$:/state/gdstudio-api/lyric-id\":{\"title\":\"$:/state/gdstudio-api/lyric-id\",\"created\":\"20250528064732829\",\"modified\":\"20250529022457476\",\"tags\":\"音乐 gdstudio\"},\"$:/state/gdstudio-api/lyric-url\":{\"title\":\"$:/state/gdstudio-api/lyric-url\",\"created\":\"20250528095539358\",\"modified\":\"20250529022458505\",\"tags\":\"音乐 gdstudio\",\"text\":\"\"},\"$:/state/gdstudio-api/lyric\":{\"title\":\"$:/state/gdstudio-api/lyric\",\"created\":\"20250528104251340\",\"modified\":\"20250529022459240\",\"tags\":\"音乐 gdstudio\"},\"$:/state/gdstudio-api/music-source\":{\"title\":\"$:/state/gdstudio-api/music-source\",\"created\":\"20250528061251293\",\"modified\":\"20250610063931733\",\"tags\":\"音乐 gdstudio\",\"text\":\"kugou\"},\"$:/state/gdstudio-api/music-url\":{\"title\":\"$:/state/gdstudio-api/music-url\",\"created\":\"20250528075656127\",\"modified\":\"20250529022458525\",\"tags\":\"音乐 gdstudio\"},\"$:/state/gdstudio-api/page-length\":{\"title\":\"$:/state/gdstudio-api/page-length\",\"created\":\"20250528061342958\",\"modified\":\"20250528132403658\",\"tags\":\"音乐 gdstudio\",\"text\":\"10\"},\"$:/state/gdstudio-api/page-num\":{\"title\":\"$:/state/gdstudio-api/page-num\",\"created\":\"20250528061358178\",\"modified\":\"20250528132403659\",\"tags\":\"音乐 gdstudio\",\"text\":\"1\"},\"$:/state/gdstudio-api/pic-id\":{\"title\":\"$:/state/gdstudio-api/pic-id\",\"created\":\"20250528064732827\",\"modified\":\"20250529022457475\",\"tags\":\"音乐 gdstudio\"},\"$:/state/gdstudio-api/pic-size\":{\"title\":\"$:/state/gdstudio-api/pic-size\",\"created\":\"20250612013643058\",\"modified\":\"20250612013648133\",\"tags\":\"音乐 gdstudio\",\"text\":\"300\"},\"$:/state/gdstudio-api/searchResults\":{\"title\":\"$:/state/gdstudio-api/searchResults\",\"created\":\"20250528055947566\",\"modified\":\"20250529022453665\",\"tags\":\"音乐 gdstudio\"},\"$:/state/gdstudio-api/size\":{\"title\":\"$:/state/gdstudio-api/size\",\"created\":\"20250528080336537\",\"modified\":\"20250528132403664\",\"tags\":\"音乐 gdstudio\",\"text\":\"300\"},\"$:/state/gdstudio-api/track-id\":{\"title\":\"$:/state/gdstudio-api/track-id\",\"created\":\"20250528064732824\",\"modified\":\"20250529022457473\",\"tags\":\"音乐 gdstudio\"},\"$:/state/kugou-api/hash\":{\"title\":\"$:/state/kugou-api/hash\",\"created\":\"20250609032859658\",\"modified\":\"20250609033445840\",\"tags\":\"酷狗音乐api\",\"text\":\"\"},\"$:/state/kugou-api/music-url\":{\"title\":\"$:/state/kugou-api/music-url\",\"created\":\"20250607090407146\",\"modified\":\"20250609033952575\",\"tags\":\"酷狗音乐api\",\"text\":\"\"},\"$:/state/kugou-api/searchResults\":{\"title\":\"$:/state/kugou-api/searchResults\",\"created\":\"20250607093255164\",\"modified\":\"20250609033444372\",\"tags\":\"酷狗音乐api\"},\"$:/state/lxmusic/music-url\":{\"title\":\"$:/state/lxmusic/music-url\",\"created\":\"20250530093243625\",\"modified\":\"20250609073530209\",\"tags\":\"洛雪音乐\",\"type\":\"\",\"text\":\"\"},\"cors-proxy.js\":{\"title\":\"cors-proxy.js\",\"created\":\"20250609023933331\",\"modified\":\"20250609033943910\",\"module-type\":\"startup\",\"tags\":\"酷狗音乐api\",\"type\":\"application/javascript\",\"text\":\"/*\\\\            \\ntitle: cors-proxy.js    \\ntype: application/javascript    \\nmodule-type: startup    \\n            \\nTiddlyWiki选择性CORS代理插件    \\n\\\\*/            \\n            \\n\\\"use strict\\\";            \\n            \\nexports.name = \\\"cors-proxy\\\";            \\nexports.platforms = [\\\"browser\\\"];            \\nexports.after = [\\\"rootwidget\\\"];            \\nexports.synchronous = true;            \\n    \\nexports.startup = function() {            \\n    // 拦截HTTP请求函数            \\n    var originalHttpRequest = $tw.utils.httpRequest;            \\n                \\n    $tw.utils.httpRequest = function(options) {            \\n        var url = options.url;          \\n          \\n        // 检查是否需要使用CORS代理        \\n        var shouldUseCors = options.useCorsProxy === \\\"yes\\\" ||         \\n                           (url && url.includes(\\\"mobilecdn.kugou.com\\\")) ||      \\n                           (url && url.includes(\\\"m.kugou.com\\\")) ||    \\n                           (url && url.includes(\\\"88.lxmusic.xn--fiqs8s\\\"));    \\n          \\n        if (shouldUseCors && url && !url.startsWith(\\\"https://cors-anywhere.herokuapp.com/\\\")) {  \\n            // 添加缓存检查逻辑  \\n            var cacheKey = \\\"api_\\\" + btoa(url);  \\n            var cached = localStorage.getItem(cacheKey);  \\n            if (cached) {  \\n                try {  \\n                    var cacheData = JSON.parse(cached);  \\n                    if (Date.now() - cacheData.time < 300000) { // 5分钟缓存  \\n                        setTimeout(function() {  \\n                            options.callback(null, cacheData.data);  \\n                        }, 0);  \\n                        return;  \\n                    }  \\n                } catch(e) {  \\n                    // 缓存数据损坏，删除  \\n                    localStorage.removeItem(cacheKey);  \\n                }  \\n            }  \\n              \\n            // 使用原生XMLHttpRequest直接请求，绕过TiddlyWiki框架    \\n            var xhr = new XMLHttpRequest();    \\n            var corsUrl = \\\"https://cors-anywhere.herokuapp.com/\\\" + url;    \\n                \\n            xhr.open(options.type || \\\"GET\\\", corsUrl, true);    \\n                \\n            // 设置基本的响应处理    \\n            xhr.onload = xhr.onerror = function() {    \\n                if (xhr.status >= 200 && xhr.status < 300) {    \\n                    // 保存到缓存  \\n                    var cacheData = {  \\n                        data: xhr.responseText,  \\n                        time: Date.now()  \\n                    };  \\n                    localStorage.setItem(cacheKey, JSON.stringify(cacheData));  \\n                      \\n                    // 成功响应    \\n                    options.callback(null, xhr.responseText, xhr);    \\n                } else {    \\n                    // 错误响应    \\n                    options.callback(\\\"HTTP Error: \\\" + xhr.status, xhr.responseText, xhr);    \\n                }    \\n            };    \\n                \\n            // 处理POST请求的数据    \\n            if (options.data && /^POST/i.test(options.type)) {    \\n                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');    \\n            }    \\n                \\n            xhr.send(options.data || null);    \\n            return xhr;    \\n        }            \\n                    \\n        return originalHttpRequest.call(this, options);            \\n    };        \\n            \\n    // HttpClient拦截保持原有逻辑    \\n    if ($tw.utils.HttpClient) {        \\n        var originalInitiateHttpRequest = $tw.utils.HttpClient.prototype.initiateHttpRequest;        \\n                \\n        $tw.utils.HttpClient.prototype.initiateHttpRequest = function(options) {        \\n            var url = options.url;        \\n                    \\n            var shouldUseCors = options.useCorsProxy === \\\"yes\\\" ||         \\n                               (url && url.includes(\\\"mobilecdn.kugou.com\\\")) ||      \\n                               (url && url.includes(\\\"m.kugou.com\\\")) ||    \\n                               (url && url.includes(\\\"88.lxmusic.xn--fiqs8s\\\"));    \\n                    \\n            if (shouldUseCors && url && !url.startsWith(\\\"https://cors-anywhere.herokuapp.com/\\\")) {        \\n                options.url = \\\"https://cors-anywhere.herokuapp.com/\\\" + url;        \\n            }        \\n                    \\n            return originalInitiateHttpRequest.call(this, options);        \\n        };        \\n    }        \\n};\\n\"},\"fetch请求音乐api定义procedure\":{\"title\":\"fetch请求音乐api定义procedure\",\"created\":\"20250528055416875\",\"modified\":\"20250528132403684\",\"tags\":\"音乐 $:/tags/Macro gdstudio\",\"text\":\"\\\\procedure gdstudio-search-output()  \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/searchResults\\\" text=<<data>>/>  \\n\\\\end\\n\\n\\\\procedure gdstudio-search-http-get()  \\n\\t<$action-sendmessage  \\n\\t\\t$message=\\\"tm-http-request\\\"  \\n\\t\\turl=\\\"https://music-api.gdstudio.xyz/api.php\\\"  \\n\\t\\tquery-types=\\\"search\\\"  \\n\\t\\tquery-source={{$:/state/gdstudio-api/music-source}}  \\n\\t\\tquery-name={{$:/state/gdstudio-api/keyword}}  \\n\\t\\tquery-count={{$:/state/gdstudio-api/page-length}}  \\n\\t\\tquery-pages={{$:/state/gdstudio-api/page-num}}  \\n\\t\\tbind-status=status  \\n\\t\\tbind-progress=progress  \\n\\t\\tmethod=\\\"GET\\\"  \\n\\t\\toncompletion=<<gdstudio-search-output>>  \\n\\t/>  \\n\\\\end\\n\\n音乐源：<$select tiddler=\\\"$:/state/gdstudio-api/music-source\\\" default=\\\"netease\\\">  \\n<option value=\\\"netease\\\">网易云音乐 (netease)</option>  \\n<option value=\\\"tencent\\\">QQ音乐 (tencent)</option>  \\n<option value=\\\"tidal\\\">Tidal</option>  \\n<option value=\\\"spotify\\\">Spotify</option>  \\n<option value=\\\"ytmusic\\\">YouTube Music</option>  \\n<option value=\\\"qobuz\\\">Qobuz</option>  \\n<option value=\\\"joox\\\">JOOX</option>  \\n<option value=\\\"deezer\\\">Deezer</option>  \\n<option value=\\\"migu\\\">咪咕音乐 (migu)</option>  \\n<option value=\\\"kugou\\\">酷狗音乐 (kugou)</option>  \\n<option value=\\\"kuwo\\\">酷我音乐 (kuwo)</option>  \\n<option value=\\\"ximalaya\\\">喜马拉雅 (ximalaya)</option>  \\n</$select>\\n<br/>\\n关键词：<$edit-text tiddler=\\\"$:/state/gdstudio-api/keyword\\\" default=\\\"夜梦记\\\" tag=\\\"input\\\"/>\\n<br/>\\n每页数量：<$edit-text tiddler=\\\"$:/state/gdstudio-api/page-length\\\" default=\\\"20\\\" tag=\\\"input\\\"/>\\n<br/>\\n页码：<$edit-text tiddler=\\\"$:/state/gdstudio-api/page-num\\\" default=\\\"1\\\" tag=\\\"input\\\"/>\\n<br/>\\n<$button actions=<<gdstudio-search-http-get>>>搜索</$button>\"},\"fetch请求音乐api搜索\":{\"title\":\"fetch请求音乐api搜索\",\"created\":\"20250528061421728\",\"modified\":\"20250528132403686\",\"tags\":\"音乐 gdstudio\",\"text\":\"音乐源：<$select tiddler=\\\"$:/state/gdstudio-api/music-source\\\" default=\\\"netease\\\">  \\n<option value=\\\"netease\\\">网易云音乐 (netease)</option>  \\n<option value=\\\"tencent\\\">QQ音乐 (tencent)</option>  \\n<option value=\\\"tidal\\\">Tidal</option>  \\n<option value=\\\"spotify\\\">Spotify</option>  \\n<option value=\\\"ytmusic\\\">YouTube Music</option>  \\n<option value=\\\"qobuz\\\">Qobuz</option>  \\n<option value=\\\"joox\\\">JOOX</option>  \\n<option value=\\\"deezer\\\">Deezer</option>  \\n<option value=\\\"migu\\\">咪咕音乐 (migu)</option>  \\n<option value=\\\"kugou\\\">酷狗音乐 (kugou)</option>  \\n<option value=\\\"kuwo\\\">酷我音乐 (kuwo)</option>  \\n<option value=\\\"ximalaya\\\">喜马拉雅 (ximalaya)</option>  \\n</$select>\\n<br/>\\n关键词：<$edit-text tiddler=\\\"$:/state/gdstudio-api/keyword\\\" default=\\\"夜梦记\\\" tag=\\\"input\\\"/>\\n<br/>\\n每页数量：<$edit-text tiddler=\\\"$:/state/gdstudio-api/page-length\\\" default=\\\"20\\\" tag=\\\"input\\\"/>\\n<br/>\\n页码：<$edit-text tiddler=\\\"$:/state/gdstudio-api/page-num\\\" default=\\\"1\\\" tag=\\\"input\\\"/>\\n<br/>\\n<$button actions=<<gdstudio-search-http-get>>>搜索</$button>\"},\"gdstudio-audio下载按钮样式css\":{\"title\":\"gdstudio-audio下载按钮样式css\",\"created\":\"20250621061449543\",\"modified\":\"20250621062756226\",\"tags\":\"gdstudio 样式 $:/tags/Stylesheet 音乐下载\",\"text\":\".gdstudio-download-btn {\\n  -webkit-tap-highlight-color: transparent;\\n  box-shadow: none;\\n\\n  width: 24px;\\n  height: 24px;\\n  border-radius: 12px;\\n  background: transparent;\\n  border: none;\\n  font-size: 12px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #bbb;\\n  transition: all 0.2s ease;\\n  transform: translateX(-10px); /* 向左移动 */\\n}\\n\\n.gdstudio-download-btn svg {\\n  width: 14px;\\n  height: 14px;\\n}\\n\\n.gdstudio-download-btn:hover {\\n    background: #bbb;\\n    color: #ffffff;\\n}\"},\"gdstudio-audio样式css\":{\"title\":\"gdstudio-audio样式css\",\"created\":\"20250529043602077\",\"modified\":\"20250529062050246\",\"tags\":\"gdstudio 样式 $:/tags/Stylesheet\",\"text\":\"/* 以下样式是针对 WebKit/Blink 浏览器（Chrome, Safari, Edge）的默认控件美化 */\\n/* 注意：这些选择器在不同浏览器或版本中可能有细微差异，且不保证完全兼容所有浏览器 */\\n\\n.gdstudio-audio audio::-webkit-media-controls-panel {\\n    background-color: <<colour tiddler-background>>; /* 控件面板背景色 */\\n}\\n\\n.gdstudio-audio audio::-webkit-media-controls-mute-button,\\n.gdstudio-audio audio::-webkit-media-controls-play-button,\\n.gdstudio-audio audio::-webkit-media-controls-timeline-container,\\n.gdstudio-audio audio::-webkit-media-controls-rewind-button,\\n.gdstudio-audio audio::-webkit-media-controls-return-to-realtime-button,\\n.gdstudio-audio audio::-webkit-media-controls-toggle-closed-captions-button {\\n    background-color: <<colour tiddler-background>>; /* 按钮背景色 */\\n}\\n\\n.gdstudio-audio audio::-webkit-media-controls-mute-button:hover,\\n.gdstudio-audio audio::-webkit-media-controls-play-button:hover,\\n.gdstudio-audio audio::-webkit-media-controls-rewind-button:hover,\\n.gdstudio-audio audio::-webkit-media-controls-return-to-realtime-button:hover,\\n.gdstudio-audio audio::-webkit-media-controls-toggle-closed-captions-button:hover {\\n    background-color: transparent; /* 按钮悬停色 */\\n}\\n\\n.gdstudio-audio audio::-webkit-media-controls-timeline-container {\\n    background-color: transparent; /* 进度条背景色 */\\n}\\n\\n.gdstudio-audio audio::-webkit-media-controls-current-time-display,\\n.gdstudio-audio audio::-webkit-media-controls-time-remaining-display {\\n    color: <<colour foreground>>; /* 时间显示文字颜色 */\\n    font-size: 14px; /* 时间显示字体大小 */\\n}\\n\\n.gdstudio-audio {\\n  display: inline-block;\\n  width: auto; /* 确保宽度自动调整 */\\n  position: relative;\\n  top: -45px; /* 向上移动 -50px */\\n  left: 60px; /* 向右移动 180px */\\n  /* 等比缩小 */\\n  transform: scale(0.8);\\n\\n  /* 注意：scale 会缩放元素及其所有内容，包括可能的阴影等。\\n           如果需要保持元素占据的原有空间（视觉上看起来缩小了，但位置不变），\\n           需要添加 transform-origin: 0 0; 或 transform-origin: left top; */\\n  transform-origin: left top; /* 缩放以左上角为基准点 */\\n}\"},\"gdstudio-搜索音乐\":{\"title\":\"gdstudio-搜索音乐\",\"created\":\"20250528064705795\",\"modified\":\"20250529061510252\",\"tags\":\"音乐 gdstudio\",\"text\":\"<$transclude tiddler=\\\"音乐搜索界面优化版\\\"/>\\n\\n<$transclude tiddler=\\\"调用自定义播放器-精简模式\\\"/> <span style=\\\"margin-left: 20px;\\\">{{||$:/core/ui/Buttons/open-close-music-player}}</span>\\n\\nhttps://cors-anywhere.herokuapp.com/corsdemo\\n\\n<div style=\\\"margin-bottom: 40px;\\\"></div>\\n\\n<$transclude tiddler=\\\"优化后的歌曲列表-与播放器集成\\\"/>\\n\\n<!-- \\n无需再次引用，音乐播放器已固定在页面上\\n<$transclude tiddler=\\\"添加HTML5音频播放器\\\"/> \\n-->\\n\"},\"gdstudio\":{\"title\":\"gdstudio\",\"created\":\"20250528132415472\",\"modified\":\"20250528132433919\",\"tags\":\"导出\",\"type\":\"\",\"text\":\"<<filter-pill \\\"[tag[gdstudio]][[gdstudio]]\\\" gdstudio音乐api>>\"},\"gdstudio展示歌词\":{\"title\":\"gdstudio展示歌词\",\"created\":\"20250528150630488\",\"modified\":\"20250529061235084\",\"tags\":\"gdstudio\",\"text\":\"<$transclude tiddler=\\\"去除歌词时间戳\\\"/>\"},\"gdstudio歌词排版样式css\":{\"title\":\"gdstudio歌词排版样式css\",\"created\":\"20250528142454456\",\"modified\":\"20250529061215643\",\"tags\":\"gdstudio 样式 $:/tags/Stylesheet\",\"text\":\".lyric-body {\\n  font-family: \\\"FZYUEKZJW-H\\\";\\n  text-align: center; /* 文字水平居中 */\\n  line-height: 1.5; /* 行高 */\\n  letter-spacing: 0em; /* 增加字符间距 */\\n\\n  /* 硬式换行 */\\n  word-break: normal;\\n  word-wrap: break-word;\\n  white-space: pre-line; /* 连续的空白字符合并成一个空格 */\\n\\n  height: 90px; \\n  overflow-y: auto; \\n  margin: 5px 0; \\n  font-size: 1em; \\n\\n  -ms-overflow-style: none; /* IE和Edge */\\n  scrollbar-width: none; /* Firefox */\\n  overflow: auto; /* 保持滚动功能 */\\n\\n  background-color: transparent;\\n  position: fixed;\\n  top: ;\\n  left: 10px;\\n  bottom: 80px;\\n\\n  min-width: 300px;\\n}\\n\\n.lyric-body::-webkit-scrollbar {\\n  display: none; /* Chrome, Safari, Opera */\\n}\"},\"gdstudio音乐api宏macro\":{\"title\":\"gdstudio音乐api宏macro\",\"code-body\":\"yes\",\"created\":\"20250528053957388\",\"modified\":\"20250528132403692\",\"tags\":\"音乐 $:/tags/Macro gdstudio\",\"text\":\"\\\\define gdstudio-search(music-source, keyword, page-length, page-num)  \\nhttps://music-api.gdstudio.xyz/api.php?types=search&source=$music-source$&name=$keyword$&count=$page-length$&pages=$page-num$  \\n\\\\end\\n\\n\\\\define gdstudio-music(music-source, track-id, br)  \\nhttps://music-api.gdstudio.xyz/api.php?types=url&source=$music-source$&id=$track-id$&br=$br$\\n\\\\end\\n\\n\\\\define gdstudio-cover(music-source, pic-id, size)  \\nhttps://music-api.gdstudio.xyz/api.php?types=pic&source=$music-source$&id=$pic-id$&size=$size$\\n\\\\end\\n\\n\\\\define gdstudio-lyric(music-source, lyric-id)  \\nhttps://music-api.gdstudio.xyz/api.php?types=lyric&source=$music-source$&id=$lyric-id$\\n\\\\end\"},\"gdstudio音乐播放器样式css\":{\"title\":\"gdstudio音乐播放器样式css\",\"created\":\"20250528143453713\",\"modified\":\"20250529061046619\",\"tags\":\"gdstudio 样式 $:/tags/Stylesheet\",\"text\":\".gdstudio-music-body {\\n  background-color: <<colour tiddler-background>>;\\n  z-index: 0;\\n}\\n\\n.gdstudio-music-player {\\n  position: fixed;\\n  bottom: -60px;\\n  left: 0;\\n  max-width: 200px; / 设置最大宽度 /\\n  width: 100%; / 宽度占满可用空间 /\\n  background-color: <<colour tiddler-background>>;\\n  padding: 10px;\\n  margin: 0 auto; / 水平居中 /\\n  transform: translateX(50%); / 向右偏移自身宽度的50% /\\n  white-space: nowrap; / 防止内容换行 /\\n  overflow-x: auto; / 水平滚动条 /\\n  scrollbar-width: none; / 隐藏滚动条 /\\n  -ms-overflow-style: none; / IE和Edge /\\n}\\n\\n.gdstudio-music-player::-webkit-scrollbar {\\ndisplay: none; / Chrome, Safari, Opera /\\n}\\n\\n.gdstudio-music-name {\\n  font-size: 0.7em;\\n  background-color: transparent;\\n  position: relative;\\n  top: -15px;\\n  left: 0px;\\n  z-index: 999;\\n  display: inline-block; /* 或 display: block; */\\n  max-width: 220px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.gdstudio-cover {\\n  display: flex; \\n  align-items: center; \\n  gap: 15px;\\n  background-color: <<colour tiddler-background>>;\\n  width: 300px;\\n}\\n\\n.gdstudio-button {\\n  opacity: 0.5;\\n  transition: opacity 0.5s ease-in-out;\\n}\\n\\n.gdstudio-button:hover {\\n  opacity: 1;\\n}\\n\\n.gdstudio-song-item {\\n  display: flex; \\n  justify-content: space-between; \\n  align-items: center; \\n  padding: 10px; \\n  border-bottom: \\n  1px solid <<colour foreground>>;\\n}\\n\\n.gdstudio-cover button {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n    padding: 0;\\n}\\n\\n/* 定义大屏宽度 */\\n.large-screen {\\n  width: 1000px;\\n}\\n\\n/* 定义小屏宽度 */\\n.small-screen {\\n  width: 350px;\\n}\\n\\n/* 媒体查询，大屏 */\\n@media (min-width: 768px) {\\n.gdstudio-song-item {\\n  margin: 0 5%; /* 添加左右边距 */\\n}\\n}\\n\\n/* 媒体查询，小屏 */\\n@media (max-width: 767px) {\\n.gdstudio-song-item {\\n  margin: 0 10%; /* 添加左右边距 */\\n}\\n}\\n\"},\"优化后的歌曲列表-与播放器集成\":{\"title\":\"优化后的歌曲列表-与播放器集成\",\"created\":\"20250528070630390\",\"modified\":\"20250529022038331\",\"tags\":\"音乐 gdstudio\",\"text\":\"<$button class=\\\"tc-btn-invisible music-player-common-btn\\\" tooltip=\\\"清除缓存\\\">清除缓存\\n  <!-- 先清空之前的id和url -->\\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/track-id\\\" text=\\\"\\\"/>\\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/pic-id\\\" text=\\\"\\\"/>\\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/lyric-id\\\" text=\\\"\\\"/>\\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/music-url\\\" text=\\\"\\\"/>  \\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/cover-url\\\" text=\\\"\\\"/>\\n\\n  <!-- 先清空新增的洛雪音乐api缓存 -->\\n  <$action-setfield $tiddler=\\\"$:/state/lxmusic/music-url\\\" text=\\\"\\\"/>\\n  <<clear-debug-data>>\\n</$button>\\n\\n调试信息：- track-id: <$view tiddler=\\\"$:/state/gdstudio-api/track-id\\\"/> - music-source: <$view tiddler=\\\"$:/state/gdstudio-api/music-source\\\"/>\\n\\n- music-url: <$text text={{{ [{$:/state/gdstudio-api/music-url}!is[blank]] ~[{$:/state/kugou-api/music-url}!is[blank]] ~[{$:/state/lxmusic/music-url}] +[first[]] }}}/>\\n\\n<!-- 显示搜索结果中的所有歌曲 -->  \\n<$list filter=\\\"[{$:/state/gdstudio-api/searchResults}jsonindexes[]]\\\">    \\n  <div class=\\\"gdstudio-song-item\\\">    \\n    <div style=\\\"flex: 1;\\\">    \\n      <h4 style=\\\"margin: 0 0 5px 0;\\\"><$text text={{{ [{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[name]] }}}/></h4>    \\n      <span style=\\\"color: #666; font-size: 0.9em;\\\">    \\n        <$text text={{{ [{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[artist]] }}}/>    \\n        - <$text text={{{ [{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[album]] }}}/>    \\n      </span>    \\n    </div>\\n\\n<$button class=\\\"tc-btn-invisible gdstudio-button\\\" tooltip=\\\"播放\\\">  \\n    \\n  <!-- 然后设置新的ID -->  \\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/track-id\\\" text={{{ [{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[id]!match[null]] :else[{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[url_id]] }}}/>     \\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/pic-id\\\" text={{{ [{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[pic_id]] }}}/>        \\n  <$action-setfield $tiddler=\\\"$:/state/gdstudio-api/lyric-id\\\" text={{{ [{$:/state/gdstudio-api/searchResults}jsonget<currentTiddler>,[lyric_id]] }}}/>  \\n    \\n  <!-- 最后调用获取procedures -->  \\n  <<gdstudio-get-music-url>>    \\n  <<gdstudio-get-cover-url>>  \\n  <<gdstudio-get-lyric-url>>  \\n  <<gdstudio-get-lyric-text>>\\n\\n<!-- 如果音乐源为酷狗则切换到酷狗音乐api 问题已解决，不需要了\\n  <$reveal state=\\\"$:/state/gdstudio-api/music-source\\\" type=\\\"match\\\" text=\\\"kugou\\\">\\n      <<kugou-get-music-url>>  \\n  </$reveal>\\n-->\\n\\n  <!-- 如果gdstudio api为空则切换到洛雪音乐api -->  \\n  <$reveal state=\\\"$:/state/gdstudio-api/music-url\\\" type=\\\"match\\\" text=\\\"\\\">  \\n      <<lxmusic-get-music-url>>\\n  </$reveal>\\n\\n  {{$:/core/images/gdstudio-play-music}}      \\n</$button>\\n\\n  </div>    \\n</$list>\\n\"},\"关闭gdstudio音乐播放器\":{\"title\":\"关闭gdstudio音乐播放器\",\"created\":\"20250528150435056\",\"modified\":\"20250528150718799\",\"tags\":\"gdstudio\",\"text\":\"<$button class=\\\"tc-btn-invisible\\\" tooltip=\\\"关闭播放器\\\">✕   \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/track-id\\\" text=\\\"\\\"/>          \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/pic-id\\\" text=\\\"\\\"/>          \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/lyric-id\\\" text=\\\"\\\"/>          \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/cover-url\\\" text=\\\"\\\"/>          \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/lyric\\\" text=\\\"\\\"/>          \\n</$button>    \"},\"动态歌词单行模式与多行模式\":{\"title\":\"动态歌词单行模式与多行模式\",\"code-body\":\"yes\",\"created\":\"20250602083542522\",\"modified\":\"20250602084245103\",\"tags\":\"动态歌词\",\"text\":\"<!-- 多行模式（默认） -->  \\n<$lyric-display lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" show-lines=\\\"5\\\"/> \\n  \\n<!-- 单行模式 -->  \\n<$lyric-display lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" single-line-mode=\\\"yes\\\"/>  \\n  \\n<!-- 在任何屏幕尺寸下都只显示当前行 -->  \\n<$lyric-display lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" single-line-mode=\\\"true\\\"/>\\n\"},\"动态歌词样式css\":{\"title\":\"动态歌词样式css\",\"created\":\"20250529133611940\",\"modified\":\"20250529150936526\",\"tags\":\"动态歌词 $:/tags/Stylesheet gdstudio\",\"text\":\".lyric-display-container {  \\n    text-align: center;  \\n    padding: 20px;  \\n    overflow: hidden;\\n    min-width: 300px;  \\n    font-family: \\\"FZYUEKZJW-H\\\";\\n    display: inline-block; /* 或 display: block; */\\n    max-width: 350px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.gdstudio-audio-position .lyric-display-container {\\n  position: fixed; \\n}\\n  \\n.lyric-line {  \\n    padding: 2px 0; /* 紧凑的 padding */  \\n    transition: all 0.3s ease;  \\n    opacity: 0.6;  \\n    height: 1.4em;  /* 紧凑但足够的行高 */  \\n    line-height: 1.4em; /* 与高度保持一致 */  \\n}  \\n  \\n.lyric-current {  \\n    opacity: 1;  \\n    font-weight: bold;  \\n    color: #5797d8;  \\n    font-size: 1.1em;  \\n}\\n\\n.lyric-display-container.single-line-mode {  \\n    text-align: center;  \\n    min-height: 2em;  \\n}  \\n  \\n.lyric-display-container.single-line-mode .lyric-line {  \\n    text-align: center;  \\n    font-size: 1.2em;  \\n}\\n\\n/* 定义大屏宽度 */\\n.large-screen {\\n  width: 1000px;\\n}\\n\\n/* 定义小屏宽度 */\\n.small-screen {\\n  width: 350px;\\n}\\n\\n/* 媒体查询，大屏 */\\n@media (min-width: 768px) {\\n.gdstudio-audio-position .lyric-display-container {\\n  left: 2px;\\n  bottom: 50px;  \\n  max-height: 150px;  \\n}\\n}\\n\\n/* 媒体查询，小屏 */\\n@media (max-width: 767px) {\\n.gdstudio-audio-position .lyric-display-container {\\n  left: 5%;\\n  top: 0px;\\n  max-height: 100px;\\n  transform: translateY(-0px); /* 向上移动 */\\n}\\n\\n}\\n\"},\"去除歌曲时间戳正则表达式\":{\"title\":\"去除歌曲时间戳正则表达式\",\"created\":\"20250528132458712\",\"modified\":\"20250528132528182\",\"tags\":\"gdstudio\",\"text\":\"```tw\\n\\\\[([0-9]{2}):([0-9]{2})\\\\.([0-9]{1,9})\\\\]\\n```\\n\"},\"去除歌词时间戳\":{\"title\":\"去除歌词时间戳\",\"created\":\"20250528134902608\",\"modified\":\"20250529061333684\",\"tags\":\"gdstudio\",\"text\":\"\\\\define time1() \\\\[([0-9]{2}):([0-9]{2})\\\\.([0-9]{1,9})\\\\]\\n\\\\define time0() \\n\\n<div class=\\\"lyric-body\\\"><$let lyricText={{{ [{$:/state/gdstudio-api/lyric}search-replace:g:regexp<time1>,<time0>] }}} ><$transclude $variable=\\\"lyricText\\\" $mode=\\\"block\\\" /></$let></div>\\n\"},\"引用gdstudio音乐api宏\":{\"title\":\"引用gdstudio音乐api宏\",\"created\":\"20250528054914528\",\"modified\":\"20250528132403681\",\"tags\":\"音乐 gdstudio\",\"text\":\"<<gdstudio-search \\\"netease\\\" \\\"夜梦记\\\" \\\"20\\\" \\\"1\\\">>  \\n\\n<$transclude $variable=\\\"gdstudio-search\\\" music-source=\\\"netease\\\" keyword=\\\"夜梦记\\\" page-length=\\\"20\\\", page-num=\\\"1\\\"/>\\n\\n<<gdstudio-music \\\"netease\\\" \\\"1824959449\\\" \\\"320\\\">>\\n\\n<$transclude $variable=\\\"gdstudio-music\\\" music-source=\\\"netease\\\" track-id=\\\"1824959449\\\" br=\\\"320\\\"/>\\n\\n<<gdstudio-cover \\\"netease\\\" \\\"6626756582138305\\\" \\\"300\\\">>\\n\\n<$transclude $variable=\\\"gdstudio-cover\\\" music-source=\\\"netease\\\" pic-id=\\\"6626756582138305\\\" size=\\\"300\\\"/>\\n\\n<<gdstudio-lyric \\\"netease\\\" \\\"1824959449\\\">>\\n\\n<$transclude $variable=\\\"gdstudio-lyric\\\" music-source=\\\"netease\\\" lyric-id=\\\"1824959449\\\"/>\\n\\n搜索音乐\\n\\n```tw\\n<<gdstudio-search \\\"netease\\\" \\\"夜梦记\\\" \\\"20\\\" \\\"1\\\">>\\n```\\n\\n```tw\\n<$transclude $variable=\\\"gdstudio-search\\\" music-source=\\\"netease\\\" keyword=“夜梦记” page-length=\\\"20\\\", page-num=\\\"1\\\"/>\\n```\\n\\n获取歌曲链接\\n\\n```tw\\n<<gdstudio-music \\\"netease\\\" \\\"1824959449\\\" \\\"320\\\">>\\n```\\n\\n```tw\\n<$transclude $variable=\\\"gdstudio-music\\\" music-source=\\\"netease\\\" track-id=“1824959449” br=\\\"320\\\"/>\\n```\\n\\n获取海报链接\\n\\n```tw\\n<<gdstudio-cover \\\"netease\\\" \\\"6626756582138305\\\" \\\"300\\\">>\\n```\\n\\n```tw\\n<$transclude $variable=\\\"gdstudio-cover\\\" music-source=\\\"netease\\\" pic-id=\\\"6626756582138305\\\" size=\\\"300\\\"/>\\n```\\n\\n获取歌词链接\\n\\n```tw\\n<<gdstudio-lyric \\\"netease\\\" \\\"1824959449\\\">>\\n```\\n\\n```tw\\n<$transclude $variable=\\\"gdstudio-lyric\\\" music-source=\\\"netease\\\" lyric-id=\\\"1824959449\\\"/>\\n```\\n\\n```tw\\n$:/state/gdstudio-api/searchResults\\n$:/state/gdstudio-api/music-source\\n$:/state/gdstudio-api/keyword\\n$:/state/gdstudio-api/page-length\\n$:/state/gdstudio-api/page-num\\n$:/state/gdstudio-api/track-id\\n$:/state/gdstudio-api/br\\n$:/state/gdstudio-api/pic-id\\n$:/state/gdstudio-api/size\\n$:/state/gdstudio-api/lyric-id\\n```\"},\"引用洛雪音乐api\":{\"title\":\"引用洛雪音乐api\",\"created\":\"20250530064319033\",\"modified\":\"20250530075236966\",\"tags\":\"洛雪音乐\",\"text\":\"<<lxmusic-music-url \\\"wy\\\" \\\"1824959449\\\" \\\"320k\\\">>\\n\\n<$transclude $variable=\\\"lxmusic-music-url\\\" source=\\\"wy\\\" songid=\\\"1824959449\\\" quality=\\\"320k\\\"/>\\n\\n```tw\\n<<lxmusic-music-url \\\"wy\\\" \\\"1824959449\\\" \\\"320k\\\">>\\n\\n<$transclude $variable=\\\"lxmusic-music-url\\\" source=\\\"wy\\\" songid=\\\"1824959449\\\" quality=\\\"320k\\\"/>\\n```\\n\\n<$button>  \\n  获取音乐  \\n  <<lxmusic-get-music-url \\\"wy\\\" \\\"1824959449\\\" \\\"320k\\\">>  \\n</$button>\\n\\n<$button>  \\n  获取并播放音乐  \\n  <<lxmusic-get-music-url \\\"wy\\\" \\\"1824959449\\\" \\\"320k\\\">>  \\n</$button>  \\n  \\n<$list filter=\\\"[{$:/state/lxmusic-api/music-url}!is[blank]]\\\" variable=\\\"musicUrl\\\">  \\n  <audio controls style=\\\"width: 100%; object-fit: contain\\\">  \\n    <source src=<<musicUrl>> type=\\\"audio/mpeg\\\">  \\n  </audio>  \\n</$list>\"},\"待测试获取歌曲url\":{\"title\":\"待测试获取歌曲url\",\"created\":\"20250609054357776\",\"modified\":\"20250609065255186\",\"tags\":\"洛雪音乐\",\"text\":\"所倾共赴\\n\\nhttps://88.lxmusic.xn--fiqs8s/lxmusicv3/url/kg/61a8c6a5ba335feeff0b0729438af472/320k\\n\\n晚枫歌\\n\\nhttps://88.lxmusic.xn--fiqs8s/lxmusicv3/url/kg/2c8dd7174018a34f833572ef073bf471/320k\"},\"本地音乐\":{\"title\":\"本地音乐\",\"created\":\"20250701100422491\",\"modified\":\"20250701100445267\",\"tags\":\"导出\",\"type\":\"\",\"text\":\"<<filter-pill \\\"[tag[本地音乐]][[本地音乐]]\\\" 本地音乐>>\"},\"本地音乐播放器带歌词\":{\"title\":\"本地音乐播放器带歌词\",\"created\":\"20250701095945311\",\"modified\":\"20250702080344139\",\"tags\":\"本地音乐\",\"text\":\"<div style=\\\"display: grid; justify-items: center; gap: 5px;\\\">\\n<$transclude tiddler=\\\"调用自定义播放器-本地音乐\\\"/>  \\n<$transclude tiddler=\\\"添加歌词同步功能-本地音乐\\\"/>  \\n</div>\\n\\n<!-- \\ndisplay: flex; justify-content: center;\\ndisplay: grid; justify-items: center;\\n -->\"},\"本地音乐链接和信息\":{\"title\":\"本地音乐链接和信息\",\"created\":\"20250703015932367\",\"modified\":\"20250703020147671\",\"tags\":\"音乐播放器 gdstudio 本地音乐\",\"歌手名\":\"云之泣\",\"歌曲url\":\"file://C:\\\\Users\\\\lamti\\\\Downloads\\\\同归-云之泣.mp3\",\"歌曲名\":\"同归\",\"歌词url\":\"$:/lyrics/同归-云之泣\",\"海报url\":\"file://C:\\\\Users\\\\lamti\\\\Downloads\\\\同归-云之泣.png\",\"text\":\"\\n\"},\"洛雪音乐\":{\"title\":\"洛雪音乐\",\"created\":\"20250530065412719\",\"modified\":\"20250530065441109\",\"tags\":\"导出\",\"type\":\"\",\"text\":\"<<filter-pill \\\"[tag[洛雪音乐]][[洛雪音乐]]\\\" 洛雪音乐>>\"},\"洛雪音乐api宏macro\":{\"title\":\"洛雪音乐api宏macro\",\"code-body\":\"yes\",\"created\":\"20250530064013775\",\"modified\":\"20250530073002007\",\"tags\":\"$:/tags/Macro 洛雪音乐\",\"text\":\"\\\\define lxmusic-base-url() https://88.lxmusic.xn--fiqs8s\\n  \\n\\\\define lxmusic-music-url(source, songid, quality)  \\n$(lxmusic-base-url)$/lxmusicv3/url/$source$/$songid$/$quality$  \\n\\\\end\"},\"洛雪音乐播放器\":{\"title\":\"洛雪音乐播放器\",\"created\":\"20250530094050631\",\"modified\":\"20250530094806339\",\"tags\":\"洛雪音乐\",\"text\":\"<audio controls autoplay onerror=\\\"console.error('Audio loading failed')\\\">                \\n     <source src={{$:/state/lxmusic/music-url}} type=\\\"audio/mpeg\\\">                \\n     您的浏览器不支持音频播放                \\n</audio>  \"},\"测试洛雪音乐api获取音乐url\":{\"title\":\"测试洛雪音乐api获取音乐url\",\"created\":\"20250609055713993\",\"modified\":\"20250609073936135\",\"tags\":\"洛雪音乐\",\"text\":\"<$button actions=<<lxmusic-get-music-url>>>获取音乐URL</$button>  \\n<$button actions=<<clear-debug-data>>>清空测试数据</$button>  \\n  \\n音乐源：{{$:/state/gdstudio-api/music-source}}  \\n  \\nid：{{$:/state/gdstudio-api/track-id}}  \\n  \\n音质：{{$:/state/gdstudio-api/br}}  \\n  \\n歌曲url：{{$:/state/lxmusic/music-url}}\\n\\n调试信息\\n请求状态：{{$:/state/lxmusic/debug-request}}\\nHTTP状态码：{{$:/state/lxmusic/debug-status}}\\n请求进度：{{$:/state/lxmusic/request-progress}}\\n错误信息：{{$:/state/lxmusic/debug-error}}\\n调试结果：{{$:/state/lxmusic/debug-result}}\\nAPI错误：{{$:/state/lxmusic/error}}\\n\\n原始响应数据：\\n<$codeblock code={{$:/state/lxmusic/debug-data}}/>\\n\\n响应头：\\n<$codeblock code={{$:/state/lxmusic/debug-headers}}/>\"},\"测试酷狗api搜索\":{\"title\":\"测试酷狗api搜索\",\"created\":\"20250607092103509\",\"modified\":\"20250609033624026\",\"tags\":\"酷狗音乐api\",\"text\":\"<$button actions=<<kugou-search-http-get>>>1. 搜索歌曲</$button>  \\n<$button actions=<<kugou-extract-hash>>>2. 提取Hash</$button>  \\n<$button actions=<<kugou-get-music-url>>>3. 获取音乐URL</$button>\\n\\n搜索结果：\\n\\n{{$:/state/kugou-api/searchResults}}\\n\\nhash值：\\n\\n{{$:/state/kugou-api/hash}}\\n\\n歌曲url：\\n\\n{{$:/state/kugou-api/music-url}}\\n\"},\"添加HTML5音频播放器\":{\"title\":\"添加HTML5音频播放器\",\"created\":\"20250528070536184\",\"modified\":\"20250529060535909\",\"tags\":\"音乐 gdstudio\",\"text\":\"<div class=\\\"gdstudio-music-body\\\">\\n\\n<div class=\\\"gdstudio-music-player\\\">     \\n  <$reveal state=\\\"$:/state/gdstudio-api/track-id\\\" type=\\\"nomatch\\\" text=\\\"\\\">          \\n    <div class=\\\"gdstudio-cover\\\">          \\n      <!-- 专辑封面 -->    \\n        <$image     \\n          source={{$:/state/gdstudio-api/cover-url}}     \\n          width=\\\"60\\\"     \\n          height=\\\"60\\\"     \\n          style=\\\"border-radius: 4px; object-fit: cover;\\\"    \\n          alt=\\\"专辑封面\\\"    \\n        />\\n\\n<div class=\\\"gdstudio-music-name\\\">\\n<$text text={{{ [{$:/state/gdstudio-api/searchResults}jsonget[{$:/state/gdstudio-api/track-id}],[name]] }}}/> - <$text text={{{ [{$:/state/gdstudio-api/searchResults}jsonget[{$:/state/gdstudio-api/track-id}],[artist]] }}}/>\\n</div>\\n</div>\\n\\n<div class=\\\"gdstudio-audio\\\">    \\n<$reveal state=\\\"$:/state/gdstudio-api/music-url\\\" type=\\\"nomatch\\\" text=\\\"\\\">  \\n<audio controls autoplay onerror=\\\"console.error('Audio loading failed')\\\" key={{$:/state/gdstudio-api/track-id}}>                \\n     <source src={{$:/state/gdstudio-api/music-url}} type=\\\"audio/mpeg\\\">                \\n     您的浏览器不支持音频播放                \\n</audio>  \\n</$reveal>  \\n</div>\\n\\n  </$reveal>          \\n</div>\\n</div>\\n\"},\"添加歌词同步功能-本地音乐\":{\"title\":\"添加歌词同步功能-本地音乐\",\"created\":\"20250701095452251\",\"modified\":\"20250703020444657\",\"tags\":\"动态歌词 gdstudio 本地音乐\",\"text\":\"<$lyric-sync lyric-tiddler={{本地音乐链接和信息!!歌词url}} audio-selector=\\\"#gdstudio-music-player-local audio\\\">\\n<$lyric-display lyric-tiddler={{本地音乐链接和信息!!歌词url}} show-lines=\\\"3\\\" single-line-mode=\\\"no\\\"/>\\n</$lyric-sync>\"},\"添加歌词同步功能-本地音乐代码备份\":{\"title\":\"添加歌词同步功能-本地音乐代码备份\",\"created\":\"20250702021326212\",\"modified\":\"20250703020505121\",\"tags\":\"动态歌词 gdstudio 本地音乐\",\"text\":\"<!-- 添加歌词同步功能 -->\\n\\n本地路径：（实测无效）\\n\\n```\\n<$lyric-sync lyric-tiddler={{{file://C:\\\\Users\\\\lamti\\\\Downloads\\\\同归-云之泣.lrc}}} audio-selector=\\\"#gdstudio-music-player-local audio\\\">\\n<$lyric-display lyric-tiddler={{{file://C:\\\\Users\\\\lamti\\\\Downloads\\\\同归-云之泣.lrc}}} show-lines=\\\"3\\\" single-line-mode=\\\"no\\\"/>\\n</$lyric-sync>\\n```\\n\\n条目标题：（可行）\\n\\n```\\n<$lyric-sync lyric-tiddler=\\\"$:/lyrics/同归-云之泣\\\" audio-selector=\\\"#gdstudio-music-player-local audio\\\">\\n<$lyric-display lyric-tiddler=\\\"$:/lyrics/同归-云之泣\\\" show-lines=\\\"3\\\" single-line-mode=\\\"no\\\"/>\\n</$lyric-sync>\\n```\\n\\n条目内容：（可行）\\n\\n```\\n<$lyric-sync lyric-tiddler={{{$:/lyrics/同归-云之泣}}} audio-selector=\\\"#gdstudio-music-player-local audio\\\">\\n<$lyric-display lyric-tiddler={{{$:/lyrics/同归-云之泣}}} show-lines=\\\"3\\\" single-line-mode=\\\"no\\\"/>\\n</$lyric-sync>\\n```\"},\"添加歌词同步功能\":{\"title\":\"添加歌词同步功能\",\"created\":\"20250529144151048\",\"modified\":\"20250529144835406\",\"tags\":\"动态歌词 gdstudio\",\"text\":\"<!-- 添加歌词同步功能 -->\\n<$lyric-sync lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" audio-selector=\\\"#gdstudio-music-player audio\\\">\\n<$lyric-display lyric-tiddler=\\\"$:/state/gdstudio-api/lyric\\\" show-lines=\\\"3\\\" single-line-mode=\\\"yes\\\"/>\\n</$lyric-sync>\\n\"},\"简单测试构建链接procedure\":{\"title\":\"简单测试构建链接procedure\",\"code-body\":\"yes\",\"created\":\"20250609070011993\",\"modified\":\"20250609073520772\",\"tags\":\"洛雪音乐 $:/tags/Macro\",\"text\":\"<!-- \\nhttps://cors-anywhere.herokuapp.com/\\n -->\\n\\n\\\\procedure lxmusic-get-music-url-simple()  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-request\\\" text=\\\"开始简单测试\\\"/>  \\n<$action-sendmessage  \\n    $message=\\\"tm-http-request\\\"  \\n    url=\\\"https://88.lxmusic.xn--fiqs8s/lxmusicv3/url/kg/61a8c6a5ba335feeff0b0729438af472/320k\\\"  \\n    method=\\\"GET\\\"  \\n    header-Content-Type=\\\"application/json\\\"  \\n    header-X-Request-Key=\\\"lxmusic\\\"  \\n    bind-status=\\\"$:/state/lxmusic/request-status\\\"  \\n    bind-progress=\\\"$:/state/lxmusic/request-progress\\\"  \\n    oncompletion=<<lxmusic-extract-music-url>>  \\n/>  \\n\\\\end\\n\\n\\\\procedure lxmusic-get-music-url()  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-request\\\" text=\\\"开始请求\\\"/>  \\n<$let   \\n    sourceCode={{{ [{$:/state/gdstudio-api/music-source}match[netease]then[wy]] [{$:/state/gdstudio-api/music-source}match[kugou]then[kg]] [{$:/state/gdstudio-api/music-source}match[kuwo]then[kw]] +[first[]] }}}  \\n    quality={{{ [{$:/state/gdstudio-api/br}addsuffix[k]] }}}  \\n    songId={{{ [{$:/state/gdstudio-api/track-id}!match[null]!is[blank]] ~[{$:/state/kugou-api/hash}] +[first[]] }}}  \\n    baseUrl=\\\"https://88.lxmusic.xn--fiqs8s/lxmusicv3/url/\\\"  \\n>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-source\\\" text=<<sourceCode>>/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-songid\\\" text=<<songId>>/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-quality\\\" text=<<quality>>/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-url\\\" text={{{ [<baseUrl>addsuffix<sourceCode>addsuffix[/]addsuffix<songId>addsuffix[/]addsuffix<quality>] }}}/>  \\n<$action-sendmessage  \\n    $message=\\\"tm-http-request\\\"  \\n    url={{{ [<baseUrl>addsuffix<sourceCode>addsuffix[/]addsuffix<songId>addsuffix[/]addsuffix<quality>] }}}  \\n    method=\\\"GET\\\"  \\n    header-Content-Type=\\\"application/json\\\"  \\n    header-X-Request-Key=\\\"lxmusic\\\"  \\n    bind-status=\\\"$:/state/lxmusic/request-status\\\"  \\n    bind-progress=\\\"$:/state/lxmusic/request-progress\\\"  \\n    oncompletion=<<lxmusic-extract-music-url>>  \\n/>  \\n</$let>  \\n\\\\end\\n\\n\\\\procedure lxmusic-extract-music-url()  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-status\\\" text=<<status>>/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-data\\\" text=<<data>>/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-error\\\" text=<<error>>/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-headers\\\" text=<<headers>>/>  \\n<$list filter=\\\"[<status>compare:number:gteq[200]compare:number:lteq[299]]\\\" variable=\\\"ignore\\\">  \\n    <$list filter=\\\"[<data>jsonget[code]match[0]]\\\" variable=\\\"ignore\\\">  \\n        <$action-setfield  \\n            $tiddler=\\\"$:/state/lxmusic/music-url\\\"  \\n            text={{{ [<data>jsonget[data]] }}}  \\n        />  \\n        <$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-result\\\" text=\\\"成功获取URL\\\"/>  \\n    </$list>  \\n    <$list filter=\\\"[<data>jsonget[code]!match[0]]\\\" variable=\\\"ignore\\\">  \\n        <$action-setfield  \\n            $tiddler=\\\"$:/state/lxmusic/error\\\"  \\n            text={{{ [<data>jsonget[msg]] }}}  \\n        />  \\n        <$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-result\\\" text=\\\"API返回错误\\\"/>  \\n    </$list>  \\n</$list>  \\n<$list filter=\\\"[<status>!compare:number:gteq[200]] [<status>!compare:number:lteq[299]]\\\" variable=\\\"ignore\\\">  \\n    <$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-result\\\" text=\\\"HTTP请求失败\\\"/>  \\n</$list>  \\n\\\\end\\n\\n\\\\procedure clear-debug-data()  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-request\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-status\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-data\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-error\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-headers\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-result\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-source\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-songid\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-quality\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/debug-url\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/music-url\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/error\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/request-status\\\" text=\\\"\\\"/>  \\n<$action-setfield $tiddler=\\\"$:/state/lxmusic/request-progress\\\" text=\\\"\\\"/>  \\n\\\\end\\n\"},\"简单测试构建链接调试界面\":{\"title\":\"简单测试构建链接调试界面\",\"created\":\"20250609063154053\",\"modified\":\"20250609071609199\",\"tags\":\"洛雪音乐\",\"text\":\"<$button actions=<<lxmusic-get-music-url>>>测试lxmusic URL</$button>    \\n<$button actions=<<clear-debug-data>>>清空调试信息</$button>    \\n  \\n输入参数调试  \\n音乐源：{{$:/state/gdstudio-api/music-source}}  \\n歌曲ID：{{$:/state/gdstudio-api/track-id}}  \\n酷狗Hash：{{$:/state/kugou-api/hash}}  \\n音质：{{$:/state/gdstudio-api/br}}  \\n  \\nURL构建调试  \\n源代码映射：{{$:/state/lxmusic/debug-source}}  \\n歌曲ID选择：{{$:/state/lxmusic/debug-songid}}  \\n音质参数：{{$:/state/lxmusic/debug-quality}}  \\n最终URL：{{$:/state/lxmusic/debug-url}}  \\n  \\n请求调试  \\n测试状态：{{$:/state/lxmusic/debug-request}}    \\nHTTP状态码：{{$:/state/lxmusic/debug-status}}    \\n错误信息：{{$:/state/lxmusic/debug-error}}    \\n调试结果：{{$:/state/lxmusic/debug-result}}    \\n  \\n解析的歌曲URL：{{$:/state/lxmusic/music-url}}    \\nAPI错误：{{$:/state/lxmusic/error}}  \\n  \\n原始响应数据：    \\n<$codeblock code={{$:/state/lxmusic/debug-data}}/>    \\n  \\n响应头：    \\n<$codeblock code={{$:/state/lxmusic/debug-headers}}/>\"},\"自定义音乐播放器样式css\":{\"title\":\"自定义音乐播放器样式css\",\"created\":\"20250530105337366\",\"modified\":\"20250530142302885\",\"tags\":\"音乐播放器 样式 $:/tags/Stylesheet gdstudio\",\"text\":\".gdstudio-mini-player {\\n  display: flex;\\n  align-items: center;\\n  background: <<colour tiddler-background>>;\\n  border: 1px solid <<colour tiddler-background>>;\\n  border-radius: 48px;\\n  padding: 4px;\\n  width: 280px;\\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\\n  height: 60px;\\n}\\n\\n.gdstudio-mini-cover {\\n  position: relative;\\n  width: 48px;\\n  height: 48px;\\n  margin-right: 5px;\\n  flex-shrink: 0;\\n}\\n\\n.gdstudio-mini-cover-img {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  object-fit: cover;\\n  border: none;\\n  box-shadow: 0 2px 6px rgba(0,0,0,0.15);\\n  transition: transform 0.3s ease;\\n}\\n\\n.gdstudio-mini-cover-img.spinning {\\n  animation: spin 3s linear infinite;\\n}\\n\\n@keyframes spin {\\n  from { transform: rotate(0deg); }\\n  to { transform: rotate(360deg); }\\n}\\n\\n/* 修改后的播放按钮 - 完全透明 */\\n.gdstudio-mini-play-btn {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 10px;\\n  background: transparent; /* 完全透明背景 */\\n  color: rgba(255, 255, 255, 0.9); /* 高对比度白色文字 */\\n  border: none; /* 移除边框 */\\n  font-size: 14px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.2s ease;\\n  text-shadow: 0 0 2px rgba(0,0,0,0.8); /* 添加阴影增强可见性 */\\n}\\n\\n.gdstudio-mini-play-btn:hover {\\n  transform: translate(-50%, -50%) scale(1.1);\\n  color: rgba(255, 255, 255, 1);\\n  text-shadow: 0 0 3px rgba(0,0,0,0.9);\\n}\\n\\n.gdstudio-mini-info {\\n  flex: 1;\\n  min-width: 0;\\n}\\n\\n.gdstudio-music-name {\\n  font-size: 0.8em;\\n  font-weight: 500;\\n  color: <<colour foreground>>;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  text-align: center;  \\n  transform: translateY(20px); /* 向下移动 */\\n}\\n\\n.gdstudio-mini-controls {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  position: relative;\\n}\\n\\n.gdstudio-progress-section {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  flex: 1;\\n}\\n\\n.gdstudio-time {\\n  font-size: 0.8em;\\n  color: <<colour foreground>>;\\n  min-width: 60px;\\n  transform: translateY(-2.5px); /* 向上移动 */\\n}\\n\\n.gdstudio-progress {\\n  flex: 1;\\n  height: 6px;\\n  background: #bbb;\\n  border-radius: 3px;\\n  overflow: hidden;\\n  opacity: 0.3;\\n  cursor: pointer;\\n  position: relative;\\n}\\n\\n.gdstudio-progress-fill {\\n  height: 100%;\\n  background: #5797d8;\\n  width: 0%;\\n  transition: width 0.1s ease;\\n}\\n\\n/* 分离的静音按钮 */\\n.gdstudio-mute-btn {\\n  width: 24px;\\n  height: 24px;\\n  border-radius: 12px;\\n  background: transparent;\\n  border: none;\\n  font-size: 12px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #bbb;\\n  transition: all 0.2s ease;\\n}\\n\\n.gdstudio-mute-btn:hover {\\n    background: #bbb;\\n    color: #ffffff;\\n}\\n\\n/* 分离的音量按钮 */\\n.gdstudio-volume-btn {\\n  width: 24px;\\n  height: 24px;\\n  border-radius: 12px;\\n  background: transparent;\\n  border: none;\\n  font-size: 12px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #bbb;\\n  transition: all 0.2s ease;\\n  transform: translateX(-10px); /* 向左移动 */\\n}\\n\\n.gdstudio-volume-btn:hover {\\n    background: #bbb;\\n    color: #ffffff;\\n}\\n\\n.gdstudio-volume-panel {\\n    position: absolute;\\n    bottom: 100%;\\n    right: 0;\\n    background: #ffffff;\\n    border: 1px solid #ddd;\\n    border-radius: 8px;\\n    padding: 8px 4px;\\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\\n    opacity: 0;\\n    visibility: hidden;\\n    transform: translateY(4px);\\n    transition: all 0.2s ease;\\n    z-index: 1000;\\n}\\n\\n.gdstudio-volume-panel.visible {\\n    opacity: 1;\\n    visibility: visible;\\n    transform: translateY(0);\\n}\\n\\n.gdstudio-volume-slider {\\n    writing-mode: bt-lr;\\n    -webkit-appearance: slider-vertical;\\n    width: 20px;\\n    height: 80px;\\n    background: #bbb;\\n    outline: none;\\n    opacity: 0.3;\\n    transition: opacity 0.2s;\\n}\\n\\n.gdstudio-volume-slider:hover {\\n    opacity: 1;\\n}\\n\\n.gdstudio-volume-slider::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  appearance: none;\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: #5797d8;\\n  cursor: pointer;\\n}\\n\\n.gdstudio-volume-slider::-moz-range-thumb {\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: #5797d8;\\n  cursor: pointer;\\n  border: none;\\n}\\n\\n.bi.bi-pause-circle {\\n    display: block;\\n    width: 40px;  /* 保持原始宽度 */\\n    height: 40px; /* 保持原始高度 */\\n    transform: scale(1.5); /* 放大 1.5 倍 */\\n    transform-origin: center; /* 放大中心点 */\\n    transition: all 0.3s ease; /* 可选：让放大更平滑 */\\n  fill: white;\\n  opacity: 0.5;\\n}\\n\\n.bi-volume\\n {\\n    display: block;\\n    width: 40px;  /* 保持原始宽度 */\\n    height: 40px; /* 保持原始高度 */\\n    transform: scale(1.5); /* 放大 1.5 倍 */\\n    transform-origin: center; /* 放大中心点 */\\n    transition: all 0.3s ease; /* 可选：让放大更平滑 */\\n  fill: <<colour foreground>>;\\n  opacity: 0.8;\\n}\\n\"},\"自定义音乐播放器补充样式css\":{\"title\":\"自定义音乐播放器补充样式css\",\"created\":\"20250531103100797\",\"modified\":\"20250531103834367\",\"tags\":\"音乐播放器 样式 $:/tags/Stylesheet gdstudio\",\"text\":\"/* 基础样式 - 保持原有的默认样式 */  \\n.gdstudio-audio-position .gdstudio-mini-player {  \\n  position: fixed;  \\n  bottom: 5px;  \\n  left: 5px;  \\n}  \\n  \\n/* 只为精简模式添加特殊样式 */  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-mini-player {  \\n  width: 57.5px;  \\n  height: 57.5px;  \\n  border-radius: 57.5px;  \\n}  \\n  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-mini-cover {  \\n  margin-right: 10px;  \\n}  \\n  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-time {  \\n  font-size: 0.7em;  \\n  display: none;  \\n}  \\n  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-volume-panel.visible {  \\n  transform: translateX(23px);  \\n}  \\n  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-music-name,  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-volume-btn,  \\n.audio-player-compact .gdstudio-audio-position .gdstudio-progress,\\n.audio-player-compact .gdstudio-audio-position .gdstudio-download-btn\\n{  \\n  display: none;  \\n}  \\n  \\n/* 自动模式只在小屏时应用精简样式 */  \\n@media (max-width: 767px) {  \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-mini-player {  \\n    width: 57.5px;  \\n    height: 57.5px;  \\n    border-radius: 57.5px;  \\n  }  \\n    \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-mini-cover {  \\n    margin-right: 10px;  \\n  }  \\n    \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-time {  \\n    font-size: 0.7em;  \\n    display: none;  \\n  }  \\n    \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-volume-panel.visible {  \\n    transform: translateX(23px);  \\n  }  \\n    \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-music-name,  \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-volume-btn,  \\n  .audio-player-auto .gdstudio-audio-position .gdstudio-progress,\\n  .audio-player-auto .gdstudio-audio-position .gdstudio-download-btn,\\n  .audio-player-auto .gdstudio-audio-position .gdstudio-download-btn\\n{  \\n    display: none;  \\n  }  \\n}  \\n  \\n/* 保留您的原有定义 */  \\n.large-screen {  \\n  width: 1000px;  \\n}  \\n  \\n.small-screen {  \\n  width: 350px;  \\n}\\n\"},\"获取封面url定义procedure\":{\"title\":\"获取封面url定义procedure\",\"code-body\":\"yes\",\"created\":\"20250528095234170\",\"modified\":\"20250528132403669\",\"tags\":\"音乐 $:/tags/Macro gdstudio\",\"text\":\"\\\\procedure gdstudio-get-cover-url()      \\n\\t<$action-sendmessage      \\n\\t\\t$message=\\\"tm-http-request\\\"      \\n\\t\\turl=\\\"https://music-api.gdstudio.xyz/api.php\\\"      \\n\\t\\tquery-types=\\\"pic\\\"      \\n\\t\\tquery-source={{$:/state/gdstudio-api/music-source}}      \\n\\t\\tquery-id={{$:/state/gdstudio-api/pic-id}}      \\n\\t\\tquery-size={{$:/state/gdstudio-api/pic-size}}      \\n\\t\\tmethod=\\\"GET\\\"      \\n\\t\\toncompletion=<<gdstudio-extract-cover-url>>      \\n\\t/>      \\n\\\\end    \\n    \\n\\\\procedure gdstudio-extract-cover-url()      \\n\\t<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/cover-url\\\" text={{{ [<data>jsonget[url]] }}}/>      \\n\\\\end\\n\"},\"获取歌词url和文本定义procedure\":{\"title\":\"获取歌词url和文本定义procedure\",\"code-body\":\"yes\",\"created\":\"20250528095256198\",\"modified\":\"20250529015107749\",\"tags\":\"音乐 $:/tags/Macro gdstudio\",\"text\":\"\\\\procedure gdstudio-get-lyric-url()      \\n\\t<$action-sendmessage      \\n\\t\\t$message=\\\"tm-http-request\\\"      \\n\\t\\turl=\\\"https://music-api.gdstudio.xyz/api.php\\\"      \\n\\t\\tquery-types=\\\"lyric\\\"      \\n\\t\\tquery-source={{$:/state/gdstudio-api/music-source}}      \\n\\t\\tquery-id={{$:/state/gdstudio-api/lyric-id}}      \\n\\t\\tmethod=\\\"GET\\\"      \\n\\t\\toncompletion=<<gdstudio-extract-lyric-url>>      \\n\\t/>      \\n\\\\end    \\n    \\n\\\\procedure gdstudio-extract-lyric-url()      \\n\\t<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/lyric-url\\\" text={{{ [<data>jsonget[url]] }}}/>      \\n\\\\end\\n\\n\\\\procedure gdstudio-get-lyric-text()        \\n\\t<$action-sendmessage        \\n\\t\\t$message=\\\"tm-http-request\\\"        \\n\\t\\turl=\\\"https://music-api.gdstudio.xyz/api.php\\\"        \\n\\t\\tquery-types=\\\"lyric\\\"        \\n\\t\\tquery-source={{$:/state/gdstudio-api/music-source}}        \\n\\t\\tquery-id={{$:/state/gdstudio-api/lyric-id}}        \\n\\t\\tmethod=\\\"GET\\\"        \\n\\t\\toncompletion=<<gdstudio-extract-lyric>>        \\n\\t/>        \\n\\\\end      \\n      \\n\\\\procedure gdstudio-extract-lyric()    \\n<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/lyric\\\" text={{{[<data>jsonget[lyric]splitregexp[\\\\r?\\\\n]prefix[[0]join[  \\n]] }}}/>     \\n\\\\end\\n\"},\"获取音乐url并播放定义procedure\":{\"title\":\"获取音乐url并播放定义procedure\",\"code-body\":\"yes\",\"created\":\"20250528074622054\",\"modified\":\"20250529015811407\",\"tags\":\"音乐 $:/tags/Macro gdstudio\",\"text\":\"\\\\procedure gdstudio-get-music-url()    \\n\\t<$action-sendmessage    \\n\\t\\t$message=\\\"tm-http-request\\\"    \\n\\t\\turl=\\\"https://music-api.gdstudio.xyz/api.php\\\"    \\n\\t\\tquery-types=\\\"url\\\"    \\n\\t\\tquery-source={{$:/state/gdstudio-api/music-source}}    \\n\\t\\tquery-id={{$:/state/gdstudio-api/track-id}}    \\n\\t\\tquery-br=\\\"320\\\"    \\n\\t\\tmethod=\\\"GET\\\"    \\n\\t\\toncompletion=<<gdstudio-extract-music-url>>    \\n\\t/>    \\n\\\\end  \\n  \\n\\\\procedure gdstudio-extract-music-url()      \\n\\t<$list filter=\\\"[<data>jsonget[url]!is[blank]]\\\" variable=\\\"url\\\">  \\n\\t\\t<$action-setfield $tiddler=\\\"$:/state/gdstudio-api/music-url\\\" text=<<url>>/>  \\n\\t</$list>  \\n\\\\end\"},\"请求歌曲url返回参数\":{\"title\":\"请求歌曲url返回参数\",\"code-body\":\"yes\",\"created\":\"20250530075136320\",\"modified\":\"20250530075202186\",\"tags\":\"洛雪音乐\",\"text\":\"{\\n  \\\"code\\\": 0,\\n  \\\"msg\\\": \\\"success\\\",\\n  \\\"data\\\": \\\"http:\\\\/\\\\/m701.music.126.net\\\\/20250530161457\\\\/864a7c34f51b93cfb262a3f02067bf70\\\\/jdymusic\\\\/obj\\\\/wo3DlMOGwrbDjj7DisKw\\\\/7797582220\\\\/9a45\\\\/b69b\\\\/b41a\\\\/ed55008675c3035d7e03e68b5f7ff9b8.mp3\\\",\\n  \\\"extra\\\": {\\n    \\\"cache\\\": false,\\n    \\\"quality\\\": {\\n      \\\"target\\\": \\\"320k\\\",\\n      \\\"result\\\": \\\"320k\\\"\\n    },\\n    \\\"expire\\\": {\\n      \\\"time\\\": 1748592597,\\n      \\\"canExpire\\\": true\\n    }\\n  }\\n}\"},\"调用自定义播放器-固定页面\":{\"title\":\"调用自定义播放器-固定页面\",\"created\":\"20250602074254547\",\"modified\":\"20250602074431713\",\"tags\":\"\",\"text\":\"<$reveal state=\\\"$:/state/audio-player-mode\\\" type=\\\"match\\\" text=\\\"compact\\\">  \\n<div class=\\\"audio-player-compact\\\">  \\n<div class=\\\"gdstudio-audio-position\\\">  \\n<$transclude tiddler=\\\"调用自定义播放器\\\"/>  \\n<$transclude tiddler=\\\"添加歌词同步功能\\\"/>  \\n</div>  \\n</div>  \\n</$reveal>  \\n  \\n<$reveal state=\\\"$:/state/audio-player-mode\\\" type=\\\"match\\\" text=\\\"auto\\\">  \\n<div class=\\\"audio-player-auto\\\">  \\n<div class=\\\"gdstudio-audio-position\\\">  \\n<$transclude tiddler=\\\"调用自定义播放器\\\"/>  \\n<$transclude tiddler=\\\"添加歌词同步功能\\\"/>  \\n</div>  \\n</div>  \\n</$reveal>  \\n  \\n<$reveal state=\\\"$:/state/audio-player-mode\\\" type=\\\"match\\\" text=\\\"full\\\">  \\n<!-- 完整模式不添加任何额外类，使用原始样式 -->  \\n<div class=\\\"gdstudio-audio-position\\\">  \\n<$transclude tiddler=\\\"调用自定义播放器\\\"/>  \\n<$transclude tiddler=\\\"添加歌词同步功能\\\"/>  \\n</div>  \\n</$reveal>\\n\"},\"调用自定义播放器-本地音乐\":{\"title\":\"调用自定义播放器-本地音乐\",\"created\":\"20250701094830002\",\"modified\":\"20250703020413309\",\"tags\":\"音乐播放器 gdstudio 本地音乐\",\"text\":\"<$gdstudio-audio\\n    id=\\\"gdstudio-music-player-local\\\"\\n    cover-url={{本地音乐链接和信息!!海报url}}\\n    music-url={{本地音乐链接和信息!!歌曲url}}\\n    song-name={{本地音乐链接和信息!!歌曲名}}\\n    artist={{本地音乐链接和信息!!歌手名}}\\n/>\\n\"},\"调用自定义播放器-精简模式\":{\"title\":\"调用自定义播放器-精简模式\",\"created\":\"20250612031733855\",\"modified\":\"20250612031815465\",\"tags\":\"音乐 gdstudio\",\"text\":\"<$radio tiddler=\\\"$:/state/audio-player-mode\\\" field=\\\"text\\\" value=\\\"auto\\\"> 自动模式</$radio>  \\n<$radio tiddler=\\\"$:/state/audio-player-mode\\\" field=\\\"text\\\" value=\\\"compact\\\"> 精简模式</$radio>    \\n<$radio tiddler=\\\"$:/state/audio-player-mode\\\" field=\\\"text\\\" value=\\\"full\\\"> 完整模式</$radio>  \"},\"调用自定义播放器-自定义音乐\":{\"title\":\"调用自定义播放器-自定义音乐\",\"created\":\"20250607085118142\",\"modified\":\"20250607090853884\",\"tags\":\"酷狗音乐api\",\"text\":\"单独填写url：\\n\\n<$gdstudio-audio         \\n    cover-url=\\\"http://singerimg.kugou.com/uploadpic/softhead/{size}/20240409/20240409161055874199.jpg\\\"\\n    music-url=\\\"https://sharefs.tx.kugou.com/202506071650/bdca807c5ac92230a49969a4c99d6e0a/v3/61a8c6a5ba335feeff0b0729438af472/yp/full/ap1000_us0_pi409_s3756821329.mp3\\\"\\n    song-name=\\\"所倾共赴\\\"\\n    artist=\\\"杨秉音\\\"\\n/>\\n\\n只更改音乐url，如果 [[$:/state/gdstudio-api/music-url]] 为空则使用 [[$:/state/kugou-api/music-url]]\\n\\n<$gdstudio-audio         \\n    cover-url={{$:/state/gdstudio-api/cover-url}}      \\n    music-url={{{ [{$:/state/gdstudio-api/music-url}!is[blank]] ~[{$:/state/kugou-api/music-url}] }}}\\n    song-name={{{ [{$:/state/gdstudio-api/searchResults}jsonget[{$:/state/gdstudio-api/track-id}],[name]] }}}      \\n    artist={{{ [{$:/state/gdstudio-api/searchResults}jsonget[{$:/state/gdstudio-api/track-id}],[artist]] }}} \\n/>\\n\"},\"调用自定义播放器\":{\"title\":\"调用自定义播放器\",\"created\":\"20250530105433654\",\"modified\":\"20250530144228373\",\"tags\":\"音乐播放器 gdstudio\",\"text\":\"<$gdstudio-audio\\n    id=\\\"gdstudio-music-player\\\"\\n    cover-url={{$:/state/gdstudio-api/cover-url}}      \\n    music-url={{{ [{$:/state/gdstudio-api/music-url}!is[blank]] ~[{$:/state/lxmusic/music-url}] +[first[]] }}}\\n    song-name={{{ [{$:/state/gdstudio-api/searchResults}jsonget[{$:/state/gdstudio-api/track-id}],[name]] }}}      \\n    artist={{{ [{$:/state/gdstudio-api/searchResults}jsonget[{$:/state/gdstudio-api/track-id}],[artist]] }}}      \\n/>\\n\"},\"酷狗音乐api\":{\"title\":\"酷狗音乐api\",\"created\":\"20250607085506954\",\"list\":\"$:/config/kugou-cors-enabled $:/state/kugou-api/music-url $:/state/kugou-api/searchResults 测试酷狗api搜索 酷狗音乐api测试 调用自定义播放器-自定义音乐 酷狗音乐api搜索procedure-cors版 cors-proxy.js代码备份 [[新条目 1]] cors-proxy.js test-interface\",\"modified\":\"20250609030913045\",\"tags\":\"导出\",\"type\":\"\",\"text\":\"<<filter-pill \\\"[tag[酷狗音乐api]][[酷狗音乐api]]\\\" 酷狗音乐api>>\"},\"酷狗音乐api搜索procedure-cors版\":{\"title\":\"酷狗音乐api搜索procedure-cors版\",\"code-body\":\"yes\",\"created\":\"20250609024149395\",\"modified\":\"20250609030149922\",\"tags\":\"酷狗音乐api $:/tags/Macro\",\"text\":\"\\\\procedure kugou-search-output()      \\n<$action-setfield $tiddler=\\\"$:/state/kugou-api/searchResults\\\" text=<<data>>/>      \\n\\\\end    \\n    \\n\\\\procedure kugou-search-http-get()      \\n\\t<$action-sendmessage      \\n\\t\\t$message=\\\"tm-http-request\\\"      \\n\\t\\turl=\\\"http://mobilecdn.kugou.com/api/v3/search/song\\\"    \\n\\t\\tquery-format=\\\"json\\\"    \\n\\t\\tquery-keyword={{$:/state/gdstudio-api/keyword}}      \\n\\t\\tquery-page={{$:/state/gdstudio-api/page-num}}      \\n\\t\\tbind-status=\\\"$:/state/kugou-api/status\\\"      \\n\\t\\tbind-progress=\\\"$:/state/kugou-api/progress\\\"    \\n\\t\\tmethod=\\\"GET\\\"      \\n\\t\\toncompletion=<<kugou-search-output>>      \\n\\t/>      \\n\\\\end\"},\"酷狗音乐api测试\":{\"title\":\"酷狗音乐api测试\",\"created\":\"20250607084139424\",\"modified\":\"20250609021634722\",\"tags\":\"酷狗音乐api\",\"text\":\"添加公共 CORS 代理服务\\n\\n```tw\\nhttps://cors-anywhere.herokuapp.com/\\n```\\n\\n搜索歌曲\\n\\n```tw\\nhttp://mobilecdn.kugou.com/api/v3/search/song?format=json&keyword={关键字}&page={页数量}\\n```\\n\\nhttp://mobilecdn.kugou.com/api/v3/search/song?format=json&keyword=所倾共赴&page=1\\n\\n获取歌曲url\\n\\n```tw\\nhttps://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&hash={hash}\\n```\\n\\nhttps://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&hash=61a8c6a5ba335feeff0b0729438af472\\n\\nhttps://sharefs.tx.kugou.com/202506071650/bdca807c5ac92230a49969a4c99d6e0a/v3/61a8c6a5ba335feeff0b0729438af472/yp/full/ap1000_us0_pi409_s3756821329.mp3\\n\\n原贴：\\n\\nhttps://blog.csdn.net/2301_78245299/article/details/140352615\"},\"酷狗音乐api获取歌曲url procedure-cors版\":{\"title\":\"酷狗音乐api获取歌曲url procedure-cors版\",\"code-body\":\"yes\",\"created\":\"20250609032607021\",\"modified\":\"20250609033815808\",\"tags\":\"酷狗音乐api $:/tags/Macro\",\"text\":\"<!-- 提取hash参数的程序 -->\\n\\n\\\\procedure kugou-extract-hash()  \\n<$list filter=\\\"[{$:/state/kugou-api/searchResults}jsonget[data],[info],[0],[hash]!is[blank]]\\\" variable=\\\"hash\\\">  \\n    <$action-setfield $tiddler=\\\"$:/state/kugou-api/hash\\\" text=<<hash>>/>  \\n</$list>  \\n\\\\end\\n\\n\\\\procedure kugou-get-music-url()  \\n<$action-sendmessage  \\n    $message=\\\"tm-http-request\\\"  \\n    url=\\\"https://m.kugou.com/app/i/getSongInfo.php\\\"  \\n    query-cmd=\\\"playInfo\\\"  \\n    query-hash={{$:/state/kugou-api/hash}}  \\n    method=\\\"GET\\\"  \\n    oncompletion=<<kugou-extract-music-url>>  \\n/>  \\n\\\\end  \\n  \\n\\\\procedure kugou-extract-music-url()  \\n<$list filter=\\\"[<data>jsonget[url]!is[blank]]\\\" variable=\\\"url\\\">  \\n    <$action-setfield $tiddler=\\\"$:/state/kugou-api/music-url\\\" text=<<url>>/>  \\n</$list>  \\n\\\\end\"},\"音乐搜索界面优化版\":{\"title\":\"音乐搜索界面优化版\",\"created\":\"20250528084519091\",\"modified\":\"20250528132403678\",\"tags\":\"音乐 gdstudio\",\"text\":\"音乐源：<$select tiddler=\\\"$:/state/gdstudio-api/music-source\\\" default=\\\"\\\">  \\n<option value=\\\"netease\\\">网易云音乐 (netease)</option>  \\n<option value=\\\"tencent\\\">QQ音乐 (tencent)</option>  \\n<option value=\\\"kuwo\\\">酷我音乐 (kuwo)</option> \\n<option value=\\\"kugou\\\">酷狗音乐 (kugou)</option>  \\n<option value=\\\"migu\\\">咪咕音乐 (migu)</option>   \\n<option value=\\\"ximalaya\\\">喜马拉雅 (ximalaya)</option>  \\n<option value=\\\"tidal\\\">Tidal</option>  \\n<option value=\\\"spotify\\\">Spotify</option>  \\n<option value=\\\"ytmusic\\\">YouTube Music</option>  \\n<option value=\\\"qobuz\\\">Qobuz</option>  \\n<option value=\\\"joox\\\">JOOX</option>  \\n<option value=\\\"deezer\\\">Deezer</option>  \\n</$select> 关键词：<$edit-text tiddler=\\\"$:/state/gdstudio-api/keyword\\\" default=\\\"\\\" tag=\\\"input\\\"/> <$button class=\\\"tc-btn-invisible music-player-common-btn\\\" tooltip=\\\"搜索\\\">搜索\\n<<gdstudio-search-http-get>>\\n  <$reveal state=\\\"$:/state/gdstudio-api/music-source\\\" type=\\\"match\\\" text=\\\"kugou\\\">\\n  <!-- 先清空新增的酷狗api缓存 问题已解决，不需要了\\n  <$action-setfield $tiddler=\\\"$:/state/kugou-api/searchResults\\\" text=\\\"\\\"/>\\n  <$action-setfield $tiddler=\\\"$:/state/kugou-api/hash\\\" text=\\\"\\\"/>\\n  <$action-setfield $tiddler=\\\"$:/state/kugou-api/music-url\\\" text=\\\"\\\"/>\\n      <<kugou-search-http-get>>  \\n      <<kugou-extract-hash>>\\n -->\\n  </$reveal>\\n</$button>\\n\\n每页数量：<$select tiddler=\\\"$:/state/gdstudio-api/page-length\\\" default=\\\"10\\\">\\n<option value=\\\"10\\\">10</option>\\n<option value=\\\"20\\\">20</option></$select>\\n页码：<$select tiddler=\\\"$:/state/gdstudio-api/page-num\\\" default=\\\"1\\\">\\n<option value=\\\"1\\\">1</option>\\n<option value=\\\"2\\\">2</option></$select>\\n\"},\"音乐搜索界面样式css\":{\"title\":\"音乐搜索界面样式css\",\"created\":\"20250528091023127\",\"modified\":\"20250528132403677\",\"tags\":\"音乐 $:/tags/Stylesheet gdstudio\",\"text\":\".gdstudio-button {\\n  opacity: 0.5;\\n  transition: opacity 0.5s ease-in-out;\\n}.gdstudio-button:hover {\\n  opacity: 1;\\n}.gdstudio-song-item {\\n  display: flex; \\n  justify-content: space-between; \\n  align-items: center; \\n  padding: 10px; \\n  border-bottom: \\n  1px solid #333333;\\n}/* 定义大屏宽度 */\\n.large-screen {\\n  width: 1000px;\\n}/* 定义小屏宽度 */\\n.small-screen {\\n  width: 350px;\\n}/* 媒体查询，大屏 */\\n@media (min-width: 768px) {\\n.gdstudio-song-item {\\n  margin: 0 5%; /* 添加左右边距 */\\n}\\n}/* 媒体查询，小屏 */\\n@media (max-width: 767px) {\\n.gdstudio-song-item {\\n  margin: 0 10%; /* 添加左右边距 */\\n}\\n}\\n\"},\"音乐播放器普通按钮样式css\":{\"title\":\"音乐播放器普通按钮样式css\",\"created\":\"20250703024042977\",\"modified\":\"20250703024201618\",\"tags\":\"样式 $:/tags/Stylesheet 音乐 gdstudio\",\"text\":\".music-player-common-btn {\\n  opacity: 0.5;\\n  transition: opacity 0.3s ease;\\n  -webkit-tap-highlight-color: transparent;\\n  box-shadow: none;\\n  border: 1px solid #000;\\n  border-radius: 8px;\\n  text-align: center;\\n  font-size: 15px; /* 调整字体大小 */\\n  padding: 3px 6px; /* 增加内边距，让按钮更舒适 */\\n  height: auto; /* 根据内容自动调整高度 */\\n  line-height: 1; /* 调整行高，与字体大小保持一致 */\\n  display: inline-block;\\n  cursor: pointer;\\n}\\n\\n.music-player-common-btn:hover {\\n  opacity: 1;\\n}\"},\"音乐解析器网址\":{\"title\":\"音乐解析器网址\",\"created\":\"20250609065055214\",\"modified\":\"20250609065154631\",\"tags\":\"洛雪音乐\",\"text\":\"https://musicjx.com/\\n\\n示例：\\n\\n网易：http://music.163.com/#/song?id=25906124\\n\\nＱＱ：http://y.qq.com/n/yqq/song/002B2EAA3brD5b.html\\n\\n酷狗：http://www.kugou.com/song/#hash=08228af3cb404e8a4e7e9871bf543ff6\\n\\n酷我：http://www.kuwo.cn/yinyue/382425/\\n\\n虾米：http://www.xiami.com/song/2113248\\n\\n百度：http://music.baidu.com/song/266069\\n\\n一听：http://www.1ting.com/player/b6/player_357838.html\\n\\n咪咕：http://music.migu.cn/v2/music/song/477803\\n\\n荔枝：http://www.lizhi.fm/1947925/2498707770886461446\\n\\n蜻蜓：http://www.qingting.fm/channels/158696/programs/5266259\\n\\n喜马拉雅：http://www.ximalaya.com/51701370/sound/24755731\\n\\n全民K歌 (shareuid)：http://kg.qq.com/node/personal?uid=619a958c25283e88\\n\\n全民K歌 (shareid)：https://kg.qq.com/node/play?s=FA3h1gFhd6Vk7Ft4\\n\\n5sing原创：http://5sing.kugou.com/yc/3082899.html\\n\\n5sing翻唱：http://5sing.kugou.com/fc/14369766.html\\n\"}}}"}