{"title":"$:/plugins/sq/node-files-PUT-support","description":"EXPERIMENTAL node.js support for PUT uploader","name":"Node.js files PUT uploader support","author":"Saq Imtiaz","core-version":">=5.1.23","list":"readme","dependents":"$:/plugins/sq/file-uploads-PUT $:/plugins/commons/file-uploads","parent-plugin":"$:/plugins/commons/file-uploads","version":"0.1.1","plugin-type":"plugin","type":"application/json","text":"{\"tiddlers\":{\"$:/config/file-uploads/PUT/servertype\":{\"title\":\"$:/config/file-uploads/PUT/servertype\",\"text\":\"node.js\"},\"$:/plugins/sq/node-files-PUT-support/server-route-upload.js\":{\"title\":\"$:/plugins/sq/node-files-PUT-support/server-route-upload.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/node-files-PUT-support/server-route-upload.js\\ntype: application/javascript\\nmodule-type: route\\n\\nPOST /^\\\\/files\\\\/(.+)$/\\n\\nUpload binary files\\n\\n\\\\*/\\n(function() {\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nconst fs = require('fs')\\nconst path = require('path')\\nconst buffer = require('buffer')\\n\\n//https://github.com/Jermolene/TiddlyWiki5/blob/master/core/modules/server/routes/put-tiddler.js\\n\\nexports.method = \\\"PUT\\\";\\nexports.platforms = [\\\"node\\\"];\\nexports.path = /^\\\\/files\\\\/(.+)$/;\\nexports.bodyFormat = \\\"stream\\\";\\nexports.handler = function(request,response,state) {\\n\\n\\ttry {\\n\\t\\t\\n\\t\\tvar body = Buffer.from([]);\\n\\t\\trequest.on(\\\"data\\\",function(data) {\\n\\t\\t\\tbody = Buffer.concat([body,data]);\\n\\t\\t\\tif(body.length > 1e7) {\\n\\t\\t\\t\\tresponse.writeHead(413, {'Content-Type': 'text/plain'}).end();\\n\\t\\t\\t\\trequest.connection.destroy();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\trequest.on(\\\"end\\\",function() {\\n\\t\\t\\tvar title = state.params[0];\\n\\t\\t\\ttry {\\n\\t\\t\\t\\ttitle = decodeURIComponent(title);\\n\\t\\t\\t} catch(e) {\\n\\t\\t\\t}\\n\\t\\t\\tvar\\tfilesPath = path.resolve($tw.boot.wikiTiddlersPath, \\\"../files\\\",title);\\n\\t\\t\\t//what happens if a different path is used from the server for the URL?\\n\\t\\t\\t//\\thave a rule that it needs to start with files for node.js\\n\\t\\t\\t$tw.utils.createDirectory(path.dirname(filesPath));\\n\\n\\t\\t\\tfs.writeFile(filesPath,body,function(err){\\n\\t\\t\\t\\tif(err) {\\n\\t\\t\\t\\t\\tconsole.log(err);\\n\\t\\t\\t\\t\\tthrow err;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tconsole.log(`External file saved: ${title}`);\\n\\t\\t\\t\\t\\tresponse.setHeader(\\\"Content-Type\\\",\\\"application/json\\\");\\n\\t\\t\\t\\t\\tresponse.end(JSON.stringify({\\n\\t\\t\\t\\t\\t\\t\\\"status\\\": \\\"204\\\",\\n\\t\\t\\t\\t\\t\\t\\\"title\\\": title,\\n\\t\\t\\t\\t\\t\\t\\\"_canonical_uri\\\": request.url //relative? we don't need this as  we set it in the client\\n\\t\\t\\t\\t\\t}));\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t});\\n\\t} catch (err) {\\n\\t\\tconsole.log('Error parsing or writing uploaded file', err, {'level': 2});\\n\\t\\tresponse.writeHead(400);\\n\\t\\tresponse.end();\\n\\t}\\n};\\n\\n}());\\n\\n//tiddlywiki . --listen port=7555\\n\",\"type\":\"application/javascript\",\"module-type\":\"route\"},\"$:/plugins/sq/node-files-PUT-support/readme\":{\"title\":\"$:/plugins/sq/node-files-PUT-support/readme\",\"text\":\"@@color:red;''Highly experimental - no support available. Use at your own risk.''@@ \\n\\n* PUT support for the files directory on node.js. Allows the PUT uploader to be used with ~TiddlyWiki on node.js\\n** Enables PUT requests to save files to the `files` directory that is server by the TW node.js server\\n* The directory for uploaded files must be set to `files` (the default).\"}}}"}