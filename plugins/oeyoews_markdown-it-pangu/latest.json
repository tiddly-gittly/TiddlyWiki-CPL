{"title":"$:/plugins/oeyoews/markdown-it-pangu","description":"markdown-it-pangu","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"markdown-it-pangu","meat#disabled":"yes","qrcode":"yes","created":"2023-12-28","dependents":"","parent-plugin":"$:/plugins/oeyoews/markdown-extensions-startup","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/markdown-it-pangu/readme\":{\"title\":\"$:/plugins/oeyoews/markdown-it-pangu/readme\",\"text\":\"<!-- plugin template readme -->\\n\\nmarkdown it pangu\\n\\n<!-- your plugin motivation, or why you write this plugin -->\\n\",\"type\":\"text/markdown\",\"description\":\"markdown-it-pangu\"},\"$:/plugins/oeyoews/markdown-it-pangu/markdown-it-pangu.js\":{\"title\":\"$:/plugins/oeyoews/markdown-it-pangu/markdown-it-pangu.js\",\"text\":\"'use strict';\\nfunction getDefaultExportFromCjs(i) {\\n  return i && i.__esModule && Object.prototype.hasOwnProperty.call(i, 'default')\\n    ? i.default\\n    : i;\\n}\\nfunction getAugmentedNamespace(i) {\\n  if (i.__esModule) return i;\\n  var q = i.default;\\n  if (typeof q == 'function') {\\n    var p = function a() {\\n      return this instanceof a\\n        ? Reflect.construct(q, arguments, this.constructor)\\n        : q.apply(this, arguments);\\n    };\\n    p.prototype = q.prototype;\\n  } else p = {};\\n  return (\\n    Object.defineProperty(p, '__esModule', { value: !0 }),\\n    Object.keys(i).forEach(function (a) {\\n      var s = Object.getOwnPropertyDescriptor(i, a);\\n      Object.defineProperty(\\n        p,\\n        a,\\n        s.get\\n          ? s\\n          : {\\n              enumerable: !0,\\n              get: function () {\\n                return i[a];\\n              }\\n            }\\n      );\\n    }),\\n    p\\n  );\\n}\\nvar pangu_min = { exports: {} };\\n/*!\\n * pangu.js\\n * --------\\n * @version: 4.0.7\\n * @homepage: https://github.com/vinta/pangu.js\\n * @license: MIT\\n * @author: Vinta Chen <vinta.chen@gmail.com> (https://github.com/vinta)\\n */ (function (i, q) {\\n  (function (p, a) {\\n    i.exports = a();\\n  })(window, function () {\\n    return (function (p) {\\n      var a = {};\\n      function s(n) {\\n        if (a[n]) return a[n].exports;\\n        var o = (a[n] = { i: n, l: !1, exports: {} });\\n        return p[n].call(o.exports, o, o.exports, s), (o.l = !0), o.exports;\\n      }\\n      return (\\n        (s.m = p),\\n        (s.c = a),\\n        (s.d = function (n, o, u) {\\n          s.o(n, o) || Object.defineProperty(n, o, { enumerable: !0, get: u });\\n        }),\\n        (s.r = function (n) {\\n          typeof Symbol < 'u' &&\\n            Symbol.toStringTag &&\\n            Object.defineProperty(n, Symbol.toStringTag, { value: 'Module' }),\\n            Object.defineProperty(n, '__esModule', { value: !0 });\\n        }),\\n        (s.t = function (n, o) {\\n          if (\\n            (1 & o && (n = s(n)),\\n            8 & o || (4 & o && typeof n == 'object' && n && n.__esModule))\\n          )\\n            return n;\\n          var u = Object.create(null);\\n          if (\\n            (s.r(u),\\n            Object.defineProperty(u, 'default', { enumerable: !0, value: n }),\\n            2 & o && typeof n != 'string')\\n          )\\n            for (var m in n)\\n              s.d(\\n                u,\\n                m,\\n                function (y) {\\n                  return n[y];\\n                }.bind(null, m)\\n              );\\n          return u;\\n        }),\\n        (s.n = function (n) {\\n          var o =\\n            n && n.__esModule\\n              ? function () {\\n                  return n.default;\\n                }\\n              : function () {\\n                  return n;\\n                };\\n          return s.d(o, 'a', o), o;\\n        }),\\n        (s.o = function (n, o) {\\n          return Object.prototype.hasOwnProperty.call(n, o);\\n        }),\\n        (s.p = ''),\\n        s((s.s = 0))\\n      );\\n    })([\\n      function (p, a, s) {\\n        var n, o, u;\\n        (o = []),\\n          (u =\\n            typeof (n = function () {\\n              function m(v) {\\n                return (m =\\n                  typeof Symbol == 'function' &&\\n                  typeof Symbol.iterator == 'symbol'\\n                    ? function (g) {\\n                        return typeof g;\\n                      }\\n                    : function (g) {\\n                        return g &&\\n                          typeof Symbol == 'function' &&\\n                          g.constructor === Symbol &&\\n                          g !== Symbol.prototype\\n                          ? 'symbol'\\n                          : typeof g;\\n                      })(v);\\n              }\\n              function y(v, g) {\\n                for (var h = 0; h < g.length; h++) {\\n                  var T = g[h];\\n                  (T.enumerable = T.enumerable || !1),\\n                    (T.configurable = !0),\\n                    'value' in T && (T.writable = !0),\\n                    Object.defineProperty(v, T.key, T);\\n                }\\n              }\\n              function e(v, g) {\\n                return !g || (m(g) !== 'object' && typeof g != 'function')\\n                  ? (function (h) {\\n                      if (h === void 0)\\n                        throw new ReferenceError(\\n                          \\\"this hasn't been initialised - super() hasn't been called\\\"\\n                        );\\n                      return h;\\n                    })(v)\\n                  : g;\\n              }\\n              function S(v) {\\n                return (S = Object.setPrototypeOf\\n                  ? Object.getPrototypeOf\\n                  : function (g) {\\n                      return g.__proto__ || Object.getPrototypeOf(g);\\n                    })(v);\\n              }\\n              function O(v, g) {\\n                return (O =\\n                  Object.setPrototypeOf ||\\n                  function (h, T) {\\n                    return (h.__proto__ = T), h;\\n                  })(v, g);\\n              }\\n              var x = (function (v) {\\n                  function g() {\\n                    var c;\\n                    return (\\n                      (function (l, r) {\\n                        if (!(l instanceof r))\\n                          throw new TypeError(\\n                            'Cannot call a class as a function'\\n                          );\\n                      })(this, g),\\n                      ((c = e(this, S(g).call(this))).blockTags =\\n                        /^(div|p|h1|h2|h3|h4|h5|h6)$/i),\\n                      (c.ignoredTags = /^(script|code|pre|textarea)$/i),\\n                      (c.presentationalTags = /^(b|code|del|em|i|s|strong)$/i),\\n                      (c.spaceLikeTags = /^(br|hr|i|img|pangu)$/i),\\n                      (c.spaceSensitiveTags = /^(a|del|pre|s|strike|u)$/i),\\n                      (c.isAutoSpacingPageExecuted = !1),\\n                      c\\n                    );\\n                  }\\n                  return (\\n                    (function (c, l) {\\n                      if (typeof l != 'function' && l !== null)\\n                        throw new TypeError(\\n                          'Super expression must either be null or a function'\\n                        );\\n                      (c.prototype = Object.create(l && l.prototype, {\\n                        constructor: {\\n                          value: c,\\n                          writable: !0,\\n                          configurable: !0\\n                        }\\n                      })),\\n                        l && O(c, l);\\n                    })(g, v),\\n                    (h = g),\\n                    (T = [\\n                      {\\n                        key: 'isContentEditable',\\n                        value: function (c) {\\n                          return (\\n                            c.isContentEditable ||\\n                            (c.getAttribute &&\\n                              c.getAttribute('g_editable') === 'true')\\n                          );\\n                        }\\n                      },\\n                      {\\n                        key: 'isSpecificTag',\\n                        value: function (c, l) {\\n                          return c && c.nodeName && c.nodeName.search(l) >= 0;\\n                        }\\n                      },\\n                      {\\n                        key: 'isInsideSpecificTag',\\n                        value: function (c, l) {\\n                          var r =\\n                              arguments.length > 2 &&\\n                              arguments[2] !== void 0 &&\\n                              arguments[2],\\n                            d = c;\\n                          if (r && this.isSpecificTag(d, l)) return !0;\\n                          for (; d.parentNode; )\\n                            if (((d = d.parentNode), this.isSpecificTag(d, l)))\\n                              return !0;\\n                          return !1;\\n                        }\\n                      },\\n                      {\\n                        key: 'canIgnoreNode',\\n                        value: function (c) {\\n                          var l = c;\\n                          if (\\n                            l &&\\n                            (this.isSpecificTag(l, this.ignoredTags) ||\\n                              this.isContentEditable(l))\\n                          )\\n                            return !0;\\n                          for (; l.parentNode; )\\n                            if (\\n                              (l = l.parentNode) &&\\n                              (this.isSpecificTag(l, this.ignoredTags) ||\\n                                this.isContentEditable(l))\\n                            )\\n                              return !0;\\n                          return !1;\\n                        }\\n                      },\\n                      {\\n                        key: 'isFirstTextChild',\\n                        value: function (c, l) {\\n                          for (var r = c.childNodes, d = 0; d < r.length; d++) {\\n                            var w = r[d];\\n                            if (\\n                              w.nodeType !== Node.COMMENT_NODE &&\\n                              w.textContent\\n                            )\\n                              return w === l;\\n                          }\\n                          return !1;\\n                        }\\n                      },\\n                      {\\n                        key: 'isLastTextChild',\\n                        value: function (c, l) {\\n                          for (\\n                            var r = c.childNodes, d = r.length - 1;\\n                            d > -1;\\n                            d--\\n                          ) {\\n                            var w = r[d];\\n                            if (\\n                              w.nodeType !== Node.COMMENT_NODE &&\\n                              w.textContent\\n                            )\\n                              return w === l;\\n                          }\\n                          return !1;\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingNodeByXPath',\\n                        value: function (c, l) {\\n                          if (\\n                            l instanceof Node &&\\n                            !(l instanceof DocumentFragment)\\n                          )\\n                            for (\\n                              var r,\\n                                d,\\n                                w = document.evaluate(\\n                                  c,\\n                                  l,\\n                                  null,\\n                                  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\\n                                  null\\n                                ),\\n                                E = w.snapshotLength - 1;\\n                              E > -1;\\n                              --E\\n                            ) {\\n                              if (\\n                                ((r = w.snapshotItem(E)),\\n                                this.isSpecificTag(\\n                                  r.parentNode,\\n                                  this.presentationalTags\\n                                ) &&\\n                                  !this.isInsideSpecificTag(\\n                                    r.parentNode,\\n                                    this.ignoredTags\\n                                  ))\\n                              ) {\\n                                var R = r.parentNode;\\n                                if (R.previousSibling) {\\n                                  var N = R.previousSibling;\\n                                  if (N.nodeType === Node.TEXT_NODE) {\\n                                    var V =\\n                                        N.data.substr(-1) +\\n                                        r.data.toString().charAt(0),\\n                                      I = this.spacing(V);\\n                                    V !== I &&\\n                                      (N.data = ''.concat(N.data, ' '));\\n                                  }\\n                                }\\n                                if (R.nextSibling) {\\n                                  var t = R.nextSibling;\\n                                  if (t.nodeType === Node.TEXT_NODE) {\\n                                    var f =\\n                                        r.data.substr(-1) +\\n                                        t.data.toString().charAt(0),\\n                                      D = this.spacing(f);\\n                                    f !== D && (t.data = ' '.concat(t.data));\\n                                  }\\n                                }\\n                              }\\n                              if (this.canIgnoreNode(r)) d = r;\\n                              else {\\n                                var L = this.spacing(r.data);\\n                                if ((r.data !== L && (r.data = L), d)) {\\n                                  if (\\n                                    r.nextSibling &&\\n                                    r.nextSibling.nodeName.search(\\n                                      this.spaceLikeTags\\n                                    ) >= 0\\n                                  ) {\\n                                    d = r;\\n                                    continue;\\n                                  }\\n                                  var P =\\n                                      r.data.toString().substr(-1) +\\n                                      d.data.toString().substr(0, 1),\\n                                    B = this.spacing(P);\\n                                  if (B !== P) {\\n                                    for (\\n                                      var A = d;\\n                                      A.parentNode &&\\n                                      A.nodeName.search(\\n                                        this.spaceSensitiveTags\\n                                      ) === -1 &&\\n                                      this.isFirstTextChild(A.parentNode, A);\\n\\n                                    )\\n                                      A = A.parentNode;\\n                                    for (\\n                                      var k = r;\\n                                      k.parentNode &&\\n                                      k.nodeName.search(\\n                                        this.spaceSensitiveTags\\n                                      ) === -1 &&\\n                                      this.isLastTextChild(k.parentNode, k);\\n\\n                                    )\\n                                      k = k.parentNode;\\n                                    if (\\n                                      k.nextSibling &&\\n                                      k.nextSibling.nodeName.search(\\n                                        this.spaceLikeTags\\n                                      ) >= 0\\n                                    ) {\\n                                      d = r;\\n                                      continue;\\n                                    }\\n                                    if (\\n                                      k.nodeName.search(this.blockTags) === -1\\n                                    )\\n                                      if (\\n                                        A.nodeName.search(\\n                                          this.spaceSensitiveTags\\n                                        ) === -1\\n                                      )\\n                                        A.nodeName.search(this.ignoredTags) ===\\n                                          -1 &&\\n                                          A.nodeName.search(this.blockTags) ===\\n                                            -1 &&\\n                                          (d.previousSibling\\n                                            ? d.previousSibling.nodeName.search(\\n                                                this.spaceLikeTags\\n                                              ) === -1 &&\\n                                              (d.data = ' '.concat(d.data))\\n                                            : this.canIgnoreNode(d) ||\\n                                              (d.data = ' '.concat(d.data)));\\n                                      else if (\\n                                        k.nodeName.search(\\n                                          this.spaceSensitiveTags\\n                                        ) === -1\\n                                      )\\n                                        r.data = ''.concat(r.data, ' ');\\n                                      else {\\n                                        var F = document.createElement('pangu');\\n                                        (F.innerHTML = ' '),\\n                                          A.previousSibling\\n                                            ? A.previousSibling.nodeName.search(\\n                                                this.spaceLikeTags\\n                                              ) === -1 &&\\n                                              A.parentNode.insertBefore(F, A)\\n                                            : A.parentNode.insertBefore(F, A),\\n                                          F.previousElementSibling ||\\n                                            (F.parentNode &&\\n                                              F.parentNode.removeChild(F));\\n                                      }\\n                                  }\\n                                }\\n                                d = r;\\n                              }\\n                            }\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingNode',\\n                        value: function (c) {\\n                          var l = './/*/text()[normalize-space(.)]';\\n                          c.children &&\\n                            c.children.length === 0 &&\\n                            (l = './/text()[normalize-space(.)]'),\\n                            this.spacingNodeByXPath(l, c);\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingElementById',\\n                        value: function (c) {\\n                          var l = 'id(\\\"'.concat(c, '\\\")//text()');\\n                          this.spacingNodeByXPath(l, document);\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingElementByClassName',\\n                        value: function (c) {\\n                          var l =\\n                            '//*[contains(concat(\\\" \\\", normalize-space(@class), \\\" \\\"), \\\"'.concat(\\n                              c,\\n                              '\\\")]//text()'\\n                            );\\n                          this.spacingNodeByXPath(l, document);\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingElementByTagName',\\n                        value: function (c) {\\n                          var l = '//'.concat(c, '//text()');\\n                          this.spacingNodeByXPath(l, document);\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingPageTitle',\\n                        value: function () {\\n                          this.spacingNodeByXPath(\\n                            '/html/head/title/text()',\\n                            document\\n                          );\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingPageBody',\\n                        value: function () {\\n                          var c = '/html/body//*/text()[normalize-space(.)]';\\n                          ['script', 'style', 'textarea'].forEach(function (l) {\\n                            c = ''\\n                              .concat(\\n                                c,\\n                                '[translate(name(..),\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\",\\\"abcdefghijklmnopqrstuvwxyz\\\")!=\\\"'\\n                              )\\n                              .concat(l, '\\\"]');\\n                          }),\\n                            this.spacingNodeByXPath(c, document);\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingPage',\\n                        value: function () {\\n                          this.spacingPageTitle(), this.spacingPageBody();\\n                        }\\n                      },\\n                      {\\n                        key: 'autoSpacingPage',\\n                        value: function () {\\n                          var c =\\n                              arguments.length > 0 && arguments[0] !== void 0\\n                                ? arguments[0]\\n                                : 1e3,\\n                            l =\\n                              arguments.length > 1 && arguments[1] !== void 0\\n                                ? arguments[1]\\n                                : 500,\\n                            r =\\n                              arguments.length > 2 && arguments[2] !== void 0\\n                                ? arguments[2]\\n                                : 2e3;\\n                          if (\\n                            document.body instanceof Node &&\\n                            !this.isAutoSpacingPageExecuted\\n                          ) {\\n                            this.isAutoSpacingPageExecuted = !0;\\n                            var d = this,\\n                              w = (function (f) {\\n                                var D = this,\\n                                  L = arguments,\\n                                  P = !1;\\n                                return function () {\\n                                  if (!P) {\\n                                    var B = D;\\n                                    (P = !0), f.apply(B, L);\\n                                  }\\n                                };\\n                              })(function () {\\n                                d.spacingPage();\\n                              }),\\n                              E = document.getElementsByTagName('video');\\n                            if (E.length === 0)\\n                              setTimeout(function () {\\n                                w();\\n                              }, c);\\n                            else\\n                              for (var R = 0; R < E.length; R++) {\\n                                var N = E[R];\\n                                if (N.readyState === 4) {\\n                                  setTimeout(function () {\\n                                    w();\\n                                  }, 3e3);\\n                                  break;\\n                                }\\n                                N.addEventListener('loadeddata', function () {\\n                                  setTimeout(function () {\\n                                    w();\\n                                  }, 4e3);\\n                                });\\n                              }\\n                            var V = [],\\n                              I = (function (f, D, L) {\\n                                var P = this,\\n                                  B = arguments,\\n                                  A = null,\\n                                  k = null;\\n                                return function () {\\n                                  var F = P,\\n                                    $ = B,\\n                                    M = +new Date();\\n                                  clearTimeout(A),\\n                                    k || (k = M),\\n                                    M - k >= L\\n                                      ? (f.apply(F, $), (k = M))\\n                                      : (A = setTimeout(function () {\\n                                          f.apply(F, $);\\n                                        }, D));\\n                                };\\n                              })(\\n                                function () {\\n                                  for (; V.length; ) {\\n                                    var f = V.shift();\\n                                    f && d.spacingNode(f);\\n                                  }\\n                                },\\n                                l,\\n                                { maxWait: r }\\n                              ),\\n                              t = new MutationObserver(function (f, D) {\\n                                f.forEach(function (L) {\\n                                  switch (L.type) {\\n                                    case 'childList':\\n                                      L.addedNodes.forEach(function (B) {\\n                                        B.nodeType === Node.ELEMENT_NODE\\n                                          ? V.push(B)\\n                                          : B.nodeType === Node.TEXT_NODE &&\\n                                            V.push(B.parentNode);\\n                                      });\\n                                      break;\\n                                    case 'characterData':\\n                                      var P = L.target;\\n                                      P.nodeType === Node.TEXT_NODE &&\\n                                        V.push(P.parentNode);\\n                                  }\\n                                }),\\n                                  I();\\n                              });\\n                            t.observe(document.body, {\\n                              characterData: !0,\\n                              childList: !0,\\n                              subtree: !0\\n                            });\\n                          }\\n                        }\\n                      }\\n                    ]) && y(h.prototype, T),\\n                    z && y(h, z),\\n                    g\\n                  );\\n                  var h, T, z;\\n                })(s(1).Pangu),\\n                C = new x();\\n              (p.exports = C), (p.exports.default = C), (p.exports.Pangu = x);\\n            }) == 'function'\\n              ? n.apply(a, o)\\n              : n) === void 0 || (p.exports = u);\\n      },\\n      function (p, a, s) {\\n        var n, o, u;\\n        (o = []),\\n          (u =\\n            typeof (n = function () {\\n              function m(j) {\\n                return (m =\\n                  typeof Symbol == 'function' &&\\n                  typeof Symbol.iterator == 'symbol'\\n                    ? function (G) {\\n                        return typeof G;\\n                      }\\n                    : function (G) {\\n                        return G &&\\n                          typeof Symbol == 'function' &&\\n                          G.constructor === Symbol &&\\n                          G !== Symbol.prototype\\n                          ? 'symbol'\\n                          : typeof G;\\n                      })(j);\\n              }\\n              function y(j, G) {\\n                for (var Z = 0; Z < G.length; Z++) {\\n                  var H = G[Z];\\n                  (H.enumerable = H.enumerable || !1),\\n                    (H.configurable = !0),\\n                    'value' in H && (H.writable = !0),\\n                    Object.defineProperty(j, H.key, H);\\n                }\\n              }\\n              var e =\\n                  '\\\\u2E80-\\\\u2EFF\\\\u2F00-\\\\u2FDF\\\\u3040-\\\\u309F\\\\u30A0-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3100-\\\\u312F\\\\u3200-\\\\u32FF\\\\u3400-\\\\u4DBF\\\\u4E00-\\\\u9FFF\\\\uF900-\\\\uFAFF',\\n                S = new RegExp('['.concat(e, ']')),\\n                O = new RegExp(\\n                  '(['.concat(e, '])[ ]*([\\\\\\\\:]+|\\\\\\\\.)[ ]*([').concat(e, '])'),\\n                  'g'\\n                ),\\n                x = new RegExp('(['.concat(e, '])[ ]*([~\\\\\\\\!;,\\\\\\\\?]+)[ ]*'), 'g'),\\n                C = new RegExp('([\\\\\\\\.]{2,}|\\\\u2026)(['.concat(e, '])'), 'g'),\\n                v = new RegExp('(['.concat(e, '])\\\\\\\\:([A-Z0-9\\\\\\\\(\\\\\\\\)])'), 'g'),\\n                g = new RegExp('(['.concat(e, '])([`\\\"\\\\u05F4])'), 'g'),\\n                h = new RegExp('([`\\\"\\\\u05F4])(['.concat(e, '])'), 'g'),\\n                T = /([`\\\"\\\\u05f4]+)[ ]*(.+?)[ ]*([`\\\"\\\\u05f4]+)/g,\\n                z = new RegExp('(['.concat(e, \\\"])('[^s])\\\"), 'g'),\\n                c = new RegExp(\\\"(')([\\\".concat(e, '])'), 'g'),\\n                l = new RegExp('([A-Za-z0-9'.concat(e, \\\"])( )('s)\\\"), 'g'),\\n                r = new RegExp(\\n                  '(['\\n                    .concat(e, '])(#)([')\\n                    .concat(e, ']+)(#)([')\\n                    .concat(e, '])'),\\n                  'g'\\n                ),\\n                d = new RegExp('(['.concat(e, '])(#([^ ]))'), 'g'),\\n                w = new RegExp('(([^ ])#)(['.concat(e, '])'), 'g'),\\n                E = new RegExp(\\n                  '(['.concat(e, '])([\\\\\\\\+\\\\\\\\-\\\\\\\\*\\\\\\\\/=&\\\\\\\\|<>])([A-Za-z0-9])'),\\n                  'g'\\n                ),\\n                R = new RegExp(\\n                  '([A-Za-z0-9])([\\\\\\\\+\\\\\\\\-\\\\\\\\*\\\\\\\\/=&\\\\\\\\|<>])(['.concat(e, '])'),\\n                  'g'\\n                ),\\n                N = /([\\\\/]) ([a-z\\\\-_\\\\.\\\\/]+)/g,\\n                V = /([\\\\/\\\\.])([A-Za-z\\\\-_\\\\.\\\\/]+) ([\\\\/])/g,\\n                I = new RegExp('(['.concat(e, '])([\\\\\\\\(\\\\\\\\[\\\\\\\\{<>\\\\u201C])'), 'g'),\\n                t = new RegExp('([\\\\\\\\)\\\\\\\\]\\\\\\\\}<>\\\\u201D])(['.concat(e, '])'), 'g'),\\n                f = /([\\\\(\\\\[\\\\{<\\\\u201c]+)[ ]*(.+?)[ ]*([\\\\)\\\\]\\\\}>\\\\u201d]+)/,\\n                D = new RegExp(\\n                  '([A-Za-z0-9'\\n                    .concat(e, '])[ ]*([\\\\u201C])([A-Za-z0-9')\\n                    .concat(e, '\\\\\\\\-_ ]+)([\\\\u201D])'),\\n                  'g'\\n                ),\\n                L = new RegExp(\\n                  '([\\\\u201C])([A-Za-z0-9'\\n                    .concat(e, '\\\\\\\\-_ ]+)([\\\\u201D])[ ]*([A-Za-z0-9')\\n                    .concat(e, '])'),\\n                  'g'\\n                ),\\n                P = /([A-Za-z0-9])([\\\\(\\\\[\\\\{])/g,\\n                B = /([\\\\)\\\\]\\\\}])([A-Za-z0-9])/g,\\n                A = new RegExp(\\n                  '(['.concat(\\n                    e,\\n                    '])([A-Za-z\\\\u0370-\\\\u03FF0-9@\\\\\\\\$%\\\\\\\\^&\\\\\\\\*\\\\\\\\-\\\\\\\\+\\\\\\\\\\\\\\\\=\\\\\\\\|/\\\\xA1-\\\\xFF\\\\u2150-\\\\u218F\\\\u2700\\\\u2014\\\\u27BF])'\\n                  ),\\n                  'g'\\n                ),\\n                k = new RegExp(\\n                  '([A-Za-z\\\\u0370-\\\\u03FF0-9~\\\\\\\\$%\\\\\\\\^&\\\\\\\\*\\\\\\\\-\\\\\\\\+\\\\\\\\\\\\\\\\=\\\\\\\\|/!;:,\\\\\\\\.\\\\\\\\?\\\\xA1-\\\\xFF\\\\u2150-\\\\u218F\\\\u2700\\\\u2014\\\\u27BF])(['.concat(\\n                    e,\\n                    '])'\\n                  ),\\n                  'g'\\n                ),\\n                F = /(%)([A-Za-z])/g,\\n                $ = /([ ]*)([\\\\u00b7\\\\u2022\\\\u2027])([ ]*)/g,\\n                M = (function () {\\n                  function j() {\\n                    (function (U, _) {\\n                      if (!(U instanceof _))\\n                        throw new TypeError(\\n                          'Cannot call a class as a function'\\n                        );\\n                    })(this, j),\\n                      (this.version = '4.0.7');\\n                  }\\n                  return (\\n                    (G = j),\\n                    (Z = [\\n                      {\\n                        key: 'convertToFullwidth',\\n                        value: function (U) {\\n                          return U.replace(/~/g, '\\\\uFF5E')\\n                            .replace(/!/g, '\\\\uFF01')\\n                            .replace(/;/g, '\\\\uFF1B')\\n                            .replace(/:/g, '\\\\uFF1A')\\n                            .replace(/,/g, '\\\\uFF0C')\\n                            .replace(/\\\\./g, '\\\\u3002')\\n                            .replace(/\\\\?/g, '\\\\uFF1F');\\n                        }\\n                      },\\n                      {\\n                        key: 'spacing',\\n                        value: function (U) {\\n                          if (typeof U != 'string')\\n                            return (\\n                              console.warn(\\n                                'spacing(text) only accepts string but got '.concat(\\n                                  m(U)\\n                                )\\n                              ),\\n                              U\\n                            );\\n                          if (U.length <= 1 || !S.test(U)) return U;\\n                          var _ = this,\\n                            b = U;\\n                          return (b = (b = (b = (b = (b = (b = (b = (b = (b =\\n                            (b = (b = (b = (b = (b = (b = (b = (b = (b = (b =\\n                              (b = (b = (b = (b = (b = (b = (b = (b = (b =\\n                                b.replace(O, function (J, Y, X, K) {\\n                                  var W = _.convertToFullwidth(X);\\n                                  return ''.concat(Y).concat(W).concat(K);\\n                                })).replace(x, function (J, Y, X) {\\n                                var K = _.convertToFullwidth(X);\\n                                return ''.concat(Y).concat(K);\\n                              })).replace(C, '$1 $2')).replace(\\n                                v,\\n                                '$1\\\\uFF1A$2'\\n                              )).replace(g, '$1 $2')).replace(\\n                                h,\\n                                '$1 $2'\\n                              )).replace(T, '$1$2$3')).replace(\\n                                z,\\n                                '$1 $2'\\n                              )).replace(c, '$1 $2')).replace(\\n                                l,\\n                                \\\"$1's\\\"\\n                              )).replace(r, '$1 $2$3$4 $5')).replace(\\n                              d,\\n                              '$1 $2'\\n                            )).replace(w, '$1 $3')).replace(\\n                              E,\\n                              '$1 $2 $3'\\n                            )).replace(R, '$1 $2 $3')).replace(\\n                              N,\\n                              '$1$2'\\n                            )).replace(V, '$1$2$3')).replace(\\n                              I,\\n                              '$1 $2'\\n                            )).replace(t, '$1 $2')).replace(\\n                              f,\\n                              '$1$2$3'\\n                            )).replace(D, '$1 $2$3$4')).replace(\\n                            L,\\n                            '$1$2$3 $4'\\n                          )).replace(P, '$1 $2')).replace(B, '$1 $2')).replace(\\n                            A,\\n                            '$1 $2'\\n                          )).replace(k, '$1 $2')).replace(F, '$1 $2')).replace(\\n                            $,\\n                            '\\\\u30FB'\\n                          ));\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingText',\\n                        value: function (U) {\\n                          var _,\\n                            b =\\n                              arguments.length > 1 && arguments[1] !== void 0\\n                                ? arguments[1]\\n                                : function () {};\\n                          try {\\n                            _ = this.spacing(U);\\n                          } catch (J) {\\n                            return void b(J);\\n                          }\\n                          b(null, _);\\n                        }\\n                      },\\n                      {\\n                        key: 'spacingTextSync',\\n                        value: function (U) {\\n                          return this.spacing(U);\\n                        }\\n                      }\\n                    ]) && y(G.prototype, Z),\\n                    H && y(G, H),\\n                    j\\n                  );\\n                  var G, Z, H;\\n                })(),\\n                Q = new M();\\n              (p.exports = Q), (p.exports.default = Q), (p.exports.Pangu = M);\\n            }) == 'function'\\n              ? n.apply(a, o)\\n              : n) === void 0 || (p.exports = u);\\n      }\\n    ]);\\n  });\\n})(pangu_min);\\nvar pangu_minExports = pangu_min.exports,\\n  utils = {};\\nconst Aacute = '\\\\xC1',\\n  aacute = '\\\\xE1',\\n  Abreve = '\\\\u0102',\\n  abreve = '\\\\u0103',\\n  ac = '\\\\u223E',\\n  acd = '\\\\u223F',\\n  acE = '\\\\u223E\\\\u0333',\\n  Acirc = '\\\\xC2',\\n  acirc = '\\\\xE2',\\n  acute = '\\\\xB4',\\n  Acy = '\\\\u0410',\\n  acy = '\\\\u0430',\\n  AElig = '\\\\xC6',\\n  aelig = '\\\\xE6',\\n  af = '\\\\u2061',\\n  Afr = '\\\\u{1D504}',\\n  afr = '\\\\u{1D51E}',\\n  Agrave = '\\\\xC0',\\n  agrave = '\\\\xE0',\\n  alefsym = '\\\\u2135',\\n  aleph = '\\\\u2135',\\n  Alpha = '\\\\u0391',\\n  alpha = '\\\\u03B1',\\n  Amacr = '\\\\u0100',\\n  amacr = '\\\\u0101',\\n  amalg = '\\\\u2A3F',\\n  amp = '&',\\n  AMP = '&',\\n  andand = '\\\\u2A55',\\n  And = '\\\\u2A53',\\n  and = '\\\\u2227',\\n  andd = '\\\\u2A5C',\\n  andslope = '\\\\u2A58',\\n  andv = '\\\\u2A5A',\\n  ang = '\\\\u2220',\\n  ange = '\\\\u29A4',\\n  angle = '\\\\u2220',\\n  angmsdaa = '\\\\u29A8',\\n  angmsdab = '\\\\u29A9',\\n  angmsdac = '\\\\u29AA',\\n  angmsdad = '\\\\u29AB',\\n  angmsdae = '\\\\u29AC',\\n  angmsdaf = '\\\\u29AD',\\n  angmsdag = '\\\\u29AE',\\n  angmsdah = '\\\\u29AF',\\n  angmsd = '\\\\u2221',\\n  angrt = '\\\\u221F',\\n  angrtvb = '\\\\u22BE',\\n  angrtvbd = '\\\\u299D',\\n  angsph = '\\\\u2222',\\n  angst = '\\\\xC5',\\n  angzarr = '\\\\u237C',\\n  Aogon = '\\\\u0104',\\n  aogon = '\\\\u0105',\\n  Aopf = '\\\\u{1D538}',\\n  aopf = '\\\\u{1D552}',\\n  apacir = '\\\\u2A6F',\\n  ap = '\\\\u2248',\\n  apE = '\\\\u2A70',\\n  ape = '\\\\u224A',\\n  apid = '\\\\u224B',\\n  apos = \\\"'\\\",\\n  ApplyFunction = '\\\\u2061',\\n  approx = '\\\\u2248',\\n  approxeq = '\\\\u224A',\\n  Aring = '\\\\xC5',\\n  aring = '\\\\xE5',\\n  Ascr = '\\\\u{1D49C}',\\n  ascr = '\\\\u{1D4B6}',\\n  Assign = '\\\\u2254',\\n  ast = '*',\\n  asymp = '\\\\u2248',\\n  asympeq = '\\\\u224D',\\n  Atilde = '\\\\xC3',\\n  atilde = '\\\\xE3',\\n  Auml = '\\\\xC4',\\n  auml = '\\\\xE4',\\n  awconint = '\\\\u2233',\\n  awint = '\\\\u2A11',\\n  backcong = '\\\\u224C',\\n  backepsilon = '\\\\u03F6',\\n  backprime = '\\\\u2035',\\n  backsim = '\\\\u223D',\\n  backsimeq = '\\\\u22CD',\\n  Backslash = '\\\\u2216',\\n  Barv = '\\\\u2AE7',\\n  barvee = '\\\\u22BD',\\n  barwed = '\\\\u2305',\\n  Barwed = '\\\\u2306',\\n  barwedge = '\\\\u2305',\\n  bbrk = '\\\\u23B5',\\n  bbrktbrk = '\\\\u23B6',\\n  bcong = '\\\\u224C',\\n  Bcy = '\\\\u0411',\\n  bcy = '\\\\u0431',\\n  bdquo = '\\\\u201E',\\n  becaus = '\\\\u2235',\\n  because = '\\\\u2235',\\n  Because = '\\\\u2235',\\n  bemptyv = '\\\\u29B0',\\n  bepsi = '\\\\u03F6',\\n  bernou = '\\\\u212C',\\n  Bernoullis = '\\\\u212C',\\n  Beta = '\\\\u0392',\\n  beta = '\\\\u03B2',\\n  beth = '\\\\u2136',\\n  between = '\\\\u226C',\\n  Bfr = '\\\\u{1D505}',\\n  bfr = '\\\\u{1D51F}',\\n  bigcap = '\\\\u22C2',\\n  bigcirc = '\\\\u25EF',\\n  bigcup = '\\\\u22C3',\\n  bigodot = '\\\\u2A00',\\n  bigoplus = '\\\\u2A01',\\n  bigotimes = '\\\\u2A02',\\n  bigsqcup = '\\\\u2A06',\\n  bigstar = '\\\\u2605',\\n  bigtriangledown = '\\\\u25BD',\\n  bigtriangleup = '\\\\u25B3',\\n  biguplus = '\\\\u2A04',\\n  bigvee = '\\\\u22C1',\\n  bigwedge = '\\\\u22C0',\\n  bkarow = '\\\\u290D',\\n  blacklozenge = '\\\\u29EB',\\n  blacksquare = '\\\\u25AA',\\n  blacktriangle = '\\\\u25B4',\\n  blacktriangledown = '\\\\u25BE',\\n  blacktriangleleft = '\\\\u25C2',\\n  blacktriangleright = '\\\\u25B8',\\n  blank = '\\\\u2423',\\n  blk12 = '\\\\u2592',\\n  blk14 = '\\\\u2591',\\n  blk34 = '\\\\u2593',\\n  block = '\\\\u2588',\\n  bne = '=\\\\u20E5',\\n  bnequiv = '\\\\u2261\\\\u20E5',\\n  bNot = '\\\\u2AED',\\n  bnot = '\\\\u2310',\\n  Bopf = '\\\\u{1D539}',\\n  bopf = '\\\\u{1D553}',\\n  bot = '\\\\u22A5',\\n  bottom = '\\\\u22A5',\\n  bowtie = '\\\\u22C8',\\n  boxbox = '\\\\u29C9',\\n  boxdl = '\\\\u2510',\\n  boxdL = '\\\\u2555',\\n  boxDl = '\\\\u2556',\\n  boxDL = '\\\\u2557',\\n  boxdr = '\\\\u250C',\\n  boxdR = '\\\\u2552',\\n  boxDr = '\\\\u2553',\\n  boxDR = '\\\\u2554',\\n  boxh = '\\\\u2500',\\n  boxH = '\\\\u2550',\\n  boxhd = '\\\\u252C',\\n  boxHd = '\\\\u2564',\\n  boxhD = '\\\\u2565',\\n  boxHD = '\\\\u2566',\\n  boxhu = '\\\\u2534',\\n  boxHu = '\\\\u2567',\\n  boxhU = '\\\\u2568',\\n  boxHU = '\\\\u2569',\\n  boxminus = '\\\\u229F',\\n  boxplus = '\\\\u229E',\\n  boxtimes = '\\\\u22A0',\\n  boxul = '\\\\u2518',\\n  boxuL = '\\\\u255B',\\n  boxUl = '\\\\u255C',\\n  boxUL = '\\\\u255D',\\n  boxur = '\\\\u2514',\\n  boxuR = '\\\\u2558',\\n  boxUr = '\\\\u2559',\\n  boxUR = '\\\\u255A',\\n  boxv = '\\\\u2502',\\n  boxV = '\\\\u2551',\\n  boxvh = '\\\\u253C',\\n  boxvH = '\\\\u256A',\\n  boxVh = '\\\\u256B',\\n  boxVH = '\\\\u256C',\\n  boxvl = '\\\\u2524',\\n  boxvL = '\\\\u2561',\\n  boxVl = '\\\\u2562',\\n  boxVL = '\\\\u2563',\\n  boxvr = '\\\\u251C',\\n  boxvR = '\\\\u255E',\\n  boxVr = '\\\\u255F',\\n  boxVR = '\\\\u2560',\\n  bprime = '\\\\u2035',\\n  breve = '\\\\u02D8',\\n  Breve = '\\\\u02D8',\\n  brvbar = '\\\\xA6',\\n  bscr = '\\\\u{1D4B7}',\\n  Bscr = '\\\\u212C',\\n  bsemi = '\\\\u204F',\\n  bsim = '\\\\u223D',\\n  bsime = '\\\\u22CD',\\n  bsolb = '\\\\u29C5',\\n  bsol = '\\\\\\\\',\\n  bsolhsub = '\\\\u27C8',\\n  bull = '\\\\u2022',\\n  bullet = '\\\\u2022',\\n  bump = '\\\\u224E',\\n  bumpE = '\\\\u2AAE',\\n  bumpe = '\\\\u224F',\\n  Bumpeq = '\\\\u224E',\\n  bumpeq = '\\\\u224F',\\n  Cacute = '\\\\u0106',\\n  cacute = '\\\\u0107',\\n  capand = '\\\\u2A44',\\n  capbrcup = '\\\\u2A49',\\n  capcap = '\\\\u2A4B',\\n  cap = '\\\\u2229',\\n  Cap = '\\\\u22D2',\\n  capcup = '\\\\u2A47',\\n  capdot = '\\\\u2A40',\\n  CapitalDifferentialD = '\\\\u2145',\\n  caps = '\\\\u2229\\\\uFE00',\\n  caret = '\\\\u2041',\\n  caron = '\\\\u02C7',\\n  Cayleys = '\\\\u212D',\\n  ccaps = '\\\\u2A4D',\\n  Ccaron = '\\\\u010C',\\n  ccaron = '\\\\u010D',\\n  Ccedil = '\\\\xC7',\\n  ccedil = '\\\\xE7',\\n  Ccirc = '\\\\u0108',\\n  ccirc = '\\\\u0109',\\n  Cconint = '\\\\u2230',\\n  ccups = '\\\\u2A4C',\\n  ccupssm = '\\\\u2A50',\\n  Cdot = '\\\\u010A',\\n  cdot = '\\\\u010B',\\n  cedil = '\\\\xB8',\\n  Cedilla = '\\\\xB8',\\n  cemptyv = '\\\\u29B2',\\n  cent = '\\\\xA2',\\n  centerdot = '\\\\xB7',\\n  CenterDot = '\\\\xB7',\\n  cfr = '\\\\u{1D520}',\\n  Cfr = '\\\\u212D',\\n  CHcy = '\\\\u0427',\\n  chcy = '\\\\u0447',\\n  check = '\\\\u2713',\\n  checkmark = '\\\\u2713',\\n  Chi = '\\\\u03A7',\\n  chi = '\\\\u03C7',\\n  circ = '\\\\u02C6',\\n  circeq = '\\\\u2257',\\n  circlearrowleft = '\\\\u21BA',\\n  circlearrowright = '\\\\u21BB',\\n  circledast = '\\\\u229B',\\n  circledcirc = '\\\\u229A',\\n  circleddash = '\\\\u229D',\\n  CircleDot = '\\\\u2299',\\n  circledR = '\\\\xAE',\\n  circledS = '\\\\u24C8',\\n  CircleMinus = '\\\\u2296',\\n  CirclePlus = '\\\\u2295',\\n  CircleTimes = '\\\\u2297',\\n  cir = '\\\\u25CB',\\n  cirE = '\\\\u29C3',\\n  cire = '\\\\u2257',\\n  cirfnint = '\\\\u2A10',\\n  cirmid = '\\\\u2AEF',\\n  cirscir = '\\\\u29C2',\\n  ClockwiseContourIntegral = '\\\\u2232',\\n  CloseCurlyDoubleQuote = '\\\\u201D',\\n  CloseCurlyQuote = '\\\\u2019',\\n  clubs = '\\\\u2663',\\n  clubsuit = '\\\\u2663',\\n  colon = ':',\\n  Colon = '\\\\u2237',\\n  Colone = '\\\\u2A74',\\n  colone = '\\\\u2254',\\n  coloneq = '\\\\u2254',\\n  comma = ',',\\n  commat = '@',\\n  comp = '\\\\u2201',\\n  compfn = '\\\\u2218',\\n  complement = '\\\\u2201',\\n  complexes = '\\\\u2102',\\n  cong = '\\\\u2245',\\n  congdot = '\\\\u2A6D',\\n  Congruent = '\\\\u2261',\\n  conint = '\\\\u222E',\\n  Conint = '\\\\u222F',\\n  ContourIntegral = '\\\\u222E',\\n  copf = '\\\\u{1D554}',\\n  Copf = '\\\\u2102',\\n  coprod = '\\\\u2210',\\n  Coproduct = '\\\\u2210',\\n  copy = '\\\\xA9',\\n  COPY = '\\\\xA9',\\n  copysr = '\\\\u2117',\\n  CounterClockwiseContourIntegral = '\\\\u2233',\\n  crarr = '\\\\u21B5',\\n  cross = '\\\\u2717',\\n  Cross = '\\\\u2A2F',\\n  Cscr = '\\\\u{1D49E}',\\n  cscr = '\\\\u{1D4B8}',\\n  csub = '\\\\u2ACF',\\n  csube = '\\\\u2AD1',\\n  csup = '\\\\u2AD0',\\n  csupe = '\\\\u2AD2',\\n  ctdot = '\\\\u22EF',\\n  cudarrl = '\\\\u2938',\\n  cudarrr = '\\\\u2935',\\n  cuepr = '\\\\u22DE',\\n  cuesc = '\\\\u22DF',\\n  cularr = '\\\\u21B6',\\n  cularrp = '\\\\u293D',\\n  cupbrcap = '\\\\u2A48',\\n  cupcap = '\\\\u2A46',\\n  CupCap = '\\\\u224D',\\n  cup = '\\\\u222A',\\n  Cup = '\\\\u22D3',\\n  cupcup = '\\\\u2A4A',\\n  cupdot = '\\\\u228D',\\n  cupor = '\\\\u2A45',\\n  cups = '\\\\u222A\\\\uFE00',\\n  curarr = '\\\\u21B7',\\n  curarrm = '\\\\u293C',\\n  curlyeqprec = '\\\\u22DE',\\n  curlyeqsucc = '\\\\u22DF',\\n  curlyvee = '\\\\u22CE',\\n  curlywedge = '\\\\u22CF',\\n  curren = '\\\\xA4',\\n  curvearrowleft = '\\\\u21B6',\\n  curvearrowright = '\\\\u21B7',\\n  cuvee = '\\\\u22CE',\\n  cuwed = '\\\\u22CF',\\n  cwconint = '\\\\u2232',\\n  cwint = '\\\\u2231',\\n  cylcty = '\\\\u232D',\\n  dagger = '\\\\u2020',\\n  Dagger = '\\\\u2021',\\n  daleth = '\\\\u2138',\\n  darr = '\\\\u2193',\\n  Darr = '\\\\u21A1',\\n  dArr = '\\\\u21D3',\\n  dash = '\\\\u2010',\\n  Dashv = '\\\\u2AE4',\\n  dashv = '\\\\u22A3',\\n  dbkarow = '\\\\u290F',\\n  dblac = '\\\\u02DD',\\n  Dcaron = '\\\\u010E',\\n  dcaron = '\\\\u010F',\\n  Dcy = '\\\\u0414',\\n  dcy = '\\\\u0434',\\n  ddagger = '\\\\u2021',\\n  ddarr = '\\\\u21CA',\\n  DD = '\\\\u2145',\\n  dd = '\\\\u2146',\\n  DDotrahd = '\\\\u2911',\\n  ddotseq = '\\\\u2A77',\\n  deg = '\\\\xB0',\\n  Del = '\\\\u2207',\\n  Delta = '\\\\u0394',\\n  delta = '\\\\u03B4',\\n  demptyv = '\\\\u29B1',\\n  dfisht = '\\\\u297F',\\n  Dfr = '\\\\u{1D507}',\\n  dfr = '\\\\u{1D521}',\\n  dHar = '\\\\u2965',\\n  dharl = '\\\\u21C3',\\n  dharr = '\\\\u21C2',\\n  DiacriticalAcute = '\\\\xB4',\\n  DiacriticalDot = '\\\\u02D9',\\n  DiacriticalDoubleAcute = '\\\\u02DD',\\n  DiacriticalGrave = '`',\\n  DiacriticalTilde = '\\\\u02DC',\\n  diam = '\\\\u22C4',\\n  diamond = '\\\\u22C4',\\n  Diamond = '\\\\u22C4',\\n  diamondsuit = '\\\\u2666',\\n  diams = '\\\\u2666',\\n  die = '\\\\xA8',\\n  DifferentialD = '\\\\u2146',\\n  digamma = '\\\\u03DD',\\n  disin = '\\\\u22F2',\\n  div = '\\\\xF7',\\n  divide = '\\\\xF7',\\n  divideontimes = '\\\\u22C7',\\n  divonx = '\\\\u22C7',\\n  DJcy = '\\\\u0402',\\n  djcy = '\\\\u0452',\\n  dlcorn = '\\\\u231E',\\n  dlcrop = '\\\\u230D',\\n  dollar = '$',\\n  Dopf = '\\\\u{1D53B}',\\n  dopf = '\\\\u{1D555}',\\n  Dot = '\\\\xA8',\\n  dot = '\\\\u02D9',\\n  DotDot = '\\\\u20DC',\\n  doteq = '\\\\u2250',\\n  doteqdot = '\\\\u2251',\\n  DotEqual = '\\\\u2250',\\n  dotminus = '\\\\u2238',\\n  dotplus = '\\\\u2214',\\n  dotsquare = '\\\\u22A1',\\n  doublebarwedge = '\\\\u2306',\\n  DoubleContourIntegral = '\\\\u222F',\\n  DoubleDot = '\\\\xA8',\\n  DoubleDownArrow = '\\\\u21D3',\\n  DoubleLeftArrow = '\\\\u21D0',\\n  DoubleLeftRightArrow = '\\\\u21D4',\\n  DoubleLeftTee = '\\\\u2AE4',\\n  DoubleLongLeftArrow = '\\\\u27F8',\\n  DoubleLongLeftRightArrow = '\\\\u27FA',\\n  DoubleLongRightArrow = '\\\\u27F9',\\n  DoubleRightArrow = '\\\\u21D2',\\n  DoubleRightTee = '\\\\u22A8',\\n  DoubleUpArrow = '\\\\u21D1',\\n  DoubleUpDownArrow = '\\\\u21D5',\\n  DoubleVerticalBar = '\\\\u2225',\\n  DownArrowBar = '\\\\u2913',\\n  downarrow = '\\\\u2193',\\n  DownArrow = '\\\\u2193',\\n  Downarrow = '\\\\u21D3',\\n  DownArrowUpArrow = '\\\\u21F5',\\n  DownBreve = '\\\\u0311',\\n  downdownarrows = '\\\\u21CA',\\n  downharpoonleft = '\\\\u21C3',\\n  downharpoonright = '\\\\u21C2',\\n  DownLeftRightVector = '\\\\u2950',\\n  DownLeftTeeVector = '\\\\u295E',\\n  DownLeftVectorBar = '\\\\u2956',\\n  DownLeftVector = '\\\\u21BD',\\n  DownRightTeeVector = '\\\\u295F',\\n  DownRightVectorBar = '\\\\u2957',\\n  DownRightVector = '\\\\u21C1',\\n  DownTeeArrow = '\\\\u21A7',\\n  DownTee = '\\\\u22A4',\\n  drbkarow = '\\\\u2910',\\n  drcorn = '\\\\u231F',\\n  drcrop = '\\\\u230C',\\n  Dscr = '\\\\u{1D49F}',\\n  dscr = '\\\\u{1D4B9}',\\n  DScy = '\\\\u0405',\\n  dscy = '\\\\u0455',\\n  dsol = '\\\\u29F6',\\n  Dstrok = '\\\\u0110',\\n  dstrok = '\\\\u0111',\\n  dtdot = '\\\\u22F1',\\n  dtri = '\\\\u25BF',\\n  dtrif = '\\\\u25BE',\\n  duarr = '\\\\u21F5',\\n  duhar = '\\\\u296F',\\n  dwangle = '\\\\u29A6',\\n  DZcy = '\\\\u040F',\\n  dzcy = '\\\\u045F',\\n  dzigrarr = '\\\\u27FF',\\n  Eacute = '\\\\xC9',\\n  eacute = '\\\\xE9',\\n  easter = '\\\\u2A6E',\\n  Ecaron = '\\\\u011A',\\n  ecaron = '\\\\u011B',\\n  Ecirc = '\\\\xCA',\\n  ecirc = '\\\\xEA',\\n  ecir = '\\\\u2256',\\n  ecolon = '\\\\u2255',\\n  Ecy = '\\\\u042D',\\n  ecy = '\\\\u044D',\\n  eDDot = '\\\\u2A77',\\n  Edot = '\\\\u0116',\\n  edot = '\\\\u0117',\\n  eDot = '\\\\u2251',\\n  ee = '\\\\u2147',\\n  efDot = '\\\\u2252',\\n  Efr = '\\\\u{1D508}',\\n  efr = '\\\\u{1D522}',\\n  eg = '\\\\u2A9A',\\n  Egrave = '\\\\xC8',\\n  egrave = '\\\\xE8',\\n  egs = '\\\\u2A96',\\n  egsdot = '\\\\u2A98',\\n  el = '\\\\u2A99',\\n  Element = '\\\\u2208',\\n  elinters = '\\\\u23E7',\\n  ell = '\\\\u2113',\\n  els = '\\\\u2A95',\\n  elsdot = '\\\\u2A97',\\n  Emacr = '\\\\u0112',\\n  emacr = '\\\\u0113',\\n  empty = '\\\\u2205',\\n  emptyset = '\\\\u2205',\\n  EmptySmallSquare = '\\\\u25FB',\\n  emptyv = '\\\\u2205',\\n  EmptyVerySmallSquare = '\\\\u25AB',\\n  emsp13 = '\\\\u2004',\\n  emsp14 = '\\\\u2005',\\n  emsp = '\\\\u2003',\\n  ENG = '\\\\u014A',\\n  eng = '\\\\u014B',\\n  ensp = '\\\\u2002',\\n  Eogon = '\\\\u0118',\\n  eogon = '\\\\u0119',\\n  Eopf = '\\\\u{1D53C}',\\n  eopf = '\\\\u{1D556}',\\n  epar = '\\\\u22D5',\\n  eparsl = '\\\\u29E3',\\n  eplus = '\\\\u2A71',\\n  epsi = '\\\\u03B5',\\n  Epsilon = '\\\\u0395',\\n  epsilon = '\\\\u03B5',\\n  epsiv = '\\\\u03F5',\\n  eqcirc = '\\\\u2256',\\n  eqcolon = '\\\\u2255',\\n  eqsim = '\\\\u2242',\\n  eqslantgtr = '\\\\u2A96',\\n  eqslantless = '\\\\u2A95',\\n  Equal = '\\\\u2A75',\\n  equals = '=',\\n  EqualTilde = '\\\\u2242',\\n  equest = '\\\\u225F',\\n  Equilibrium = '\\\\u21CC',\\n  equiv = '\\\\u2261',\\n  equivDD = '\\\\u2A78',\\n  eqvparsl = '\\\\u29E5',\\n  erarr = '\\\\u2971',\\n  erDot = '\\\\u2253',\\n  escr = '\\\\u212F',\\n  Escr = '\\\\u2130',\\n  esdot = '\\\\u2250',\\n  Esim = '\\\\u2A73',\\n  esim = '\\\\u2242',\\n  Eta = '\\\\u0397',\\n  eta = '\\\\u03B7',\\n  ETH = '\\\\xD0',\\n  eth = '\\\\xF0',\\n  Euml = '\\\\xCB',\\n  euml = '\\\\xEB',\\n  euro = '\\\\u20AC',\\n  excl = '!',\\n  exist = '\\\\u2203',\\n  Exists = '\\\\u2203',\\n  expectation = '\\\\u2130',\\n  exponentiale = '\\\\u2147',\\n  ExponentialE = '\\\\u2147',\\n  fallingdotseq = '\\\\u2252',\\n  Fcy = '\\\\u0424',\\n  fcy = '\\\\u0444',\\n  female = '\\\\u2640',\\n  ffilig = '\\\\uFB03',\\n  fflig = '\\\\uFB00',\\n  ffllig = '\\\\uFB04',\\n  Ffr = '\\\\u{1D509}',\\n  ffr = '\\\\u{1D523}',\\n  filig = '\\\\uFB01',\\n  FilledSmallSquare = '\\\\u25FC',\\n  FilledVerySmallSquare = '\\\\u25AA',\\n  fjlig = 'fj',\\n  flat = '\\\\u266D',\\n  fllig = '\\\\uFB02',\\n  fltns = '\\\\u25B1',\\n  fnof = '\\\\u0192',\\n  Fopf = '\\\\u{1D53D}',\\n  fopf = '\\\\u{1D557}',\\n  forall = '\\\\u2200',\\n  ForAll = '\\\\u2200',\\n  fork = '\\\\u22D4',\\n  forkv = '\\\\u2AD9',\\n  Fouriertrf = '\\\\u2131',\\n  fpartint = '\\\\u2A0D',\\n  frac12 = '\\\\xBD',\\n  frac13 = '\\\\u2153',\\n  frac14 = '\\\\xBC',\\n  frac15 = '\\\\u2155',\\n  frac16 = '\\\\u2159',\\n  frac18 = '\\\\u215B',\\n  frac23 = '\\\\u2154',\\n  frac25 = '\\\\u2156',\\n  frac34 = '\\\\xBE',\\n  frac35 = '\\\\u2157',\\n  frac38 = '\\\\u215C',\\n  frac45 = '\\\\u2158',\\n  frac56 = '\\\\u215A',\\n  frac58 = '\\\\u215D',\\n  frac78 = '\\\\u215E',\\n  frasl = '\\\\u2044',\\n  frown = '\\\\u2322',\\n  fscr = '\\\\u{1D4BB}',\\n  Fscr = '\\\\u2131',\\n  gacute = '\\\\u01F5',\\n  Gamma = '\\\\u0393',\\n  gamma = '\\\\u03B3',\\n  Gammad = '\\\\u03DC',\\n  gammad = '\\\\u03DD',\\n  gap = '\\\\u2A86',\\n  Gbreve = '\\\\u011E',\\n  gbreve = '\\\\u011F',\\n  Gcedil = '\\\\u0122',\\n  Gcirc = '\\\\u011C',\\n  gcirc = '\\\\u011D',\\n  Gcy = '\\\\u0413',\\n  gcy = '\\\\u0433',\\n  Gdot = '\\\\u0120',\\n  gdot = '\\\\u0121',\\n  ge = '\\\\u2265',\\n  gE = '\\\\u2267',\\n  gEl = '\\\\u2A8C',\\n  gel = '\\\\u22DB',\\n  geq = '\\\\u2265',\\n  geqq = '\\\\u2267',\\n  geqslant = '\\\\u2A7E',\\n  gescc = '\\\\u2AA9',\\n  ges = '\\\\u2A7E',\\n  gesdot = '\\\\u2A80',\\n  gesdoto = '\\\\u2A82',\\n  gesdotol = '\\\\u2A84',\\n  gesl = '\\\\u22DB\\\\uFE00',\\n  gesles = '\\\\u2A94',\\n  Gfr = '\\\\u{1D50A}',\\n  gfr = '\\\\u{1D524}',\\n  gg = '\\\\u226B',\\n  Gg = '\\\\u22D9',\\n  ggg = '\\\\u22D9',\\n  gimel = '\\\\u2137',\\n  GJcy = '\\\\u0403',\\n  gjcy = '\\\\u0453',\\n  gla = '\\\\u2AA5',\\n  gl = '\\\\u2277',\\n  glE = '\\\\u2A92',\\n  glj = '\\\\u2AA4',\\n  gnap = '\\\\u2A8A',\\n  gnapprox = '\\\\u2A8A',\\n  gne = '\\\\u2A88',\\n  gnE = '\\\\u2269',\\n  gneq = '\\\\u2A88',\\n  gneqq = '\\\\u2269',\\n  gnsim = '\\\\u22E7',\\n  Gopf = '\\\\u{1D53E}',\\n  gopf = '\\\\u{1D558}',\\n  grave = '`',\\n  GreaterEqual = '\\\\u2265',\\n  GreaterEqualLess = '\\\\u22DB',\\n  GreaterFullEqual = '\\\\u2267',\\n  GreaterGreater = '\\\\u2AA2',\\n  GreaterLess = '\\\\u2277',\\n  GreaterSlantEqual = '\\\\u2A7E',\\n  GreaterTilde = '\\\\u2273',\\n  Gscr = '\\\\u{1D4A2}',\\n  gscr = '\\\\u210A',\\n  gsim = '\\\\u2273',\\n  gsime = '\\\\u2A8E',\\n  gsiml = '\\\\u2A90',\\n  gtcc = '\\\\u2AA7',\\n  gtcir = '\\\\u2A7A',\\n  gt = '>',\\n  GT = '>',\\n  Gt = '\\\\u226B',\\n  gtdot = '\\\\u22D7',\\n  gtlPar = '\\\\u2995',\\n  gtquest = '\\\\u2A7C',\\n  gtrapprox = '\\\\u2A86',\\n  gtrarr = '\\\\u2978',\\n  gtrdot = '\\\\u22D7',\\n  gtreqless = '\\\\u22DB',\\n  gtreqqless = '\\\\u2A8C',\\n  gtrless = '\\\\u2277',\\n  gtrsim = '\\\\u2273',\\n  gvertneqq = '\\\\u2269\\\\uFE00',\\n  gvnE = '\\\\u2269\\\\uFE00',\\n  Hacek = '\\\\u02C7',\\n  hairsp = '\\\\u200A',\\n  half = '\\\\xBD',\\n  hamilt = '\\\\u210B',\\n  HARDcy = '\\\\u042A',\\n  hardcy = '\\\\u044A',\\n  harrcir = '\\\\u2948',\\n  harr = '\\\\u2194',\\n  hArr = '\\\\u21D4',\\n  harrw = '\\\\u21AD',\\n  Hat = '^',\\n  hbar = '\\\\u210F',\\n  Hcirc = '\\\\u0124',\\n  hcirc = '\\\\u0125',\\n  hearts = '\\\\u2665',\\n  heartsuit = '\\\\u2665',\\n  hellip = '\\\\u2026',\\n  hercon = '\\\\u22B9',\\n  hfr = '\\\\u{1D525}',\\n  Hfr = '\\\\u210C',\\n  HilbertSpace = '\\\\u210B',\\n  hksearow = '\\\\u2925',\\n  hkswarow = '\\\\u2926',\\n  hoarr = '\\\\u21FF',\\n  homtht = '\\\\u223B',\\n  hookleftarrow = '\\\\u21A9',\\n  hookrightarrow = '\\\\u21AA',\\n  hopf = '\\\\u{1D559}',\\n  Hopf = '\\\\u210D',\\n  horbar = '\\\\u2015',\\n  HorizontalLine = '\\\\u2500',\\n  hscr = '\\\\u{1D4BD}',\\n  Hscr = '\\\\u210B',\\n  hslash = '\\\\u210F',\\n  Hstrok = '\\\\u0126',\\n  hstrok = '\\\\u0127',\\n  HumpDownHump = '\\\\u224E',\\n  HumpEqual = '\\\\u224F',\\n  hybull = '\\\\u2043',\\n  hyphen = '\\\\u2010',\\n  Iacute = '\\\\xCD',\\n  iacute = '\\\\xED',\\n  ic = '\\\\u2063',\\n  Icirc = '\\\\xCE',\\n  icirc = '\\\\xEE',\\n  Icy = '\\\\u0418',\\n  icy = '\\\\u0438',\\n  Idot = '\\\\u0130',\\n  IEcy = '\\\\u0415',\\n  iecy = '\\\\u0435',\\n  iexcl = '\\\\xA1',\\n  iff = '\\\\u21D4',\\n  ifr = '\\\\u{1D526}',\\n  Ifr = '\\\\u2111',\\n  Igrave = '\\\\xCC',\\n  igrave = '\\\\xEC',\\n  ii = '\\\\u2148',\\n  iiiint = '\\\\u2A0C',\\n  iiint = '\\\\u222D',\\n  iinfin = '\\\\u29DC',\\n  iiota = '\\\\u2129',\\n  IJlig = '\\\\u0132',\\n  ijlig = '\\\\u0133',\\n  Imacr = '\\\\u012A',\\n  imacr = '\\\\u012B',\\n  image = '\\\\u2111',\\n  ImaginaryI = '\\\\u2148',\\n  imagline = '\\\\u2110',\\n  imagpart = '\\\\u2111',\\n  imath = '\\\\u0131',\\n  Im = '\\\\u2111',\\n  imof = '\\\\u22B7',\\n  imped = '\\\\u01B5',\\n  Implies = '\\\\u21D2',\\n  incare = '\\\\u2105',\\n  infin = '\\\\u221E',\\n  infintie = '\\\\u29DD',\\n  inodot = '\\\\u0131',\\n  intcal = '\\\\u22BA',\\n  int = '\\\\u222B',\\n  Int = '\\\\u222C',\\n  integers = '\\\\u2124',\\n  Integral = '\\\\u222B',\\n  intercal = '\\\\u22BA',\\n  Intersection = '\\\\u22C2',\\n  intlarhk = '\\\\u2A17',\\n  intprod = '\\\\u2A3C',\\n  InvisibleComma = '\\\\u2063',\\n  InvisibleTimes = '\\\\u2062',\\n  IOcy = '\\\\u0401',\\n  iocy = '\\\\u0451',\\n  Iogon = '\\\\u012E',\\n  iogon = '\\\\u012F',\\n  Iopf = '\\\\u{1D540}',\\n  iopf = '\\\\u{1D55A}',\\n  Iota = '\\\\u0399',\\n  iota = '\\\\u03B9',\\n  iprod = '\\\\u2A3C',\\n  iquest = '\\\\xBF',\\n  iscr = '\\\\u{1D4BE}',\\n  Iscr = '\\\\u2110',\\n  isin = '\\\\u2208',\\n  isindot = '\\\\u22F5',\\n  isinE = '\\\\u22F9',\\n  isins = '\\\\u22F4',\\n  isinsv = '\\\\u22F3',\\n  isinv = '\\\\u2208',\\n  it = '\\\\u2062',\\n  Itilde = '\\\\u0128',\\n  itilde = '\\\\u0129',\\n  Iukcy = '\\\\u0406',\\n  iukcy = '\\\\u0456',\\n  Iuml = '\\\\xCF',\\n  iuml = '\\\\xEF',\\n  Jcirc = '\\\\u0134',\\n  jcirc = '\\\\u0135',\\n  Jcy = '\\\\u0419',\\n  jcy = '\\\\u0439',\\n  Jfr = '\\\\u{1D50D}',\\n  jfr = '\\\\u{1D527}',\\n  jmath = '\\\\u0237',\\n  Jopf = '\\\\u{1D541}',\\n  jopf = '\\\\u{1D55B}',\\n  Jscr = '\\\\u{1D4A5}',\\n  jscr = '\\\\u{1D4BF}',\\n  Jsercy = '\\\\u0408',\\n  jsercy = '\\\\u0458',\\n  Jukcy = '\\\\u0404',\\n  jukcy = '\\\\u0454',\\n  Kappa = '\\\\u039A',\\n  kappa = '\\\\u03BA',\\n  kappav = '\\\\u03F0',\\n  Kcedil = '\\\\u0136',\\n  kcedil = '\\\\u0137',\\n  Kcy = '\\\\u041A',\\n  kcy = '\\\\u043A',\\n  Kfr = '\\\\u{1D50E}',\\n  kfr = '\\\\u{1D528}',\\n  kgreen = '\\\\u0138',\\n  KHcy = '\\\\u0425',\\n  khcy = '\\\\u0445',\\n  KJcy = '\\\\u040C',\\n  kjcy = '\\\\u045C',\\n  Kopf = '\\\\u{1D542}',\\n  kopf = '\\\\u{1D55C}',\\n  Kscr = '\\\\u{1D4A6}',\\n  kscr = '\\\\u{1D4C0}',\\n  lAarr = '\\\\u21DA',\\n  Lacute = '\\\\u0139',\\n  lacute = '\\\\u013A',\\n  laemptyv = '\\\\u29B4',\\n  lagran = '\\\\u2112',\\n  Lambda = '\\\\u039B',\\n  lambda = '\\\\u03BB',\\n  lang = '\\\\u27E8',\\n  Lang = '\\\\u27EA',\\n  langd = '\\\\u2991',\\n  langle = '\\\\u27E8',\\n  lap = '\\\\u2A85',\\n  Laplacetrf = '\\\\u2112',\\n  laquo = '\\\\xAB',\\n  larrb = '\\\\u21E4',\\n  larrbfs = '\\\\u291F',\\n  larr = '\\\\u2190',\\n  Larr = '\\\\u219E',\\n  lArr = '\\\\u21D0',\\n  larrfs = '\\\\u291D',\\n  larrhk = '\\\\u21A9',\\n  larrlp = '\\\\u21AB',\\n  larrpl = '\\\\u2939',\\n  larrsim = '\\\\u2973',\\n  larrtl = '\\\\u21A2',\\n  latail = '\\\\u2919',\\n  lAtail = '\\\\u291B',\\n  lat = '\\\\u2AAB',\\n  late = '\\\\u2AAD',\\n  lates = '\\\\u2AAD\\\\uFE00',\\n  lbarr = '\\\\u290C',\\n  lBarr = '\\\\u290E',\\n  lbbrk = '\\\\u2772',\\n  lbrace = '{',\\n  lbrack = '[',\\n  lbrke = '\\\\u298B',\\n  lbrksld = '\\\\u298F',\\n  lbrkslu = '\\\\u298D',\\n  Lcaron = '\\\\u013D',\\n  lcaron = '\\\\u013E',\\n  Lcedil = '\\\\u013B',\\n  lcedil = '\\\\u013C',\\n  lceil = '\\\\u2308',\\n  lcub = '{',\\n  Lcy = '\\\\u041B',\\n  lcy = '\\\\u043B',\\n  ldca = '\\\\u2936',\\n  ldquo = '\\\\u201C',\\n  ldquor = '\\\\u201E',\\n  ldrdhar = '\\\\u2967',\\n  ldrushar = '\\\\u294B',\\n  ldsh = '\\\\u21B2',\\n  le = '\\\\u2264',\\n  lE = '\\\\u2266',\\n  LeftAngleBracket = '\\\\u27E8',\\n  LeftArrowBar = '\\\\u21E4',\\n  leftarrow = '\\\\u2190',\\n  LeftArrow = '\\\\u2190',\\n  Leftarrow = '\\\\u21D0',\\n  LeftArrowRightArrow = '\\\\u21C6',\\n  leftarrowtail = '\\\\u21A2',\\n  LeftCeiling = '\\\\u2308',\\n  LeftDoubleBracket = '\\\\u27E6',\\n  LeftDownTeeVector = '\\\\u2961',\\n  LeftDownVectorBar = '\\\\u2959',\\n  LeftDownVector = '\\\\u21C3',\\n  LeftFloor = '\\\\u230A',\\n  leftharpoondown = '\\\\u21BD',\\n  leftharpoonup = '\\\\u21BC',\\n  leftleftarrows = '\\\\u21C7',\\n  leftrightarrow = '\\\\u2194',\\n  LeftRightArrow = '\\\\u2194',\\n  Leftrightarrow = '\\\\u21D4',\\n  leftrightarrows = '\\\\u21C6',\\n  leftrightharpoons = '\\\\u21CB',\\n  leftrightsquigarrow = '\\\\u21AD',\\n  LeftRightVector = '\\\\u294E',\\n  LeftTeeArrow = '\\\\u21A4',\\n  LeftTee = '\\\\u22A3',\\n  LeftTeeVector = '\\\\u295A',\\n  leftthreetimes = '\\\\u22CB',\\n  LeftTriangleBar = '\\\\u29CF',\\n  LeftTriangle = '\\\\u22B2',\\n  LeftTriangleEqual = '\\\\u22B4',\\n  LeftUpDownVector = '\\\\u2951',\\n  LeftUpTeeVector = '\\\\u2960',\\n  LeftUpVectorBar = '\\\\u2958',\\n  LeftUpVector = '\\\\u21BF',\\n  LeftVectorBar = '\\\\u2952',\\n  LeftVector = '\\\\u21BC',\\n  lEg = '\\\\u2A8B',\\n  leg = '\\\\u22DA',\\n  leq = '\\\\u2264',\\n  leqq = '\\\\u2266',\\n  leqslant = '\\\\u2A7D',\\n  lescc = '\\\\u2AA8',\\n  les = '\\\\u2A7D',\\n  lesdot = '\\\\u2A7F',\\n  lesdoto = '\\\\u2A81',\\n  lesdotor = '\\\\u2A83',\\n  lesg = '\\\\u22DA\\\\uFE00',\\n  lesges = '\\\\u2A93',\\n  lessapprox = '\\\\u2A85',\\n  lessdot = '\\\\u22D6',\\n  lesseqgtr = '\\\\u22DA',\\n  lesseqqgtr = '\\\\u2A8B',\\n  LessEqualGreater = '\\\\u22DA',\\n  LessFullEqual = '\\\\u2266',\\n  LessGreater = '\\\\u2276',\\n  lessgtr = '\\\\u2276',\\n  LessLess = '\\\\u2AA1',\\n  lesssim = '\\\\u2272',\\n  LessSlantEqual = '\\\\u2A7D',\\n  LessTilde = '\\\\u2272',\\n  lfisht = '\\\\u297C',\\n  lfloor = '\\\\u230A',\\n  Lfr = '\\\\u{1D50F}',\\n  lfr = '\\\\u{1D529}',\\n  lg = '\\\\u2276',\\n  lgE = '\\\\u2A91',\\n  lHar = '\\\\u2962',\\n  lhard = '\\\\u21BD',\\n  lharu = '\\\\u21BC',\\n  lharul = '\\\\u296A',\\n  lhblk = '\\\\u2584',\\n  LJcy = '\\\\u0409',\\n  ljcy = '\\\\u0459',\\n  llarr = '\\\\u21C7',\\n  ll = '\\\\u226A',\\n  Ll = '\\\\u22D8',\\n  llcorner = '\\\\u231E',\\n  Lleftarrow = '\\\\u21DA',\\n  llhard = '\\\\u296B',\\n  lltri = '\\\\u25FA',\\n  Lmidot = '\\\\u013F',\\n  lmidot = '\\\\u0140',\\n  lmoustache = '\\\\u23B0',\\n  lmoust = '\\\\u23B0',\\n  lnap = '\\\\u2A89',\\n  lnapprox = '\\\\u2A89',\\n  lne = '\\\\u2A87',\\n  lnE = '\\\\u2268',\\n  lneq = '\\\\u2A87',\\n  lneqq = '\\\\u2268',\\n  lnsim = '\\\\u22E6',\\n  loang = '\\\\u27EC',\\n  loarr = '\\\\u21FD',\\n  lobrk = '\\\\u27E6',\\n  longleftarrow = '\\\\u27F5',\\n  LongLeftArrow = '\\\\u27F5',\\n  Longleftarrow = '\\\\u27F8',\\n  longleftrightarrow = '\\\\u27F7',\\n  LongLeftRightArrow = '\\\\u27F7',\\n  Longleftrightarrow = '\\\\u27FA',\\n  longmapsto = '\\\\u27FC',\\n  longrightarrow = '\\\\u27F6',\\n  LongRightArrow = '\\\\u27F6',\\n  Longrightarrow = '\\\\u27F9',\\n  looparrowleft = '\\\\u21AB',\\n  looparrowright = '\\\\u21AC',\\n  lopar = '\\\\u2985',\\n  Lopf = '\\\\u{1D543}',\\n  lopf = '\\\\u{1D55D}',\\n  loplus = '\\\\u2A2D',\\n  lotimes = '\\\\u2A34',\\n  lowast = '\\\\u2217',\\n  lowbar = '_',\\n  LowerLeftArrow = '\\\\u2199',\\n  LowerRightArrow = '\\\\u2198',\\n  loz = '\\\\u25CA',\\n  lozenge = '\\\\u25CA',\\n  lozf = '\\\\u29EB',\\n  lpar = '(',\\n  lparlt = '\\\\u2993',\\n  lrarr = '\\\\u21C6',\\n  lrcorner = '\\\\u231F',\\n  lrhar = '\\\\u21CB',\\n  lrhard = '\\\\u296D',\\n  lrm = '\\\\u200E',\\n  lrtri = '\\\\u22BF',\\n  lsaquo = '\\\\u2039',\\n  lscr = '\\\\u{1D4C1}',\\n  Lscr = '\\\\u2112',\\n  lsh = '\\\\u21B0',\\n  Lsh = '\\\\u21B0',\\n  lsim = '\\\\u2272',\\n  lsime = '\\\\u2A8D',\\n  lsimg = '\\\\u2A8F',\\n  lsqb = '[',\\n  lsquo = '\\\\u2018',\\n  lsquor = '\\\\u201A',\\n  Lstrok = '\\\\u0141',\\n  lstrok = '\\\\u0142',\\n  ltcc = '\\\\u2AA6',\\n  ltcir = '\\\\u2A79',\\n  lt = '<',\\n  LT = '<',\\n  Lt = '\\\\u226A',\\n  ltdot = '\\\\u22D6',\\n  lthree = '\\\\u22CB',\\n  ltimes = '\\\\u22C9',\\n  ltlarr = '\\\\u2976',\\n  ltquest = '\\\\u2A7B',\\n  ltri = '\\\\u25C3',\\n  ltrie = '\\\\u22B4',\\n  ltrif = '\\\\u25C2',\\n  ltrPar = '\\\\u2996',\\n  lurdshar = '\\\\u294A',\\n  luruhar = '\\\\u2966',\\n  lvertneqq = '\\\\u2268\\\\uFE00',\\n  lvnE = '\\\\u2268\\\\uFE00',\\n  macr = '\\\\xAF',\\n  male = '\\\\u2642',\\n  malt = '\\\\u2720',\\n  maltese = '\\\\u2720',\\n  map = '\\\\u21A6',\\n  mapsto = '\\\\u21A6',\\n  mapstodown = '\\\\u21A7',\\n  mapstoleft = '\\\\u21A4',\\n  mapstoup = '\\\\u21A5',\\n  marker = '\\\\u25AE',\\n  mcomma = '\\\\u2A29',\\n  Mcy = '\\\\u041C',\\n  mcy = '\\\\u043C',\\n  mdash = '\\\\u2014',\\n  mDDot = '\\\\u223A',\\n  measuredangle = '\\\\u2221',\\n  MediumSpace = '\\\\u205F',\\n  Mellintrf = '\\\\u2133',\\n  Mfr = '\\\\u{1D510}',\\n  mfr = '\\\\u{1D52A}',\\n  mho = '\\\\u2127',\\n  micro = '\\\\xB5',\\n  midast = '*',\\n  midcir = '\\\\u2AF0',\\n  mid = '\\\\u2223',\\n  middot = '\\\\xB7',\\n  minusb = '\\\\u229F',\\n  minus = '\\\\u2212',\\n  minusd = '\\\\u2238',\\n  minusdu = '\\\\u2A2A',\\n  MinusPlus = '\\\\u2213',\\n  mlcp = '\\\\u2ADB',\\n  mldr = '\\\\u2026',\\n  mnplus = '\\\\u2213',\\n  models = '\\\\u22A7',\\n  Mopf = '\\\\u{1D544}',\\n  mopf = '\\\\u{1D55E}',\\n  mp = '\\\\u2213',\\n  mscr = '\\\\u{1D4C2}',\\n  Mscr = '\\\\u2133',\\n  mstpos = '\\\\u223E',\\n  Mu = '\\\\u039C',\\n  mu = '\\\\u03BC',\\n  multimap = '\\\\u22B8',\\n  mumap = '\\\\u22B8',\\n  nabla = '\\\\u2207',\\n  Nacute = '\\\\u0143',\\n  nacute = '\\\\u0144',\\n  nang = '\\\\u2220\\\\u20D2',\\n  nap = '\\\\u2249',\\n  napE = '\\\\u2A70\\\\u0338',\\n  napid = '\\\\u224B\\\\u0338',\\n  napos = '\\\\u0149',\\n  napprox = '\\\\u2249',\\n  natural = '\\\\u266E',\\n  naturals = '\\\\u2115',\\n  natur = '\\\\u266E',\\n  nbsp = '\\\\xA0',\\n  nbump = '\\\\u224E\\\\u0338',\\n  nbumpe = '\\\\u224F\\\\u0338',\\n  ncap = '\\\\u2A43',\\n  Ncaron = '\\\\u0147',\\n  ncaron = '\\\\u0148',\\n  Ncedil = '\\\\u0145',\\n  ncedil = '\\\\u0146',\\n  ncong = '\\\\u2247',\\n  ncongdot = '\\\\u2A6D\\\\u0338',\\n  ncup = '\\\\u2A42',\\n  Ncy = '\\\\u041D',\\n  ncy = '\\\\u043D',\\n  ndash = '\\\\u2013',\\n  nearhk = '\\\\u2924',\\n  nearr = '\\\\u2197',\\n  neArr = '\\\\u21D7',\\n  nearrow = '\\\\u2197',\\n  ne = '\\\\u2260',\\n  nedot = '\\\\u2250\\\\u0338',\\n  NegativeMediumSpace = '\\\\u200B',\\n  NegativeThickSpace = '\\\\u200B',\\n  NegativeThinSpace = '\\\\u200B',\\n  NegativeVeryThinSpace = '\\\\u200B',\\n  nequiv = '\\\\u2262',\\n  nesear = '\\\\u2928',\\n  nesim = '\\\\u2242\\\\u0338',\\n  NestedGreaterGreater = '\\\\u226B',\\n  NestedLessLess = '\\\\u226A',\\n  NewLine = `\\n`,\\n  nexist = '\\\\u2204',\\n  nexists = '\\\\u2204',\\n  Nfr = '\\\\u{1D511}',\\n  nfr = '\\\\u{1D52B}',\\n  ngE = '\\\\u2267\\\\u0338',\\n  nge = '\\\\u2271',\\n  ngeq = '\\\\u2271',\\n  ngeqq = '\\\\u2267\\\\u0338',\\n  ngeqslant = '\\\\u2A7E\\\\u0338',\\n  nges = '\\\\u2A7E\\\\u0338',\\n  nGg = '\\\\u22D9\\\\u0338',\\n  ngsim = '\\\\u2275',\\n  nGt = '\\\\u226B\\\\u20D2',\\n  ngt = '\\\\u226F',\\n  ngtr = '\\\\u226F',\\n  nGtv = '\\\\u226B\\\\u0338',\\n  nharr = '\\\\u21AE',\\n  nhArr = '\\\\u21CE',\\n  nhpar = '\\\\u2AF2',\\n  ni = '\\\\u220B',\\n  nis = '\\\\u22FC',\\n  nisd = '\\\\u22FA',\\n  niv = '\\\\u220B',\\n  NJcy = '\\\\u040A',\\n  njcy = '\\\\u045A',\\n  nlarr = '\\\\u219A',\\n  nlArr = '\\\\u21CD',\\n  nldr = '\\\\u2025',\\n  nlE = '\\\\u2266\\\\u0338',\\n  nle = '\\\\u2270',\\n  nleftarrow = '\\\\u219A',\\n  nLeftarrow = '\\\\u21CD',\\n  nleftrightarrow = '\\\\u21AE',\\n  nLeftrightarrow = '\\\\u21CE',\\n  nleq = '\\\\u2270',\\n  nleqq = '\\\\u2266\\\\u0338',\\n  nleqslant = '\\\\u2A7D\\\\u0338',\\n  nles = '\\\\u2A7D\\\\u0338',\\n  nless = '\\\\u226E',\\n  nLl = '\\\\u22D8\\\\u0338',\\n  nlsim = '\\\\u2274',\\n  nLt = '\\\\u226A\\\\u20D2',\\n  nlt = '\\\\u226E',\\n  nltri = '\\\\u22EA',\\n  nltrie = '\\\\u22EC',\\n  nLtv = '\\\\u226A\\\\u0338',\\n  nmid = '\\\\u2224',\\n  NoBreak = '\\\\u2060',\\n  NonBreakingSpace = '\\\\xA0',\\n  nopf = '\\\\u{1D55F}',\\n  Nopf = '\\\\u2115',\\n  Not = '\\\\u2AEC',\\n  not = '\\\\xAC',\\n  NotCongruent = '\\\\u2262',\\n  NotCupCap = '\\\\u226D',\\n  NotDoubleVerticalBar = '\\\\u2226',\\n  NotElement = '\\\\u2209',\\n  NotEqual = '\\\\u2260',\\n  NotEqualTilde = '\\\\u2242\\\\u0338',\\n  NotExists = '\\\\u2204',\\n  NotGreater = '\\\\u226F',\\n  NotGreaterEqual = '\\\\u2271',\\n  NotGreaterFullEqual = '\\\\u2267\\\\u0338',\\n  NotGreaterGreater = '\\\\u226B\\\\u0338',\\n  NotGreaterLess = '\\\\u2279',\\n  NotGreaterSlantEqual = '\\\\u2A7E\\\\u0338',\\n  NotGreaterTilde = '\\\\u2275',\\n  NotHumpDownHump = '\\\\u224E\\\\u0338',\\n  NotHumpEqual = '\\\\u224F\\\\u0338',\\n  notin = '\\\\u2209',\\n  notindot = '\\\\u22F5\\\\u0338',\\n  notinE = '\\\\u22F9\\\\u0338',\\n  notinva = '\\\\u2209',\\n  notinvb = '\\\\u22F7',\\n  notinvc = '\\\\u22F6',\\n  NotLeftTriangleBar = '\\\\u29CF\\\\u0338',\\n  NotLeftTriangle = '\\\\u22EA',\\n  NotLeftTriangleEqual = '\\\\u22EC',\\n  NotLess = '\\\\u226E',\\n  NotLessEqual = '\\\\u2270',\\n  NotLessGreater = '\\\\u2278',\\n  NotLessLess = '\\\\u226A\\\\u0338',\\n  NotLessSlantEqual = '\\\\u2A7D\\\\u0338',\\n  NotLessTilde = '\\\\u2274',\\n  NotNestedGreaterGreater = '\\\\u2AA2\\\\u0338',\\n  NotNestedLessLess = '\\\\u2AA1\\\\u0338',\\n  notni = '\\\\u220C',\\n  notniva = '\\\\u220C',\\n  notnivb = '\\\\u22FE',\\n  notnivc = '\\\\u22FD',\\n  NotPrecedes = '\\\\u2280',\\n  NotPrecedesEqual = '\\\\u2AAF\\\\u0338',\\n  NotPrecedesSlantEqual = '\\\\u22E0',\\n  NotReverseElement = '\\\\u220C',\\n  NotRightTriangleBar = '\\\\u29D0\\\\u0338',\\n  NotRightTriangle = '\\\\u22EB',\\n  NotRightTriangleEqual = '\\\\u22ED',\\n  NotSquareSubset = '\\\\u228F\\\\u0338',\\n  NotSquareSubsetEqual = '\\\\u22E2',\\n  NotSquareSuperset = '\\\\u2290\\\\u0338',\\n  NotSquareSupersetEqual = '\\\\u22E3',\\n  NotSubset = '\\\\u2282\\\\u20D2',\\n  NotSubsetEqual = '\\\\u2288',\\n  NotSucceeds = '\\\\u2281',\\n  NotSucceedsEqual = '\\\\u2AB0\\\\u0338',\\n  NotSucceedsSlantEqual = '\\\\u22E1',\\n  NotSucceedsTilde = '\\\\u227F\\\\u0338',\\n  NotSuperset = '\\\\u2283\\\\u20D2',\\n  NotSupersetEqual = '\\\\u2289',\\n  NotTilde = '\\\\u2241',\\n  NotTildeEqual = '\\\\u2244',\\n  NotTildeFullEqual = '\\\\u2247',\\n  NotTildeTilde = '\\\\u2249',\\n  NotVerticalBar = '\\\\u2224',\\n  nparallel = '\\\\u2226',\\n  npar = '\\\\u2226',\\n  nparsl = '\\\\u2AFD\\\\u20E5',\\n  npart = '\\\\u2202\\\\u0338',\\n  npolint = '\\\\u2A14',\\n  npr = '\\\\u2280',\\n  nprcue = '\\\\u22E0',\\n  nprec = '\\\\u2280',\\n  npreceq = '\\\\u2AAF\\\\u0338',\\n  npre = '\\\\u2AAF\\\\u0338',\\n  nrarrc = '\\\\u2933\\\\u0338',\\n  nrarr = '\\\\u219B',\\n  nrArr = '\\\\u21CF',\\n  nrarrw = '\\\\u219D\\\\u0338',\\n  nrightarrow = '\\\\u219B',\\n  nRightarrow = '\\\\u21CF',\\n  nrtri = '\\\\u22EB',\\n  nrtrie = '\\\\u22ED',\\n  nsc = '\\\\u2281',\\n  nsccue = '\\\\u22E1',\\n  nsce = '\\\\u2AB0\\\\u0338',\\n  Nscr = '\\\\u{1D4A9}',\\n  nscr = '\\\\u{1D4C3}',\\n  nshortmid = '\\\\u2224',\\n  nshortparallel = '\\\\u2226',\\n  nsim = '\\\\u2241',\\n  nsime = '\\\\u2244',\\n  nsimeq = '\\\\u2244',\\n  nsmid = '\\\\u2224',\\n  nspar = '\\\\u2226',\\n  nsqsube = '\\\\u22E2',\\n  nsqsupe = '\\\\u22E3',\\n  nsub = '\\\\u2284',\\n  nsubE = '\\\\u2AC5\\\\u0338',\\n  nsube = '\\\\u2288',\\n  nsubset = '\\\\u2282\\\\u20D2',\\n  nsubseteq = '\\\\u2288',\\n  nsubseteqq = '\\\\u2AC5\\\\u0338',\\n  nsucc = '\\\\u2281',\\n  nsucceq = '\\\\u2AB0\\\\u0338',\\n  nsup = '\\\\u2285',\\n  nsupE = '\\\\u2AC6\\\\u0338',\\n  nsupe = '\\\\u2289',\\n  nsupset = '\\\\u2283\\\\u20D2',\\n  nsupseteq = '\\\\u2289',\\n  nsupseteqq = '\\\\u2AC6\\\\u0338',\\n  ntgl = '\\\\u2279',\\n  Ntilde = '\\\\xD1',\\n  ntilde = '\\\\xF1',\\n  ntlg = '\\\\u2278',\\n  ntriangleleft = '\\\\u22EA',\\n  ntrianglelefteq = '\\\\u22EC',\\n  ntriangleright = '\\\\u22EB',\\n  ntrianglerighteq = '\\\\u22ED',\\n  Nu = '\\\\u039D',\\n  nu = '\\\\u03BD',\\n  num = '#',\\n  numero = '\\\\u2116',\\n  numsp = '\\\\u2007',\\n  nvap = '\\\\u224D\\\\u20D2',\\n  nvdash = '\\\\u22AC',\\n  nvDash = '\\\\u22AD',\\n  nVdash = '\\\\u22AE',\\n  nVDash = '\\\\u22AF',\\n  nvge = '\\\\u2265\\\\u20D2',\\n  nvgt = '>\\\\u20D2',\\n  nvHarr = '\\\\u2904',\\n  nvinfin = '\\\\u29DE',\\n  nvlArr = '\\\\u2902',\\n  nvle = '\\\\u2264\\\\u20D2',\\n  nvlt = '<\\\\u20D2',\\n  nvltrie = '\\\\u22B4\\\\u20D2',\\n  nvrArr = '\\\\u2903',\\n  nvrtrie = '\\\\u22B5\\\\u20D2',\\n  nvsim = '\\\\u223C\\\\u20D2',\\n  nwarhk = '\\\\u2923',\\n  nwarr = '\\\\u2196',\\n  nwArr = '\\\\u21D6',\\n  nwarrow = '\\\\u2196',\\n  nwnear = '\\\\u2927',\\n  Oacute = '\\\\xD3',\\n  oacute = '\\\\xF3',\\n  oast = '\\\\u229B',\\n  Ocirc = '\\\\xD4',\\n  ocirc = '\\\\xF4',\\n  ocir = '\\\\u229A',\\n  Ocy = '\\\\u041E',\\n  ocy = '\\\\u043E',\\n  odash = '\\\\u229D',\\n  Odblac = '\\\\u0150',\\n  odblac = '\\\\u0151',\\n  odiv = '\\\\u2A38',\\n  odot = '\\\\u2299',\\n  odsold = '\\\\u29BC',\\n  OElig = '\\\\u0152',\\n  oelig = '\\\\u0153',\\n  ofcir = '\\\\u29BF',\\n  Ofr = '\\\\u{1D512}',\\n  ofr = '\\\\u{1D52C}',\\n  ogon = '\\\\u02DB',\\n  Ograve = '\\\\xD2',\\n  ograve = '\\\\xF2',\\n  ogt = '\\\\u29C1',\\n  ohbar = '\\\\u29B5',\\n  ohm = '\\\\u03A9',\\n  oint = '\\\\u222E',\\n  olarr = '\\\\u21BA',\\n  olcir = '\\\\u29BE',\\n  olcross = '\\\\u29BB',\\n  oline = '\\\\u203E',\\n  olt = '\\\\u29C0',\\n  Omacr = '\\\\u014C',\\n  omacr = '\\\\u014D',\\n  Omega = '\\\\u03A9',\\n  omega = '\\\\u03C9',\\n  Omicron = '\\\\u039F',\\n  omicron = '\\\\u03BF',\\n  omid = '\\\\u29B6',\\n  ominus = '\\\\u2296',\\n  Oopf = '\\\\u{1D546}',\\n  oopf = '\\\\u{1D560}',\\n  opar = '\\\\u29B7',\\n  OpenCurlyDoubleQuote = '\\\\u201C',\\n  OpenCurlyQuote = '\\\\u2018',\\n  operp = '\\\\u29B9',\\n  oplus = '\\\\u2295',\\n  orarr = '\\\\u21BB',\\n  Or = '\\\\u2A54',\\n  or = '\\\\u2228',\\n  ord = '\\\\u2A5D',\\n  order = '\\\\u2134',\\n  orderof = '\\\\u2134',\\n  ordf = '\\\\xAA',\\n  ordm = '\\\\xBA',\\n  origof = '\\\\u22B6',\\n  oror = '\\\\u2A56',\\n  orslope = '\\\\u2A57',\\n  orv = '\\\\u2A5B',\\n  oS = '\\\\u24C8',\\n  Oscr = '\\\\u{1D4AA}',\\n  oscr = '\\\\u2134',\\n  Oslash = '\\\\xD8',\\n  oslash = '\\\\xF8',\\n  osol = '\\\\u2298',\\n  Otilde = '\\\\xD5',\\n  otilde = '\\\\xF5',\\n  otimesas = '\\\\u2A36',\\n  Otimes = '\\\\u2A37',\\n  otimes = '\\\\u2297',\\n  Ouml = '\\\\xD6',\\n  ouml = '\\\\xF6',\\n  ovbar = '\\\\u233D',\\n  OverBar = '\\\\u203E',\\n  OverBrace = '\\\\u23DE',\\n  OverBracket = '\\\\u23B4',\\n  OverParenthesis = '\\\\u23DC',\\n  para = '\\\\xB6',\\n  parallel = '\\\\u2225',\\n  par = '\\\\u2225',\\n  parsim = '\\\\u2AF3',\\n  parsl = '\\\\u2AFD',\\n  part = '\\\\u2202',\\n  PartialD = '\\\\u2202',\\n  Pcy = '\\\\u041F',\\n  pcy = '\\\\u043F',\\n  percnt = '%',\\n  period = '.',\\n  permil = '\\\\u2030',\\n  perp = '\\\\u22A5',\\n  pertenk = '\\\\u2031',\\n  Pfr = '\\\\u{1D513}',\\n  pfr = '\\\\u{1D52D}',\\n  Phi = '\\\\u03A6',\\n  phi = '\\\\u03C6',\\n  phiv = '\\\\u03D5',\\n  phmmat = '\\\\u2133',\\n  phone = '\\\\u260E',\\n  Pi = '\\\\u03A0',\\n  pi = '\\\\u03C0',\\n  pitchfork = '\\\\u22D4',\\n  piv = '\\\\u03D6',\\n  planck = '\\\\u210F',\\n  planckh = '\\\\u210E',\\n  plankv = '\\\\u210F',\\n  plusacir = '\\\\u2A23',\\n  plusb = '\\\\u229E',\\n  pluscir = '\\\\u2A22',\\n  plus = '+',\\n  plusdo = '\\\\u2214',\\n  plusdu = '\\\\u2A25',\\n  pluse = '\\\\u2A72',\\n  PlusMinus = '\\\\xB1',\\n  plusmn = '\\\\xB1',\\n  plussim = '\\\\u2A26',\\n  plustwo = '\\\\u2A27',\\n  pm = '\\\\xB1',\\n  Poincareplane = '\\\\u210C',\\n  pointint = '\\\\u2A15',\\n  popf = '\\\\u{1D561}',\\n  Popf = '\\\\u2119',\\n  pound = '\\\\xA3',\\n  prap = '\\\\u2AB7',\\n  Pr = '\\\\u2ABB',\\n  pr = '\\\\u227A',\\n  prcue = '\\\\u227C',\\n  precapprox = '\\\\u2AB7',\\n  prec = '\\\\u227A',\\n  preccurlyeq = '\\\\u227C',\\n  Precedes = '\\\\u227A',\\n  PrecedesEqual = '\\\\u2AAF',\\n  PrecedesSlantEqual = '\\\\u227C',\\n  PrecedesTilde = '\\\\u227E',\\n  preceq = '\\\\u2AAF',\\n  precnapprox = '\\\\u2AB9',\\n  precneqq = '\\\\u2AB5',\\n  precnsim = '\\\\u22E8',\\n  pre = '\\\\u2AAF',\\n  prE = '\\\\u2AB3',\\n  precsim = '\\\\u227E',\\n  prime = '\\\\u2032',\\n  Prime = '\\\\u2033',\\n  primes = '\\\\u2119',\\n  prnap = '\\\\u2AB9',\\n  prnE = '\\\\u2AB5',\\n  prnsim = '\\\\u22E8',\\n  prod = '\\\\u220F',\\n  Product = '\\\\u220F',\\n  profalar = '\\\\u232E',\\n  profline = '\\\\u2312',\\n  profsurf = '\\\\u2313',\\n  prop = '\\\\u221D',\\n  Proportional = '\\\\u221D',\\n  Proportion = '\\\\u2237',\\n  propto = '\\\\u221D',\\n  prsim = '\\\\u227E',\\n  prurel = '\\\\u22B0',\\n  Pscr = '\\\\u{1D4AB}',\\n  pscr = '\\\\u{1D4C5}',\\n  Psi = '\\\\u03A8',\\n  psi = '\\\\u03C8',\\n  puncsp = '\\\\u2008',\\n  Qfr = '\\\\u{1D514}',\\n  qfr = '\\\\u{1D52E}',\\n  qint = '\\\\u2A0C',\\n  qopf = '\\\\u{1D562}',\\n  Qopf = '\\\\u211A',\\n  qprime = '\\\\u2057',\\n  Qscr = '\\\\u{1D4AC}',\\n  qscr = '\\\\u{1D4C6}',\\n  quaternions = '\\\\u210D',\\n  quatint = '\\\\u2A16',\\n  quest = '?',\\n  questeq = '\\\\u225F',\\n  quot = '\\\"',\\n  QUOT = '\\\"',\\n  rAarr = '\\\\u21DB',\\n  race = '\\\\u223D\\\\u0331',\\n  Racute = '\\\\u0154',\\n  racute = '\\\\u0155',\\n  radic = '\\\\u221A',\\n  raemptyv = '\\\\u29B3',\\n  rang = '\\\\u27E9',\\n  Rang = '\\\\u27EB',\\n  rangd = '\\\\u2992',\\n  range = '\\\\u29A5',\\n  rangle = '\\\\u27E9',\\n  raquo = '\\\\xBB',\\n  rarrap = '\\\\u2975',\\n  rarrb = '\\\\u21E5',\\n  rarrbfs = '\\\\u2920',\\n  rarrc = '\\\\u2933',\\n  rarr = '\\\\u2192',\\n  Rarr = '\\\\u21A0',\\n  rArr = '\\\\u21D2',\\n  rarrfs = '\\\\u291E',\\n  rarrhk = '\\\\u21AA',\\n  rarrlp = '\\\\u21AC',\\n  rarrpl = '\\\\u2945',\\n  rarrsim = '\\\\u2974',\\n  Rarrtl = '\\\\u2916',\\n  rarrtl = '\\\\u21A3',\\n  rarrw = '\\\\u219D',\\n  ratail = '\\\\u291A',\\n  rAtail = '\\\\u291C',\\n  ratio = '\\\\u2236',\\n  rationals = '\\\\u211A',\\n  rbarr = '\\\\u290D',\\n  rBarr = '\\\\u290F',\\n  RBarr = '\\\\u2910',\\n  rbbrk = '\\\\u2773',\\n  rbrace = '}',\\n  rbrack = ']',\\n  rbrke = '\\\\u298C',\\n  rbrksld = '\\\\u298E',\\n  rbrkslu = '\\\\u2990',\\n  Rcaron = '\\\\u0158',\\n  rcaron = '\\\\u0159',\\n  Rcedil = '\\\\u0156',\\n  rcedil = '\\\\u0157',\\n  rceil = '\\\\u2309',\\n  rcub = '}',\\n  Rcy = '\\\\u0420',\\n  rcy = '\\\\u0440',\\n  rdca = '\\\\u2937',\\n  rdldhar = '\\\\u2969',\\n  rdquo = '\\\\u201D',\\n  rdquor = '\\\\u201D',\\n  rdsh = '\\\\u21B3',\\n  real = '\\\\u211C',\\n  realine = '\\\\u211B',\\n  realpart = '\\\\u211C',\\n  reals = '\\\\u211D',\\n  Re = '\\\\u211C',\\n  rect = '\\\\u25AD',\\n  reg = '\\\\xAE',\\n  REG = '\\\\xAE',\\n  ReverseElement = '\\\\u220B',\\n  ReverseEquilibrium = '\\\\u21CB',\\n  ReverseUpEquilibrium = '\\\\u296F',\\n  rfisht = '\\\\u297D',\\n  rfloor = '\\\\u230B',\\n  rfr = '\\\\u{1D52F}',\\n  Rfr = '\\\\u211C',\\n  rHar = '\\\\u2964',\\n  rhard = '\\\\u21C1',\\n  rharu = '\\\\u21C0',\\n  rharul = '\\\\u296C',\\n  Rho = '\\\\u03A1',\\n  rho = '\\\\u03C1',\\n  rhov = '\\\\u03F1',\\n  RightAngleBracket = '\\\\u27E9',\\n  RightArrowBar = '\\\\u21E5',\\n  rightarrow = '\\\\u2192',\\n  RightArrow = '\\\\u2192',\\n  Rightarrow = '\\\\u21D2',\\n  RightArrowLeftArrow = '\\\\u21C4',\\n  rightarrowtail = '\\\\u21A3',\\n  RightCeiling = '\\\\u2309',\\n  RightDoubleBracket = '\\\\u27E7',\\n  RightDownTeeVector = '\\\\u295D',\\n  RightDownVectorBar = '\\\\u2955',\\n  RightDownVector = '\\\\u21C2',\\n  RightFloor = '\\\\u230B',\\n  rightharpoondown = '\\\\u21C1',\\n  rightharpoonup = '\\\\u21C0',\\n  rightleftarrows = '\\\\u21C4',\\n  rightleftharpoons = '\\\\u21CC',\\n  rightrightarrows = '\\\\u21C9',\\n  rightsquigarrow = '\\\\u219D',\\n  RightTeeArrow = '\\\\u21A6',\\n  RightTee = '\\\\u22A2',\\n  RightTeeVector = '\\\\u295B',\\n  rightthreetimes = '\\\\u22CC',\\n  RightTriangleBar = '\\\\u29D0',\\n  RightTriangle = '\\\\u22B3',\\n  RightTriangleEqual = '\\\\u22B5',\\n  RightUpDownVector = '\\\\u294F',\\n  RightUpTeeVector = '\\\\u295C',\\n  RightUpVectorBar = '\\\\u2954',\\n  RightUpVector = '\\\\u21BE',\\n  RightVectorBar = '\\\\u2953',\\n  RightVector = '\\\\u21C0',\\n  ring = '\\\\u02DA',\\n  risingdotseq = '\\\\u2253',\\n  rlarr = '\\\\u21C4',\\n  rlhar = '\\\\u21CC',\\n  rlm = '\\\\u200F',\\n  rmoustache = '\\\\u23B1',\\n  rmoust = '\\\\u23B1',\\n  rnmid = '\\\\u2AEE',\\n  roang = '\\\\u27ED',\\n  roarr = '\\\\u21FE',\\n  robrk = '\\\\u27E7',\\n  ropar = '\\\\u2986',\\n  ropf = '\\\\u{1D563}',\\n  Ropf = '\\\\u211D',\\n  roplus = '\\\\u2A2E',\\n  rotimes = '\\\\u2A35',\\n  RoundImplies = '\\\\u2970',\\n  rpar = ')',\\n  rpargt = '\\\\u2994',\\n  rppolint = '\\\\u2A12',\\n  rrarr = '\\\\u21C9',\\n  Rrightarrow = '\\\\u21DB',\\n  rsaquo = '\\\\u203A',\\n  rscr = '\\\\u{1D4C7}',\\n  Rscr = '\\\\u211B',\\n  rsh = '\\\\u21B1',\\n  Rsh = '\\\\u21B1',\\n  rsqb = ']',\\n  rsquo = '\\\\u2019',\\n  rsquor = '\\\\u2019',\\n  rthree = '\\\\u22CC',\\n  rtimes = '\\\\u22CA',\\n  rtri = '\\\\u25B9',\\n  rtrie = '\\\\u22B5',\\n  rtrif = '\\\\u25B8',\\n  rtriltri = '\\\\u29CE',\\n  RuleDelayed = '\\\\u29F4',\\n  ruluhar = '\\\\u2968',\\n  rx = '\\\\u211E',\\n  Sacute = '\\\\u015A',\\n  sacute = '\\\\u015B',\\n  sbquo = '\\\\u201A',\\n  scap = '\\\\u2AB8',\\n  Scaron = '\\\\u0160',\\n  scaron = '\\\\u0161',\\n  Sc = '\\\\u2ABC',\\n  sc = '\\\\u227B',\\n  sccue = '\\\\u227D',\\n  sce = '\\\\u2AB0',\\n  scE = '\\\\u2AB4',\\n  Scedil = '\\\\u015E',\\n  scedil = '\\\\u015F',\\n  Scirc = '\\\\u015C',\\n  scirc = '\\\\u015D',\\n  scnap = '\\\\u2ABA',\\n  scnE = '\\\\u2AB6',\\n  scnsim = '\\\\u22E9',\\n  scpolint = '\\\\u2A13',\\n  scsim = '\\\\u227F',\\n  Scy = '\\\\u0421',\\n  scy = '\\\\u0441',\\n  sdotb = '\\\\u22A1',\\n  sdot = '\\\\u22C5',\\n  sdote = '\\\\u2A66',\\n  searhk = '\\\\u2925',\\n  searr = '\\\\u2198',\\n  seArr = '\\\\u21D8',\\n  searrow = '\\\\u2198',\\n  sect = '\\\\xA7',\\n  semi = ';',\\n  seswar = '\\\\u2929',\\n  setminus = '\\\\u2216',\\n  setmn = '\\\\u2216',\\n  sext = '\\\\u2736',\\n  Sfr = '\\\\u{1D516}',\\n  sfr = '\\\\u{1D530}',\\n  sfrown = '\\\\u2322',\\n  sharp = '\\\\u266F',\\n  SHCHcy = '\\\\u0429',\\n  shchcy = '\\\\u0449',\\n  SHcy = '\\\\u0428',\\n  shcy = '\\\\u0448',\\n  ShortDownArrow = '\\\\u2193',\\n  ShortLeftArrow = '\\\\u2190',\\n  shortmid = '\\\\u2223',\\n  shortparallel = '\\\\u2225',\\n  ShortRightArrow = '\\\\u2192',\\n  ShortUpArrow = '\\\\u2191',\\n  shy = '\\\\xAD',\\n  Sigma = '\\\\u03A3',\\n  sigma = '\\\\u03C3',\\n  sigmaf = '\\\\u03C2',\\n  sigmav = '\\\\u03C2',\\n  sim = '\\\\u223C',\\n  simdot = '\\\\u2A6A',\\n  sime = '\\\\u2243',\\n  simeq = '\\\\u2243',\\n  simg = '\\\\u2A9E',\\n  simgE = '\\\\u2AA0',\\n  siml = '\\\\u2A9D',\\n  simlE = '\\\\u2A9F',\\n  simne = '\\\\u2246',\\n  simplus = '\\\\u2A24',\\n  simrarr = '\\\\u2972',\\n  slarr = '\\\\u2190',\\n  SmallCircle = '\\\\u2218',\\n  smallsetminus = '\\\\u2216',\\n  smashp = '\\\\u2A33',\\n  smeparsl = '\\\\u29E4',\\n  smid = '\\\\u2223',\\n  smile = '\\\\u2323',\\n  smt = '\\\\u2AAA',\\n  smte = '\\\\u2AAC',\\n  smtes = '\\\\u2AAC\\\\uFE00',\\n  SOFTcy = '\\\\u042C',\\n  softcy = '\\\\u044C',\\n  solbar = '\\\\u233F',\\n  solb = '\\\\u29C4',\\n  sol = '/',\\n  Sopf = '\\\\u{1D54A}',\\n  sopf = '\\\\u{1D564}',\\n  spades = '\\\\u2660',\\n  spadesuit = '\\\\u2660',\\n  spar = '\\\\u2225',\\n  sqcap = '\\\\u2293',\\n  sqcaps = '\\\\u2293\\\\uFE00',\\n  sqcup = '\\\\u2294',\\n  sqcups = '\\\\u2294\\\\uFE00',\\n  Sqrt = '\\\\u221A',\\n  sqsub = '\\\\u228F',\\n  sqsube = '\\\\u2291',\\n  sqsubset = '\\\\u228F',\\n  sqsubseteq = '\\\\u2291',\\n  sqsup = '\\\\u2290',\\n  sqsupe = '\\\\u2292',\\n  sqsupset = '\\\\u2290',\\n  sqsupseteq = '\\\\u2292',\\n  square = '\\\\u25A1',\\n  Square = '\\\\u25A1',\\n  SquareIntersection = '\\\\u2293',\\n  SquareSubset = '\\\\u228F',\\n  SquareSubsetEqual = '\\\\u2291',\\n  SquareSuperset = '\\\\u2290',\\n  SquareSupersetEqual = '\\\\u2292',\\n  SquareUnion = '\\\\u2294',\\n  squarf = '\\\\u25AA',\\n  squ = '\\\\u25A1',\\n  squf = '\\\\u25AA',\\n  srarr = '\\\\u2192',\\n  Sscr = '\\\\u{1D4AE}',\\n  sscr = '\\\\u{1D4C8}',\\n  ssetmn = '\\\\u2216',\\n  ssmile = '\\\\u2323',\\n  sstarf = '\\\\u22C6',\\n  Star = '\\\\u22C6',\\n  star = '\\\\u2606',\\n  starf = '\\\\u2605',\\n  straightepsilon = '\\\\u03F5',\\n  straightphi = '\\\\u03D5',\\n  strns = '\\\\xAF',\\n  sub = '\\\\u2282',\\n  Sub = '\\\\u22D0',\\n  subdot = '\\\\u2ABD',\\n  subE = '\\\\u2AC5',\\n  sube = '\\\\u2286',\\n  subedot = '\\\\u2AC3',\\n  submult = '\\\\u2AC1',\\n  subnE = '\\\\u2ACB',\\n  subne = '\\\\u228A',\\n  subplus = '\\\\u2ABF',\\n  subrarr = '\\\\u2979',\\n  subset = '\\\\u2282',\\n  Subset = '\\\\u22D0',\\n  subseteq = '\\\\u2286',\\n  subseteqq = '\\\\u2AC5',\\n  SubsetEqual = '\\\\u2286',\\n  subsetneq = '\\\\u228A',\\n  subsetneqq = '\\\\u2ACB',\\n  subsim = '\\\\u2AC7',\\n  subsub = '\\\\u2AD5',\\n  subsup = '\\\\u2AD3',\\n  succapprox = '\\\\u2AB8',\\n  succ = '\\\\u227B',\\n  succcurlyeq = '\\\\u227D',\\n  Succeeds = '\\\\u227B',\\n  SucceedsEqual = '\\\\u2AB0',\\n  SucceedsSlantEqual = '\\\\u227D',\\n  SucceedsTilde = '\\\\u227F',\\n  succeq = '\\\\u2AB0',\\n  succnapprox = '\\\\u2ABA',\\n  succneqq = '\\\\u2AB6',\\n  succnsim = '\\\\u22E9',\\n  succsim = '\\\\u227F',\\n  SuchThat = '\\\\u220B',\\n  sum = '\\\\u2211',\\n  Sum = '\\\\u2211',\\n  sung = '\\\\u266A',\\n  sup1 = '\\\\xB9',\\n  sup2 = '\\\\xB2',\\n  sup3 = '\\\\xB3',\\n  sup = '\\\\u2283',\\n  Sup = '\\\\u22D1',\\n  supdot = '\\\\u2ABE',\\n  supdsub = '\\\\u2AD8',\\n  supE = '\\\\u2AC6',\\n  supe = '\\\\u2287',\\n  supedot = '\\\\u2AC4',\\n  Superset = '\\\\u2283',\\n  SupersetEqual = '\\\\u2287',\\n  suphsol = '\\\\u27C9',\\n  suphsub = '\\\\u2AD7',\\n  suplarr = '\\\\u297B',\\n  supmult = '\\\\u2AC2',\\n  supnE = '\\\\u2ACC',\\n  supne = '\\\\u228B',\\n  supplus = '\\\\u2AC0',\\n  supset = '\\\\u2283',\\n  Supset = '\\\\u22D1',\\n  supseteq = '\\\\u2287',\\n  supseteqq = '\\\\u2AC6',\\n  supsetneq = '\\\\u228B',\\n  supsetneqq = '\\\\u2ACC',\\n  supsim = '\\\\u2AC8',\\n  supsub = '\\\\u2AD4',\\n  supsup = '\\\\u2AD6',\\n  swarhk = '\\\\u2926',\\n  swarr = '\\\\u2199',\\n  swArr = '\\\\u21D9',\\n  swarrow = '\\\\u2199',\\n  swnwar = '\\\\u292A',\\n  szlig = '\\\\xDF',\\n  Tab = '\\t',\\n  target = '\\\\u2316',\\n  Tau = '\\\\u03A4',\\n  tau = '\\\\u03C4',\\n  tbrk = '\\\\u23B4',\\n  Tcaron = '\\\\u0164',\\n  tcaron = '\\\\u0165',\\n  Tcedil = '\\\\u0162',\\n  tcedil = '\\\\u0163',\\n  Tcy = '\\\\u0422',\\n  tcy = '\\\\u0442',\\n  tdot = '\\\\u20DB',\\n  telrec = '\\\\u2315',\\n  Tfr = '\\\\u{1D517}',\\n  tfr = '\\\\u{1D531}',\\n  there4 = '\\\\u2234',\\n  therefore = '\\\\u2234',\\n  Therefore = '\\\\u2234',\\n  Theta = '\\\\u0398',\\n  theta = '\\\\u03B8',\\n  thetasym = '\\\\u03D1',\\n  thetav = '\\\\u03D1',\\n  thickapprox = '\\\\u2248',\\n  thicksim = '\\\\u223C',\\n  ThickSpace = '\\\\u205F\\\\u200A',\\n  ThinSpace = '\\\\u2009',\\n  thinsp = '\\\\u2009',\\n  thkap = '\\\\u2248',\\n  thksim = '\\\\u223C',\\n  THORN = '\\\\xDE',\\n  thorn = '\\\\xFE',\\n  tilde = '\\\\u02DC',\\n  Tilde = '\\\\u223C',\\n  TildeEqual = '\\\\u2243',\\n  TildeFullEqual = '\\\\u2245',\\n  TildeTilde = '\\\\u2248',\\n  timesbar = '\\\\u2A31',\\n  timesb = '\\\\u22A0',\\n  times = '\\\\xD7',\\n  timesd = '\\\\u2A30',\\n  tint = '\\\\u222D',\\n  toea = '\\\\u2928',\\n  topbot = '\\\\u2336',\\n  topcir = '\\\\u2AF1',\\n  top = '\\\\u22A4',\\n  Topf = '\\\\u{1D54B}',\\n  topf = '\\\\u{1D565}',\\n  topfork = '\\\\u2ADA',\\n  tosa = '\\\\u2929',\\n  tprime = '\\\\u2034',\\n  trade = '\\\\u2122',\\n  TRADE = '\\\\u2122',\\n  triangle = '\\\\u25B5',\\n  triangledown = '\\\\u25BF',\\n  triangleleft = '\\\\u25C3',\\n  trianglelefteq = '\\\\u22B4',\\n  triangleq = '\\\\u225C',\\n  triangleright = '\\\\u25B9',\\n  trianglerighteq = '\\\\u22B5',\\n  tridot = '\\\\u25EC',\\n  trie = '\\\\u225C',\\n  triminus = '\\\\u2A3A',\\n  TripleDot = '\\\\u20DB',\\n  triplus = '\\\\u2A39',\\n  trisb = '\\\\u29CD',\\n  tritime = '\\\\u2A3B',\\n  trpezium = '\\\\u23E2',\\n  Tscr = '\\\\u{1D4AF}',\\n  tscr = '\\\\u{1D4C9}',\\n  TScy = '\\\\u0426',\\n  tscy = '\\\\u0446',\\n  TSHcy = '\\\\u040B',\\n  tshcy = '\\\\u045B',\\n  Tstrok = '\\\\u0166',\\n  tstrok = '\\\\u0167',\\n  twixt = '\\\\u226C',\\n  twoheadleftarrow = '\\\\u219E',\\n  twoheadrightarrow = '\\\\u21A0',\\n  Uacute = '\\\\xDA',\\n  uacute = '\\\\xFA',\\n  uarr = '\\\\u2191',\\n  Uarr = '\\\\u219F',\\n  uArr = '\\\\u21D1',\\n  Uarrocir = '\\\\u2949',\\n  Ubrcy = '\\\\u040E',\\n  ubrcy = '\\\\u045E',\\n  Ubreve = '\\\\u016C',\\n  ubreve = '\\\\u016D',\\n  Ucirc = '\\\\xDB',\\n  ucirc = '\\\\xFB',\\n  Ucy = '\\\\u0423',\\n  ucy = '\\\\u0443',\\n  udarr = '\\\\u21C5',\\n  Udblac = '\\\\u0170',\\n  udblac = '\\\\u0171',\\n  udhar = '\\\\u296E',\\n  ufisht = '\\\\u297E',\\n  Ufr = '\\\\u{1D518}',\\n  ufr = '\\\\u{1D532}',\\n  Ugrave = '\\\\xD9',\\n  ugrave = '\\\\xF9',\\n  uHar = '\\\\u2963',\\n  uharl = '\\\\u21BF',\\n  uharr = '\\\\u21BE',\\n  uhblk = '\\\\u2580',\\n  ulcorn = '\\\\u231C',\\n  ulcorner = '\\\\u231C',\\n  ulcrop = '\\\\u230F',\\n  ultri = '\\\\u25F8',\\n  Umacr = '\\\\u016A',\\n  umacr = '\\\\u016B',\\n  uml = '\\\\xA8',\\n  UnderBar = '_',\\n  UnderBrace = '\\\\u23DF',\\n  UnderBracket = '\\\\u23B5',\\n  UnderParenthesis = '\\\\u23DD',\\n  Union = '\\\\u22C3',\\n  UnionPlus = '\\\\u228E',\\n  Uogon = '\\\\u0172',\\n  uogon = '\\\\u0173',\\n  Uopf = '\\\\u{1D54C}',\\n  uopf = '\\\\u{1D566}',\\n  UpArrowBar = '\\\\u2912',\\n  uparrow = '\\\\u2191',\\n  UpArrow = '\\\\u2191',\\n  Uparrow = '\\\\u21D1',\\n  UpArrowDownArrow = '\\\\u21C5',\\n  updownarrow = '\\\\u2195',\\n  UpDownArrow = '\\\\u2195',\\n  Updownarrow = '\\\\u21D5',\\n  UpEquilibrium = '\\\\u296E',\\n  upharpoonleft = '\\\\u21BF',\\n  upharpoonright = '\\\\u21BE',\\n  uplus = '\\\\u228E',\\n  UpperLeftArrow = '\\\\u2196',\\n  UpperRightArrow = '\\\\u2197',\\n  upsi = '\\\\u03C5',\\n  Upsi = '\\\\u03D2',\\n  upsih = '\\\\u03D2',\\n  Upsilon = '\\\\u03A5',\\n  upsilon = '\\\\u03C5',\\n  UpTeeArrow = '\\\\u21A5',\\n  UpTee = '\\\\u22A5',\\n  upuparrows = '\\\\u21C8',\\n  urcorn = '\\\\u231D',\\n  urcorner = '\\\\u231D',\\n  urcrop = '\\\\u230E',\\n  Uring = '\\\\u016E',\\n  uring = '\\\\u016F',\\n  urtri = '\\\\u25F9',\\n  Uscr = '\\\\u{1D4B0}',\\n  uscr = '\\\\u{1D4CA}',\\n  utdot = '\\\\u22F0',\\n  Utilde = '\\\\u0168',\\n  utilde = '\\\\u0169',\\n  utri = '\\\\u25B5',\\n  utrif = '\\\\u25B4',\\n  uuarr = '\\\\u21C8',\\n  Uuml = '\\\\xDC',\\n  uuml = '\\\\xFC',\\n  uwangle = '\\\\u29A7',\\n  vangrt = '\\\\u299C',\\n  varepsilon = '\\\\u03F5',\\n  varkappa = '\\\\u03F0',\\n  varnothing = '\\\\u2205',\\n  varphi = '\\\\u03D5',\\n  varpi = '\\\\u03D6',\\n  varpropto = '\\\\u221D',\\n  varr = '\\\\u2195',\\n  vArr = '\\\\u21D5',\\n  varrho = '\\\\u03F1',\\n  varsigma = '\\\\u03C2',\\n  varsubsetneq = '\\\\u228A\\\\uFE00',\\n  varsubsetneqq = '\\\\u2ACB\\\\uFE00',\\n  varsupsetneq = '\\\\u228B\\\\uFE00',\\n  varsupsetneqq = '\\\\u2ACC\\\\uFE00',\\n  vartheta = '\\\\u03D1',\\n  vartriangleleft = '\\\\u22B2',\\n  vartriangleright = '\\\\u22B3',\\n  vBar = '\\\\u2AE8',\\n  Vbar = '\\\\u2AEB',\\n  vBarv = '\\\\u2AE9',\\n  Vcy = '\\\\u0412',\\n  vcy = '\\\\u0432',\\n  vdash = '\\\\u22A2',\\n  vDash = '\\\\u22A8',\\n  Vdash = '\\\\u22A9',\\n  VDash = '\\\\u22AB',\\n  Vdashl = '\\\\u2AE6',\\n  veebar = '\\\\u22BB',\\n  vee = '\\\\u2228',\\n  Vee = '\\\\u22C1',\\n  veeeq = '\\\\u225A',\\n  vellip = '\\\\u22EE',\\n  verbar = '|',\\n  Verbar = '\\\\u2016',\\n  vert = '|',\\n  Vert = '\\\\u2016',\\n  VerticalBar = '\\\\u2223',\\n  VerticalLine = '|',\\n  VerticalSeparator = '\\\\u2758',\\n  VerticalTilde = '\\\\u2240',\\n  VeryThinSpace = '\\\\u200A',\\n  Vfr = '\\\\u{1D519}',\\n  vfr = '\\\\u{1D533}',\\n  vltri = '\\\\u22B2',\\n  vnsub = '\\\\u2282\\\\u20D2',\\n  vnsup = '\\\\u2283\\\\u20D2',\\n  Vopf = '\\\\u{1D54D}',\\n  vopf = '\\\\u{1D567}',\\n  vprop = '\\\\u221D',\\n  vrtri = '\\\\u22B3',\\n  Vscr = '\\\\u{1D4B1}',\\n  vscr = '\\\\u{1D4CB}',\\n  vsubnE = '\\\\u2ACB\\\\uFE00',\\n  vsubne = '\\\\u228A\\\\uFE00',\\n  vsupnE = '\\\\u2ACC\\\\uFE00',\\n  vsupne = '\\\\u228B\\\\uFE00',\\n  Vvdash = '\\\\u22AA',\\n  vzigzag = '\\\\u299A',\\n  Wcirc = '\\\\u0174',\\n  wcirc = '\\\\u0175',\\n  wedbar = '\\\\u2A5F',\\n  wedge = '\\\\u2227',\\n  Wedge = '\\\\u22C0',\\n  wedgeq = '\\\\u2259',\\n  weierp = '\\\\u2118',\\n  Wfr = '\\\\u{1D51A}',\\n  wfr = '\\\\u{1D534}',\\n  Wopf = '\\\\u{1D54E}',\\n  wopf = '\\\\u{1D568}',\\n  wp = '\\\\u2118',\\n  wr = '\\\\u2240',\\n  wreath = '\\\\u2240',\\n  Wscr = '\\\\u{1D4B2}',\\n  wscr = '\\\\u{1D4CC}',\\n  xcap = '\\\\u22C2',\\n  xcirc = '\\\\u25EF',\\n  xcup = '\\\\u22C3',\\n  xdtri = '\\\\u25BD',\\n  Xfr = '\\\\u{1D51B}',\\n  xfr = '\\\\u{1D535}',\\n  xharr = '\\\\u27F7',\\n  xhArr = '\\\\u27FA',\\n  Xi = '\\\\u039E',\\n  xi = '\\\\u03BE',\\n  xlarr = '\\\\u27F5',\\n  xlArr = '\\\\u27F8',\\n  xmap = '\\\\u27FC',\\n  xnis = '\\\\u22FB',\\n  xodot = '\\\\u2A00',\\n  Xopf = '\\\\u{1D54F}',\\n  xopf = '\\\\u{1D569}',\\n  xoplus = '\\\\u2A01',\\n  xotime = '\\\\u2A02',\\n  xrarr = '\\\\u27F6',\\n  xrArr = '\\\\u27F9',\\n  Xscr = '\\\\u{1D4B3}',\\n  xscr = '\\\\u{1D4CD}',\\n  xsqcup = '\\\\u2A06',\\n  xuplus = '\\\\u2A04',\\n  xutri = '\\\\u25B3',\\n  xvee = '\\\\u22C1',\\n  xwedge = '\\\\u22C0',\\n  Yacute = '\\\\xDD',\\n  yacute = '\\\\xFD',\\n  YAcy = '\\\\u042F',\\n  yacy = '\\\\u044F',\\n  Ycirc = '\\\\u0176',\\n  ycirc = '\\\\u0177',\\n  Ycy = '\\\\u042B',\\n  ycy = '\\\\u044B',\\n  yen = '\\\\xA5',\\n  Yfr = '\\\\u{1D51C}',\\n  yfr = '\\\\u{1D536}',\\n  YIcy = '\\\\u0407',\\n  yicy = '\\\\u0457',\\n  Yopf = '\\\\u{1D550}',\\n  yopf = '\\\\u{1D56A}',\\n  Yscr = '\\\\u{1D4B4}',\\n  yscr = '\\\\u{1D4CE}',\\n  YUcy = '\\\\u042E',\\n  yucy = '\\\\u044E',\\n  yuml = '\\\\xFF',\\n  Yuml = '\\\\u0178',\\n  Zacute = '\\\\u0179',\\n  zacute = '\\\\u017A',\\n  Zcaron = '\\\\u017D',\\n  zcaron = '\\\\u017E',\\n  Zcy = '\\\\u0417',\\n  zcy = '\\\\u0437',\\n  Zdot = '\\\\u017B',\\n  zdot = '\\\\u017C',\\n  zeetrf = '\\\\u2128',\\n  ZeroWidthSpace = '\\\\u200B',\\n  Zeta = '\\\\u0396',\\n  zeta = '\\\\u03B6',\\n  zfr = '\\\\u{1D537}',\\n  Zfr = '\\\\u2128',\\n  ZHcy = '\\\\u0416',\\n  zhcy = '\\\\u0436',\\n  zigrarr = '\\\\u21DD',\\n  zopf = '\\\\u{1D56B}',\\n  Zopf = '\\\\u2124',\\n  Zscr = '\\\\u{1D4B5}',\\n  zscr = '\\\\u{1D4CF}',\\n  zwj = '\\\\u200D',\\n  zwnj = '\\\\u200C',\\n  entities$1 = {\\n    Aacute,\\n    aacute,\\n    Abreve,\\n    abreve,\\n    ac,\\n    acd,\\n    acE,\\n    Acirc,\\n    acirc,\\n    acute,\\n    Acy,\\n    acy,\\n    AElig,\\n    aelig,\\n    af,\\n    Afr,\\n    afr,\\n    Agrave,\\n    agrave,\\n    alefsym,\\n    aleph,\\n    Alpha,\\n    alpha,\\n    Amacr,\\n    amacr,\\n    amalg,\\n    amp,\\n    AMP,\\n    andand,\\n    And,\\n    and,\\n    andd,\\n    andslope,\\n    andv,\\n    ang,\\n    ange,\\n    angle,\\n    angmsdaa,\\n    angmsdab,\\n    angmsdac,\\n    angmsdad,\\n    angmsdae,\\n    angmsdaf,\\n    angmsdag,\\n    angmsdah,\\n    angmsd,\\n    angrt,\\n    angrtvb,\\n    angrtvbd,\\n    angsph,\\n    angst,\\n    angzarr,\\n    Aogon,\\n    aogon,\\n    Aopf,\\n    aopf,\\n    apacir,\\n    ap,\\n    apE,\\n    ape,\\n    apid,\\n    apos,\\n    ApplyFunction,\\n    approx,\\n    approxeq,\\n    Aring,\\n    aring,\\n    Ascr,\\n    ascr,\\n    Assign,\\n    ast,\\n    asymp,\\n    asympeq,\\n    Atilde,\\n    atilde,\\n    Auml,\\n    auml,\\n    awconint,\\n    awint,\\n    backcong,\\n    backepsilon,\\n    backprime,\\n    backsim,\\n    backsimeq,\\n    Backslash,\\n    Barv,\\n    barvee,\\n    barwed,\\n    Barwed,\\n    barwedge,\\n    bbrk,\\n    bbrktbrk,\\n    bcong,\\n    Bcy,\\n    bcy,\\n    bdquo,\\n    becaus,\\n    because,\\n    Because,\\n    bemptyv,\\n    bepsi,\\n    bernou,\\n    Bernoullis,\\n    Beta,\\n    beta,\\n    beth,\\n    between,\\n    Bfr,\\n    bfr,\\n    bigcap,\\n    bigcirc,\\n    bigcup,\\n    bigodot,\\n    bigoplus,\\n    bigotimes,\\n    bigsqcup,\\n    bigstar,\\n    bigtriangledown,\\n    bigtriangleup,\\n    biguplus,\\n    bigvee,\\n    bigwedge,\\n    bkarow,\\n    blacklozenge,\\n    blacksquare,\\n    blacktriangle,\\n    blacktriangledown,\\n    blacktriangleleft,\\n    blacktriangleright,\\n    blank,\\n    blk12,\\n    blk14,\\n    blk34,\\n    block,\\n    bne,\\n    bnequiv,\\n    bNot,\\n    bnot,\\n    Bopf,\\n    bopf,\\n    bot,\\n    bottom,\\n    bowtie,\\n    boxbox,\\n    boxdl,\\n    boxdL,\\n    boxDl,\\n    boxDL,\\n    boxdr,\\n    boxdR,\\n    boxDr,\\n    boxDR,\\n    boxh,\\n    boxH,\\n    boxhd,\\n    boxHd,\\n    boxhD,\\n    boxHD,\\n    boxhu,\\n    boxHu,\\n    boxhU,\\n    boxHU,\\n    boxminus,\\n    boxplus,\\n    boxtimes,\\n    boxul,\\n    boxuL,\\n    boxUl,\\n    boxUL,\\n    boxur,\\n    boxuR,\\n    boxUr,\\n    boxUR,\\n    boxv,\\n    boxV,\\n    boxvh,\\n    boxvH,\\n    boxVh,\\n    boxVH,\\n    boxvl,\\n    boxvL,\\n    boxVl,\\n    boxVL,\\n    boxvr,\\n    boxvR,\\n    boxVr,\\n    boxVR,\\n    bprime,\\n    breve,\\n    Breve,\\n    brvbar,\\n    bscr,\\n    Bscr,\\n    bsemi,\\n    bsim,\\n    bsime,\\n    bsolb,\\n    bsol,\\n    bsolhsub,\\n    bull,\\n    bullet,\\n    bump,\\n    bumpE,\\n    bumpe,\\n    Bumpeq,\\n    bumpeq,\\n    Cacute,\\n    cacute,\\n    capand,\\n    capbrcup,\\n    capcap,\\n    cap,\\n    Cap,\\n    capcup,\\n    capdot,\\n    CapitalDifferentialD,\\n    caps,\\n    caret,\\n    caron,\\n    Cayleys,\\n    ccaps,\\n    Ccaron,\\n    ccaron,\\n    Ccedil,\\n    ccedil,\\n    Ccirc,\\n    ccirc,\\n    Cconint,\\n    ccups,\\n    ccupssm,\\n    Cdot,\\n    cdot,\\n    cedil,\\n    Cedilla,\\n    cemptyv,\\n    cent,\\n    centerdot,\\n    CenterDot,\\n    cfr,\\n    Cfr,\\n    CHcy,\\n    chcy,\\n    check,\\n    checkmark,\\n    Chi,\\n    chi,\\n    circ,\\n    circeq,\\n    circlearrowleft,\\n    circlearrowright,\\n    circledast,\\n    circledcirc,\\n    circleddash,\\n    CircleDot,\\n    circledR,\\n    circledS,\\n    CircleMinus,\\n    CirclePlus,\\n    CircleTimes,\\n    cir,\\n    cirE,\\n    cire,\\n    cirfnint,\\n    cirmid,\\n    cirscir,\\n    ClockwiseContourIntegral,\\n    CloseCurlyDoubleQuote,\\n    CloseCurlyQuote,\\n    clubs,\\n    clubsuit,\\n    colon,\\n    Colon,\\n    Colone,\\n    colone,\\n    coloneq,\\n    comma,\\n    commat,\\n    comp,\\n    compfn,\\n    complement,\\n    complexes,\\n    cong,\\n    congdot,\\n    Congruent,\\n    conint,\\n    Conint,\\n    ContourIntegral,\\n    copf,\\n    Copf,\\n    coprod,\\n    Coproduct,\\n    copy,\\n    COPY,\\n    copysr,\\n    CounterClockwiseContourIntegral,\\n    crarr,\\n    cross,\\n    Cross,\\n    Cscr,\\n    cscr,\\n    csub,\\n    csube,\\n    csup,\\n    csupe,\\n    ctdot,\\n    cudarrl,\\n    cudarrr,\\n    cuepr,\\n    cuesc,\\n    cularr,\\n    cularrp,\\n    cupbrcap,\\n    cupcap,\\n    CupCap,\\n    cup,\\n    Cup,\\n    cupcup,\\n    cupdot,\\n    cupor,\\n    cups,\\n    curarr,\\n    curarrm,\\n    curlyeqprec,\\n    curlyeqsucc,\\n    curlyvee,\\n    curlywedge,\\n    curren,\\n    curvearrowleft,\\n    curvearrowright,\\n    cuvee,\\n    cuwed,\\n    cwconint,\\n    cwint,\\n    cylcty,\\n    dagger,\\n    Dagger,\\n    daleth,\\n    darr,\\n    Darr,\\n    dArr,\\n    dash,\\n    Dashv,\\n    dashv,\\n    dbkarow,\\n    dblac,\\n    Dcaron,\\n    dcaron,\\n    Dcy,\\n    dcy,\\n    ddagger,\\n    ddarr,\\n    DD,\\n    dd,\\n    DDotrahd,\\n    ddotseq,\\n    deg,\\n    Del,\\n    Delta,\\n    delta,\\n    demptyv,\\n    dfisht,\\n    Dfr,\\n    dfr,\\n    dHar,\\n    dharl,\\n    dharr,\\n    DiacriticalAcute,\\n    DiacriticalDot,\\n    DiacriticalDoubleAcute,\\n    DiacriticalGrave,\\n    DiacriticalTilde,\\n    diam,\\n    diamond,\\n    Diamond,\\n    diamondsuit,\\n    diams,\\n    die,\\n    DifferentialD,\\n    digamma,\\n    disin,\\n    div,\\n    divide,\\n    divideontimes,\\n    divonx,\\n    DJcy,\\n    djcy,\\n    dlcorn,\\n    dlcrop,\\n    dollar,\\n    Dopf,\\n    dopf,\\n    Dot,\\n    dot,\\n    DotDot,\\n    doteq,\\n    doteqdot,\\n    DotEqual,\\n    dotminus,\\n    dotplus,\\n    dotsquare,\\n    doublebarwedge,\\n    DoubleContourIntegral,\\n    DoubleDot,\\n    DoubleDownArrow,\\n    DoubleLeftArrow,\\n    DoubleLeftRightArrow,\\n    DoubleLeftTee,\\n    DoubleLongLeftArrow,\\n    DoubleLongLeftRightArrow,\\n    DoubleLongRightArrow,\\n    DoubleRightArrow,\\n    DoubleRightTee,\\n    DoubleUpArrow,\\n    DoubleUpDownArrow,\\n    DoubleVerticalBar,\\n    DownArrowBar,\\n    downarrow,\\n    DownArrow,\\n    Downarrow,\\n    DownArrowUpArrow,\\n    DownBreve,\\n    downdownarrows,\\n    downharpoonleft,\\n    downharpoonright,\\n    DownLeftRightVector,\\n    DownLeftTeeVector,\\n    DownLeftVectorBar,\\n    DownLeftVector,\\n    DownRightTeeVector,\\n    DownRightVectorBar,\\n    DownRightVector,\\n    DownTeeArrow,\\n    DownTee,\\n    drbkarow,\\n    drcorn,\\n    drcrop,\\n    Dscr,\\n    dscr,\\n    DScy,\\n    dscy,\\n    dsol,\\n    Dstrok,\\n    dstrok,\\n    dtdot,\\n    dtri,\\n    dtrif,\\n    duarr,\\n    duhar,\\n    dwangle,\\n    DZcy,\\n    dzcy,\\n    dzigrarr,\\n    Eacute,\\n    eacute,\\n    easter,\\n    Ecaron,\\n    ecaron,\\n    Ecirc,\\n    ecirc,\\n    ecir,\\n    ecolon,\\n    Ecy,\\n    ecy,\\n    eDDot,\\n    Edot,\\n    edot,\\n    eDot,\\n    ee,\\n    efDot,\\n    Efr,\\n    efr,\\n    eg,\\n    Egrave,\\n    egrave,\\n    egs,\\n    egsdot,\\n    el,\\n    Element,\\n    elinters,\\n    ell,\\n    els,\\n    elsdot,\\n    Emacr,\\n    emacr,\\n    empty,\\n    emptyset,\\n    EmptySmallSquare,\\n    emptyv,\\n    EmptyVerySmallSquare,\\n    emsp13,\\n    emsp14,\\n    emsp,\\n    ENG,\\n    eng,\\n    ensp,\\n    Eogon,\\n    eogon,\\n    Eopf,\\n    eopf,\\n    epar,\\n    eparsl,\\n    eplus,\\n    epsi,\\n    Epsilon,\\n    epsilon,\\n    epsiv,\\n    eqcirc,\\n    eqcolon,\\n    eqsim,\\n    eqslantgtr,\\n    eqslantless,\\n    Equal,\\n    equals,\\n    EqualTilde,\\n    equest,\\n    Equilibrium,\\n    equiv,\\n    equivDD,\\n    eqvparsl,\\n    erarr,\\n    erDot,\\n    escr,\\n    Escr,\\n    esdot,\\n    Esim,\\n    esim,\\n    Eta,\\n    eta,\\n    ETH,\\n    eth,\\n    Euml,\\n    euml,\\n    euro,\\n    excl,\\n    exist,\\n    Exists,\\n    expectation,\\n    exponentiale,\\n    ExponentialE,\\n    fallingdotseq,\\n    Fcy,\\n    fcy,\\n    female,\\n    ffilig,\\n    fflig,\\n    ffllig,\\n    Ffr,\\n    ffr,\\n    filig,\\n    FilledSmallSquare,\\n    FilledVerySmallSquare,\\n    fjlig,\\n    flat,\\n    fllig,\\n    fltns,\\n    fnof,\\n    Fopf,\\n    fopf,\\n    forall,\\n    ForAll,\\n    fork,\\n    forkv,\\n    Fouriertrf,\\n    fpartint,\\n    frac12,\\n    frac13,\\n    frac14,\\n    frac15,\\n    frac16,\\n    frac18,\\n    frac23,\\n    frac25,\\n    frac34,\\n    frac35,\\n    frac38,\\n    frac45,\\n    frac56,\\n    frac58,\\n    frac78,\\n    frasl,\\n    frown,\\n    fscr,\\n    Fscr,\\n    gacute,\\n    Gamma,\\n    gamma,\\n    Gammad,\\n    gammad,\\n    gap,\\n    Gbreve,\\n    gbreve,\\n    Gcedil,\\n    Gcirc,\\n    gcirc,\\n    Gcy,\\n    gcy,\\n    Gdot,\\n    gdot,\\n    ge,\\n    gE,\\n    gEl,\\n    gel,\\n    geq,\\n    geqq,\\n    geqslant,\\n    gescc,\\n    ges,\\n    gesdot,\\n    gesdoto,\\n    gesdotol,\\n    gesl,\\n    gesles,\\n    Gfr,\\n    gfr,\\n    gg,\\n    Gg,\\n    ggg,\\n    gimel,\\n    GJcy,\\n    gjcy,\\n    gla,\\n    gl,\\n    glE,\\n    glj,\\n    gnap,\\n    gnapprox,\\n    gne,\\n    gnE,\\n    gneq,\\n    gneqq,\\n    gnsim,\\n    Gopf,\\n    gopf,\\n    grave,\\n    GreaterEqual,\\n    GreaterEqualLess,\\n    GreaterFullEqual,\\n    GreaterGreater,\\n    GreaterLess,\\n    GreaterSlantEqual,\\n    GreaterTilde,\\n    Gscr,\\n    gscr,\\n    gsim,\\n    gsime,\\n    gsiml,\\n    gtcc,\\n    gtcir,\\n    gt,\\n    GT,\\n    Gt,\\n    gtdot,\\n    gtlPar,\\n    gtquest,\\n    gtrapprox,\\n    gtrarr,\\n    gtrdot,\\n    gtreqless,\\n    gtreqqless,\\n    gtrless,\\n    gtrsim,\\n    gvertneqq,\\n    gvnE,\\n    Hacek,\\n    hairsp,\\n    half,\\n    hamilt,\\n    HARDcy,\\n    hardcy,\\n    harrcir,\\n    harr,\\n    hArr,\\n    harrw,\\n    Hat,\\n    hbar,\\n    Hcirc,\\n    hcirc,\\n    hearts,\\n    heartsuit,\\n    hellip,\\n    hercon,\\n    hfr,\\n    Hfr,\\n    HilbertSpace,\\n    hksearow,\\n    hkswarow,\\n    hoarr,\\n    homtht,\\n    hookleftarrow,\\n    hookrightarrow,\\n    hopf,\\n    Hopf,\\n    horbar,\\n    HorizontalLine,\\n    hscr,\\n    Hscr,\\n    hslash,\\n    Hstrok,\\n    hstrok,\\n    HumpDownHump,\\n    HumpEqual,\\n    hybull,\\n    hyphen,\\n    Iacute,\\n    iacute,\\n    ic,\\n    Icirc,\\n    icirc,\\n    Icy,\\n    icy,\\n    Idot,\\n    IEcy,\\n    iecy,\\n    iexcl,\\n    iff,\\n    ifr,\\n    Ifr,\\n    Igrave,\\n    igrave,\\n    ii,\\n    iiiint,\\n    iiint,\\n    iinfin,\\n    iiota,\\n    IJlig,\\n    ijlig,\\n    Imacr,\\n    imacr,\\n    image,\\n    ImaginaryI,\\n    imagline,\\n    imagpart,\\n    imath,\\n    Im,\\n    imof,\\n    imped,\\n    Implies,\\n    incare,\\n    in: '\\\\u2208',\\n    infin,\\n    infintie,\\n    inodot,\\n    intcal,\\n    int,\\n    Int,\\n    integers,\\n    Integral,\\n    intercal,\\n    Intersection,\\n    intlarhk,\\n    intprod,\\n    InvisibleComma,\\n    InvisibleTimes,\\n    IOcy,\\n    iocy,\\n    Iogon,\\n    iogon,\\n    Iopf,\\n    iopf,\\n    Iota,\\n    iota,\\n    iprod,\\n    iquest,\\n    iscr,\\n    Iscr,\\n    isin,\\n    isindot,\\n    isinE,\\n    isins,\\n    isinsv,\\n    isinv,\\n    it,\\n    Itilde,\\n    itilde,\\n    Iukcy,\\n    iukcy,\\n    Iuml,\\n    iuml,\\n    Jcirc,\\n    jcirc,\\n    Jcy,\\n    jcy,\\n    Jfr,\\n    jfr,\\n    jmath,\\n    Jopf,\\n    jopf,\\n    Jscr,\\n    jscr,\\n    Jsercy,\\n    jsercy,\\n    Jukcy,\\n    jukcy,\\n    Kappa,\\n    kappa,\\n    kappav,\\n    Kcedil,\\n    kcedil,\\n    Kcy,\\n    kcy,\\n    Kfr,\\n    kfr,\\n    kgreen,\\n    KHcy,\\n    khcy,\\n    KJcy,\\n    kjcy,\\n    Kopf,\\n    kopf,\\n    Kscr,\\n    kscr,\\n    lAarr,\\n    Lacute,\\n    lacute,\\n    laemptyv,\\n    lagran,\\n    Lambda,\\n    lambda,\\n    lang,\\n    Lang,\\n    langd,\\n    langle,\\n    lap,\\n    Laplacetrf,\\n    laquo,\\n    larrb,\\n    larrbfs,\\n    larr,\\n    Larr,\\n    lArr,\\n    larrfs,\\n    larrhk,\\n    larrlp,\\n    larrpl,\\n    larrsim,\\n    larrtl,\\n    latail,\\n    lAtail,\\n    lat,\\n    late,\\n    lates,\\n    lbarr,\\n    lBarr,\\n    lbbrk,\\n    lbrace,\\n    lbrack,\\n    lbrke,\\n    lbrksld,\\n    lbrkslu,\\n    Lcaron,\\n    lcaron,\\n    Lcedil,\\n    lcedil,\\n    lceil,\\n    lcub,\\n    Lcy,\\n    lcy,\\n    ldca,\\n    ldquo,\\n    ldquor,\\n    ldrdhar,\\n    ldrushar,\\n    ldsh,\\n    le,\\n    lE,\\n    LeftAngleBracket,\\n    LeftArrowBar,\\n    leftarrow,\\n    LeftArrow,\\n    Leftarrow,\\n    LeftArrowRightArrow,\\n    leftarrowtail,\\n    LeftCeiling,\\n    LeftDoubleBracket,\\n    LeftDownTeeVector,\\n    LeftDownVectorBar,\\n    LeftDownVector,\\n    LeftFloor,\\n    leftharpoondown,\\n    leftharpoonup,\\n    leftleftarrows,\\n    leftrightarrow,\\n    LeftRightArrow,\\n    Leftrightarrow,\\n    leftrightarrows,\\n    leftrightharpoons,\\n    leftrightsquigarrow,\\n    LeftRightVector,\\n    LeftTeeArrow,\\n    LeftTee,\\n    LeftTeeVector,\\n    leftthreetimes,\\n    LeftTriangleBar,\\n    LeftTriangle,\\n    LeftTriangleEqual,\\n    LeftUpDownVector,\\n    LeftUpTeeVector,\\n    LeftUpVectorBar,\\n    LeftUpVector,\\n    LeftVectorBar,\\n    LeftVector,\\n    lEg,\\n    leg,\\n    leq,\\n    leqq,\\n    leqslant,\\n    lescc,\\n    les,\\n    lesdot,\\n    lesdoto,\\n    lesdotor,\\n    lesg,\\n    lesges,\\n    lessapprox,\\n    lessdot,\\n    lesseqgtr,\\n    lesseqqgtr,\\n    LessEqualGreater,\\n    LessFullEqual,\\n    LessGreater,\\n    lessgtr,\\n    LessLess,\\n    lesssim,\\n    LessSlantEqual,\\n    LessTilde,\\n    lfisht,\\n    lfloor,\\n    Lfr,\\n    lfr,\\n    lg,\\n    lgE,\\n    lHar,\\n    lhard,\\n    lharu,\\n    lharul,\\n    lhblk,\\n    LJcy,\\n    ljcy,\\n    llarr,\\n    ll,\\n    Ll,\\n    llcorner,\\n    Lleftarrow,\\n    llhard,\\n    lltri,\\n    Lmidot,\\n    lmidot,\\n    lmoustache,\\n    lmoust,\\n    lnap,\\n    lnapprox,\\n    lne,\\n    lnE,\\n    lneq,\\n    lneqq,\\n    lnsim,\\n    loang,\\n    loarr,\\n    lobrk,\\n    longleftarrow,\\n    LongLeftArrow,\\n    Longleftarrow,\\n    longleftrightarrow,\\n    LongLeftRightArrow,\\n    Longleftrightarrow,\\n    longmapsto,\\n    longrightarrow,\\n    LongRightArrow,\\n    Longrightarrow,\\n    looparrowleft,\\n    looparrowright,\\n    lopar,\\n    Lopf,\\n    lopf,\\n    loplus,\\n    lotimes,\\n    lowast,\\n    lowbar,\\n    LowerLeftArrow,\\n    LowerRightArrow,\\n    loz,\\n    lozenge,\\n    lozf,\\n    lpar,\\n    lparlt,\\n    lrarr,\\n    lrcorner,\\n    lrhar,\\n    lrhard,\\n    lrm,\\n    lrtri,\\n    lsaquo,\\n    lscr,\\n    Lscr,\\n    lsh,\\n    Lsh,\\n    lsim,\\n    lsime,\\n    lsimg,\\n    lsqb,\\n    lsquo,\\n    lsquor,\\n    Lstrok,\\n    lstrok,\\n    ltcc,\\n    ltcir,\\n    lt,\\n    LT,\\n    Lt,\\n    ltdot,\\n    lthree,\\n    ltimes,\\n    ltlarr,\\n    ltquest,\\n    ltri,\\n    ltrie,\\n    ltrif,\\n    ltrPar,\\n    lurdshar,\\n    luruhar,\\n    lvertneqq,\\n    lvnE,\\n    macr,\\n    male,\\n    malt,\\n    maltese,\\n    Map: '\\\\u2905',\\n    map,\\n    mapsto,\\n    mapstodown,\\n    mapstoleft,\\n    mapstoup,\\n    marker,\\n    mcomma,\\n    Mcy,\\n    mcy,\\n    mdash,\\n    mDDot,\\n    measuredangle,\\n    MediumSpace,\\n    Mellintrf,\\n    Mfr,\\n    mfr,\\n    mho,\\n    micro,\\n    midast,\\n    midcir,\\n    mid,\\n    middot,\\n    minusb,\\n    minus,\\n    minusd,\\n    minusdu,\\n    MinusPlus,\\n    mlcp,\\n    mldr,\\n    mnplus,\\n    models,\\n    Mopf,\\n    mopf,\\n    mp,\\n    mscr,\\n    Mscr,\\n    mstpos,\\n    Mu,\\n    mu,\\n    multimap,\\n    mumap,\\n    nabla,\\n    Nacute,\\n    nacute,\\n    nang,\\n    nap,\\n    napE,\\n    napid,\\n    napos,\\n    napprox,\\n    natural,\\n    naturals,\\n    natur,\\n    nbsp,\\n    nbump,\\n    nbumpe,\\n    ncap,\\n    Ncaron,\\n    ncaron,\\n    Ncedil,\\n    ncedil,\\n    ncong,\\n    ncongdot,\\n    ncup,\\n    Ncy,\\n    ncy,\\n    ndash,\\n    nearhk,\\n    nearr,\\n    neArr,\\n    nearrow,\\n    ne,\\n    nedot,\\n    NegativeMediumSpace,\\n    NegativeThickSpace,\\n    NegativeThinSpace,\\n    NegativeVeryThinSpace,\\n    nequiv,\\n    nesear,\\n    nesim,\\n    NestedGreaterGreater,\\n    NestedLessLess,\\n    NewLine,\\n    nexist,\\n    nexists,\\n    Nfr,\\n    nfr,\\n    ngE,\\n    nge,\\n    ngeq,\\n    ngeqq,\\n    ngeqslant,\\n    nges,\\n    nGg,\\n    ngsim,\\n    nGt,\\n    ngt,\\n    ngtr,\\n    nGtv,\\n    nharr,\\n    nhArr,\\n    nhpar,\\n    ni,\\n    nis,\\n    nisd,\\n    niv,\\n    NJcy,\\n    njcy,\\n    nlarr,\\n    nlArr,\\n    nldr,\\n    nlE,\\n    nle,\\n    nleftarrow,\\n    nLeftarrow,\\n    nleftrightarrow,\\n    nLeftrightarrow,\\n    nleq,\\n    nleqq,\\n    nleqslant,\\n    nles,\\n    nless,\\n    nLl,\\n    nlsim,\\n    nLt,\\n    nlt,\\n    nltri,\\n    nltrie,\\n    nLtv,\\n    nmid,\\n    NoBreak,\\n    NonBreakingSpace,\\n    nopf,\\n    Nopf,\\n    Not,\\n    not,\\n    NotCongruent,\\n    NotCupCap,\\n    NotDoubleVerticalBar,\\n    NotElement,\\n    NotEqual,\\n    NotEqualTilde,\\n    NotExists,\\n    NotGreater,\\n    NotGreaterEqual,\\n    NotGreaterFullEqual,\\n    NotGreaterGreater,\\n    NotGreaterLess,\\n    NotGreaterSlantEqual,\\n    NotGreaterTilde,\\n    NotHumpDownHump,\\n    NotHumpEqual,\\n    notin,\\n    notindot,\\n    notinE,\\n    notinva,\\n    notinvb,\\n    notinvc,\\n    NotLeftTriangleBar,\\n    NotLeftTriangle,\\n    NotLeftTriangleEqual,\\n    NotLess,\\n    NotLessEqual,\\n    NotLessGreater,\\n    NotLessLess,\\n    NotLessSlantEqual,\\n    NotLessTilde,\\n    NotNestedGreaterGreater,\\n    NotNestedLessLess,\\n    notni,\\n    notniva,\\n    notnivb,\\n    notnivc,\\n    NotPrecedes,\\n    NotPrecedesEqual,\\n    NotPrecedesSlantEqual,\\n    NotReverseElement,\\n    NotRightTriangleBar,\\n    NotRightTriangle,\\n    NotRightTriangleEqual,\\n    NotSquareSubset,\\n    NotSquareSubsetEqual,\\n    NotSquareSuperset,\\n    NotSquareSupersetEqual,\\n    NotSubset,\\n    NotSubsetEqual,\\n    NotSucceeds,\\n    NotSucceedsEqual,\\n    NotSucceedsSlantEqual,\\n    NotSucceedsTilde,\\n    NotSuperset,\\n    NotSupersetEqual,\\n    NotTilde,\\n    NotTildeEqual,\\n    NotTildeFullEqual,\\n    NotTildeTilde,\\n    NotVerticalBar,\\n    nparallel,\\n    npar,\\n    nparsl,\\n    npart,\\n    npolint,\\n    npr,\\n    nprcue,\\n    nprec,\\n    npreceq,\\n    npre,\\n    nrarrc,\\n    nrarr,\\n    nrArr,\\n    nrarrw,\\n    nrightarrow,\\n    nRightarrow,\\n    nrtri,\\n    nrtrie,\\n    nsc,\\n    nsccue,\\n    nsce,\\n    Nscr,\\n    nscr,\\n    nshortmid,\\n    nshortparallel,\\n    nsim,\\n    nsime,\\n    nsimeq,\\n    nsmid,\\n    nspar,\\n    nsqsube,\\n    nsqsupe,\\n    nsub,\\n    nsubE,\\n    nsube,\\n    nsubset,\\n    nsubseteq,\\n    nsubseteqq,\\n    nsucc,\\n    nsucceq,\\n    nsup,\\n    nsupE,\\n    nsupe,\\n    nsupset,\\n    nsupseteq,\\n    nsupseteqq,\\n    ntgl,\\n    Ntilde,\\n    ntilde,\\n    ntlg,\\n    ntriangleleft,\\n    ntrianglelefteq,\\n    ntriangleright,\\n    ntrianglerighteq,\\n    Nu,\\n    nu,\\n    num,\\n    numero,\\n    numsp,\\n    nvap,\\n    nvdash,\\n    nvDash,\\n    nVdash,\\n    nVDash,\\n    nvge,\\n    nvgt,\\n    nvHarr,\\n    nvinfin,\\n    nvlArr,\\n    nvle,\\n    nvlt,\\n    nvltrie,\\n    nvrArr,\\n    nvrtrie,\\n    nvsim,\\n    nwarhk,\\n    nwarr,\\n    nwArr,\\n    nwarrow,\\n    nwnear,\\n    Oacute,\\n    oacute,\\n    oast,\\n    Ocirc,\\n    ocirc,\\n    ocir,\\n    Ocy,\\n    ocy,\\n    odash,\\n    Odblac,\\n    odblac,\\n    odiv,\\n    odot,\\n    odsold,\\n    OElig,\\n    oelig,\\n    ofcir,\\n    Ofr,\\n    ofr,\\n    ogon,\\n    Ograve,\\n    ograve,\\n    ogt,\\n    ohbar,\\n    ohm,\\n    oint,\\n    olarr,\\n    olcir,\\n    olcross,\\n    oline,\\n    olt,\\n    Omacr,\\n    omacr,\\n    Omega,\\n    omega,\\n    Omicron,\\n    omicron,\\n    omid,\\n    ominus,\\n    Oopf,\\n    oopf,\\n    opar,\\n    OpenCurlyDoubleQuote,\\n    OpenCurlyQuote,\\n    operp,\\n    oplus,\\n    orarr,\\n    Or,\\n    or,\\n    ord,\\n    order,\\n    orderof,\\n    ordf,\\n    ordm,\\n    origof,\\n    oror,\\n    orslope,\\n    orv,\\n    oS,\\n    Oscr,\\n    oscr,\\n    Oslash,\\n    oslash,\\n    osol,\\n    Otilde,\\n    otilde,\\n    otimesas,\\n    Otimes,\\n    otimes,\\n    Ouml,\\n    ouml,\\n    ovbar,\\n    OverBar,\\n    OverBrace,\\n    OverBracket,\\n    OverParenthesis,\\n    para,\\n    parallel,\\n    par,\\n    parsim,\\n    parsl,\\n    part,\\n    PartialD,\\n    Pcy,\\n    pcy,\\n    percnt,\\n    period,\\n    permil,\\n    perp,\\n    pertenk,\\n    Pfr,\\n    pfr,\\n    Phi,\\n    phi,\\n    phiv,\\n    phmmat,\\n    phone,\\n    Pi,\\n    pi,\\n    pitchfork,\\n    piv,\\n    planck,\\n    planckh,\\n    plankv,\\n    plusacir,\\n    plusb,\\n    pluscir,\\n    plus,\\n    plusdo,\\n    plusdu,\\n    pluse,\\n    PlusMinus,\\n    plusmn,\\n    plussim,\\n    plustwo,\\n    pm,\\n    Poincareplane,\\n    pointint,\\n    popf,\\n    Popf,\\n    pound,\\n    prap,\\n    Pr,\\n    pr,\\n    prcue,\\n    precapprox,\\n    prec,\\n    preccurlyeq,\\n    Precedes,\\n    PrecedesEqual,\\n    PrecedesSlantEqual,\\n    PrecedesTilde,\\n    preceq,\\n    precnapprox,\\n    precneqq,\\n    precnsim,\\n    pre,\\n    prE,\\n    precsim,\\n    prime,\\n    Prime,\\n    primes,\\n    prnap,\\n    prnE,\\n    prnsim,\\n    prod,\\n    Product,\\n    profalar,\\n    profline,\\n    profsurf,\\n    prop,\\n    Proportional,\\n    Proportion,\\n    propto,\\n    prsim,\\n    prurel,\\n    Pscr,\\n    pscr,\\n    Psi,\\n    psi,\\n    puncsp,\\n    Qfr,\\n    qfr,\\n    qint,\\n    qopf,\\n    Qopf,\\n    qprime,\\n    Qscr,\\n    qscr,\\n    quaternions,\\n    quatint,\\n    quest,\\n    questeq,\\n    quot,\\n    QUOT,\\n    rAarr,\\n    race,\\n    Racute,\\n    racute,\\n    radic,\\n    raemptyv,\\n    rang,\\n    Rang,\\n    rangd,\\n    range,\\n    rangle,\\n    raquo,\\n    rarrap,\\n    rarrb,\\n    rarrbfs,\\n    rarrc,\\n    rarr,\\n    Rarr,\\n    rArr,\\n    rarrfs,\\n    rarrhk,\\n    rarrlp,\\n    rarrpl,\\n    rarrsim,\\n    Rarrtl,\\n    rarrtl,\\n    rarrw,\\n    ratail,\\n    rAtail,\\n    ratio,\\n    rationals,\\n    rbarr,\\n    rBarr,\\n    RBarr,\\n    rbbrk,\\n    rbrace,\\n    rbrack,\\n    rbrke,\\n    rbrksld,\\n    rbrkslu,\\n    Rcaron,\\n    rcaron,\\n    Rcedil,\\n    rcedil,\\n    rceil,\\n    rcub,\\n    Rcy,\\n    rcy,\\n    rdca,\\n    rdldhar,\\n    rdquo,\\n    rdquor,\\n    rdsh,\\n    real,\\n    realine,\\n    realpart,\\n    reals,\\n    Re,\\n    rect,\\n    reg,\\n    REG,\\n    ReverseElement,\\n    ReverseEquilibrium,\\n    ReverseUpEquilibrium,\\n    rfisht,\\n    rfloor,\\n    rfr,\\n    Rfr,\\n    rHar,\\n    rhard,\\n    rharu,\\n    rharul,\\n    Rho,\\n    rho,\\n    rhov,\\n    RightAngleBracket,\\n    RightArrowBar,\\n    rightarrow,\\n    RightArrow,\\n    Rightarrow,\\n    RightArrowLeftArrow,\\n    rightarrowtail,\\n    RightCeiling,\\n    RightDoubleBracket,\\n    RightDownTeeVector,\\n    RightDownVectorBar,\\n    RightDownVector,\\n    RightFloor,\\n    rightharpoondown,\\n    rightharpoonup,\\n    rightleftarrows,\\n    rightleftharpoons,\\n    rightrightarrows,\\n    rightsquigarrow,\\n    RightTeeArrow,\\n    RightTee,\\n    RightTeeVector,\\n    rightthreetimes,\\n    RightTriangleBar,\\n    RightTriangle,\\n    RightTriangleEqual,\\n    RightUpDownVector,\\n    RightUpTeeVector,\\n    RightUpVectorBar,\\n    RightUpVector,\\n    RightVectorBar,\\n    RightVector,\\n    ring,\\n    risingdotseq,\\n    rlarr,\\n    rlhar,\\n    rlm,\\n    rmoustache,\\n    rmoust,\\n    rnmid,\\n    roang,\\n    roarr,\\n    robrk,\\n    ropar,\\n    ropf,\\n    Ropf,\\n    roplus,\\n    rotimes,\\n    RoundImplies,\\n    rpar,\\n    rpargt,\\n    rppolint,\\n    rrarr,\\n    Rrightarrow,\\n    rsaquo,\\n    rscr,\\n    Rscr,\\n    rsh,\\n    Rsh,\\n    rsqb,\\n    rsquo,\\n    rsquor,\\n    rthree,\\n    rtimes,\\n    rtri,\\n    rtrie,\\n    rtrif,\\n    rtriltri,\\n    RuleDelayed,\\n    ruluhar,\\n    rx,\\n    Sacute,\\n    sacute,\\n    sbquo,\\n    scap,\\n    Scaron,\\n    scaron,\\n    Sc,\\n    sc,\\n    sccue,\\n    sce,\\n    scE,\\n    Scedil,\\n    scedil,\\n    Scirc,\\n    scirc,\\n    scnap,\\n    scnE,\\n    scnsim,\\n    scpolint,\\n    scsim,\\n    Scy,\\n    scy,\\n    sdotb,\\n    sdot,\\n    sdote,\\n    searhk,\\n    searr,\\n    seArr,\\n    searrow,\\n    sect,\\n    semi,\\n    seswar,\\n    setminus,\\n    setmn,\\n    sext,\\n    Sfr,\\n    sfr,\\n    sfrown,\\n    sharp,\\n    SHCHcy,\\n    shchcy,\\n    SHcy,\\n    shcy,\\n    ShortDownArrow,\\n    ShortLeftArrow,\\n    shortmid,\\n    shortparallel,\\n    ShortRightArrow,\\n    ShortUpArrow,\\n    shy,\\n    Sigma,\\n    sigma,\\n    sigmaf,\\n    sigmav,\\n    sim,\\n    simdot,\\n    sime,\\n    simeq,\\n    simg,\\n    simgE,\\n    siml,\\n    simlE,\\n    simne,\\n    simplus,\\n    simrarr,\\n    slarr,\\n    SmallCircle,\\n    smallsetminus,\\n    smashp,\\n    smeparsl,\\n    smid,\\n    smile,\\n    smt,\\n    smte,\\n    smtes,\\n    SOFTcy,\\n    softcy,\\n    solbar,\\n    solb,\\n    sol,\\n    Sopf,\\n    sopf,\\n    spades,\\n    spadesuit,\\n    spar,\\n    sqcap,\\n    sqcaps,\\n    sqcup,\\n    sqcups,\\n    Sqrt,\\n    sqsub,\\n    sqsube,\\n    sqsubset,\\n    sqsubseteq,\\n    sqsup,\\n    sqsupe,\\n    sqsupset,\\n    sqsupseteq,\\n    square,\\n    Square,\\n    SquareIntersection,\\n    SquareSubset,\\n    SquareSubsetEqual,\\n    SquareSuperset,\\n    SquareSupersetEqual,\\n    SquareUnion,\\n    squarf,\\n    squ,\\n    squf,\\n    srarr,\\n    Sscr,\\n    sscr,\\n    ssetmn,\\n    ssmile,\\n    sstarf,\\n    Star,\\n    star,\\n    starf,\\n    straightepsilon,\\n    straightphi,\\n    strns,\\n    sub,\\n    Sub,\\n    subdot,\\n    subE,\\n    sube,\\n    subedot,\\n    submult,\\n    subnE,\\n    subne,\\n    subplus,\\n    subrarr,\\n    subset,\\n    Subset,\\n    subseteq,\\n    subseteqq,\\n    SubsetEqual,\\n    subsetneq,\\n    subsetneqq,\\n    subsim,\\n    subsub,\\n    subsup,\\n    succapprox,\\n    succ,\\n    succcurlyeq,\\n    Succeeds,\\n    SucceedsEqual,\\n    SucceedsSlantEqual,\\n    SucceedsTilde,\\n    succeq,\\n    succnapprox,\\n    succneqq,\\n    succnsim,\\n    succsim,\\n    SuchThat,\\n    sum,\\n    Sum,\\n    sung,\\n    sup1,\\n    sup2,\\n    sup3,\\n    sup,\\n    Sup,\\n    supdot,\\n    supdsub,\\n    supE,\\n    supe,\\n    supedot,\\n    Superset,\\n    SupersetEqual,\\n    suphsol,\\n    suphsub,\\n    suplarr,\\n    supmult,\\n    supnE,\\n    supne,\\n    supplus,\\n    supset,\\n    Supset,\\n    supseteq,\\n    supseteqq,\\n    supsetneq,\\n    supsetneqq,\\n    supsim,\\n    supsub,\\n    supsup,\\n    swarhk,\\n    swarr,\\n    swArr,\\n    swarrow,\\n    swnwar,\\n    szlig,\\n    Tab,\\n    target,\\n    Tau,\\n    tau,\\n    tbrk,\\n    Tcaron,\\n    tcaron,\\n    Tcedil,\\n    tcedil,\\n    Tcy,\\n    tcy,\\n    tdot,\\n    telrec,\\n    Tfr,\\n    tfr,\\n    there4,\\n    therefore,\\n    Therefore,\\n    Theta,\\n    theta,\\n    thetasym,\\n    thetav,\\n    thickapprox,\\n    thicksim,\\n    ThickSpace,\\n    ThinSpace,\\n    thinsp,\\n    thkap,\\n    thksim,\\n    THORN,\\n    thorn,\\n    tilde,\\n    Tilde,\\n    TildeEqual,\\n    TildeFullEqual,\\n    TildeTilde,\\n    timesbar,\\n    timesb,\\n    times,\\n    timesd,\\n    tint,\\n    toea,\\n    topbot,\\n    topcir,\\n    top,\\n    Topf,\\n    topf,\\n    topfork,\\n    tosa,\\n    tprime,\\n    trade,\\n    TRADE,\\n    triangle,\\n    triangledown,\\n    triangleleft,\\n    trianglelefteq,\\n    triangleq,\\n    triangleright,\\n    trianglerighteq,\\n    tridot,\\n    trie,\\n    triminus,\\n    TripleDot,\\n    triplus,\\n    trisb,\\n    tritime,\\n    trpezium,\\n    Tscr,\\n    tscr,\\n    TScy,\\n    tscy,\\n    TSHcy,\\n    tshcy,\\n    Tstrok,\\n    tstrok,\\n    twixt,\\n    twoheadleftarrow,\\n    twoheadrightarrow,\\n    Uacute,\\n    uacute,\\n    uarr,\\n    Uarr,\\n    uArr,\\n    Uarrocir,\\n    Ubrcy,\\n    ubrcy,\\n    Ubreve,\\n    ubreve,\\n    Ucirc,\\n    ucirc,\\n    Ucy,\\n    ucy,\\n    udarr,\\n    Udblac,\\n    udblac,\\n    udhar,\\n    ufisht,\\n    Ufr,\\n    ufr,\\n    Ugrave,\\n    ugrave,\\n    uHar,\\n    uharl,\\n    uharr,\\n    uhblk,\\n    ulcorn,\\n    ulcorner,\\n    ulcrop,\\n    ultri,\\n    Umacr,\\n    umacr,\\n    uml,\\n    UnderBar,\\n    UnderBrace,\\n    UnderBracket,\\n    UnderParenthesis,\\n    Union,\\n    UnionPlus,\\n    Uogon,\\n    uogon,\\n    Uopf,\\n    uopf,\\n    UpArrowBar,\\n    uparrow,\\n    UpArrow,\\n    Uparrow,\\n    UpArrowDownArrow,\\n    updownarrow,\\n    UpDownArrow,\\n    Updownarrow,\\n    UpEquilibrium,\\n    upharpoonleft,\\n    upharpoonright,\\n    uplus,\\n    UpperLeftArrow,\\n    UpperRightArrow,\\n    upsi,\\n    Upsi,\\n    upsih,\\n    Upsilon,\\n    upsilon,\\n    UpTeeArrow,\\n    UpTee,\\n    upuparrows,\\n    urcorn,\\n    urcorner,\\n    urcrop,\\n    Uring,\\n    uring,\\n    urtri,\\n    Uscr,\\n    uscr,\\n    utdot,\\n    Utilde,\\n    utilde,\\n    utri,\\n    utrif,\\n    uuarr,\\n    Uuml,\\n    uuml,\\n    uwangle,\\n    vangrt,\\n    varepsilon,\\n    varkappa,\\n    varnothing,\\n    varphi,\\n    varpi,\\n    varpropto,\\n    varr,\\n    vArr,\\n    varrho,\\n    varsigma,\\n    varsubsetneq,\\n    varsubsetneqq,\\n    varsupsetneq,\\n    varsupsetneqq,\\n    vartheta,\\n    vartriangleleft,\\n    vartriangleright,\\n    vBar,\\n    Vbar,\\n    vBarv,\\n    Vcy,\\n    vcy,\\n    vdash,\\n    vDash,\\n    Vdash,\\n    VDash,\\n    Vdashl,\\n    veebar,\\n    vee,\\n    Vee,\\n    veeeq,\\n    vellip,\\n    verbar,\\n    Verbar,\\n    vert,\\n    Vert,\\n    VerticalBar,\\n    VerticalLine,\\n    VerticalSeparator,\\n    VerticalTilde,\\n    VeryThinSpace,\\n    Vfr,\\n    vfr,\\n    vltri,\\n    vnsub,\\n    vnsup,\\n    Vopf,\\n    vopf,\\n    vprop,\\n    vrtri,\\n    Vscr,\\n    vscr,\\n    vsubnE,\\n    vsubne,\\n    vsupnE,\\n    vsupne,\\n    Vvdash,\\n    vzigzag,\\n    Wcirc,\\n    wcirc,\\n    wedbar,\\n    wedge,\\n    Wedge,\\n    wedgeq,\\n    weierp,\\n    Wfr,\\n    wfr,\\n    Wopf,\\n    wopf,\\n    wp,\\n    wr,\\n    wreath,\\n    Wscr,\\n    wscr,\\n    xcap,\\n    xcirc,\\n    xcup,\\n    xdtri,\\n    Xfr,\\n    xfr,\\n    xharr,\\n    xhArr,\\n    Xi,\\n    xi,\\n    xlarr,\\n    xlArr,\\n    xmap,\\n    xnis,\\n    xodot,\\n    Xopf,\\n    xopf,\\n    xoplus,\\n    xotime,\\n    xrarr,\\n    xrArr,\\n    Xscr,\\n    xscr,\\n    xsqcup,\\n    xuplus,\\n    xutri,\\n    xvee,\\n    xwedge,\\n    Yacute,\\n    yacute,\\n    YAcy,\\n    yacy,\\n    Ycirc,\\n    ycirc,\\n    Ycy,\\n    ycy,\\n    yen,\\n    Yfr,\\n    yfr,\\n    YIcy,\\n    yicy,\\n    Yopf,\\n    yopf,\\n    Yscr,\\n    yscr,\\n    YUcy,\\n    yucy,\\n    yuml,\\n    Yuml,\\n    Zacute,\\n    zacute,\\n    Zcaron,\\n    zcaron,\\n    Zcy,\\n    zcy,\\n    Zdot,\\n    zdot,\\n    zeetrf,\\n    ZeroWidthSpace,\\n    Zeta,\\n    zeta,\\n    zfr,\\n    Zfr,\\n    ZHcy,\\n    zhcy,\\n    zigrarr,\\n    zopf,\\n    Zopf,\\n    Zscr,\\n    zscr,\\n    zwj,\\n    zwnj\\n  },\\n  entities$2 = {\\n    __proto__: null,\\n    AElig,\\n    AMP,\\n    Aacute,\\n    Abreve,\\n    Acirc,\\n    Acy,\\n    Afr,\\n    Agrave,\\n    Alpha,\\n    Amacr,\\n    And,\\n    Aogon,\\n    Aopf,\\n    ApplyFunction,\\n    Aring,\\n    Ascr,\\n    Assign,\\n    Atilde,\\n    Auml,\\n    Backslash,\\n    Barv,\\n    Barwed,\\n    Bcy,\\n    Because,\\n    Bernoullis,\\n    Beta,\\n    Bfr,\\n    Bopf,\\n    Breve,\\n    Bscr,\\n    Bumpeq,\\n    CHcy,\\n    COPY,\\n    Cacute,\\n    Cap,\\n    CapitalDifferentialD,\\n    Cayleys,\\n    Ccaron,\\n    Ccedil,\\n    Ccirc,\\n    Cconint,\\n    Cdot,\\n    Cedilla,\\n    CenterDot,\\n    Cfr,\\n    Chi,\\n    CircleDot,\\n    CircleMinus,\\n    CirclePlus,\\n    CircleTimes,\\n    ClockwiseContourIntegral,\\n    CloseCurlyDoubleQuote,\\n    CloseCurlyQuote,\\n    Colon,\\n    Colone,\\n    Congruent,\\n    Conint,\\n    ContourIntegral,\\n    Copf,\\n    Coproduct,\\n    CounterClockwiseContourIntegral,\\n    Cross,\\n    Cscr,\\n    Cup,\\n    CupCap,\\n    DD,\\n    DDotrahd,\\n    DJcy,\\n    DScy,\\n    DZcy,\\n    Dagger,\\n    Darr,\\n    Dashv,\\n    Dcaron,\\n    Dcy,\\n    Del,\\n    Delta,\\n    Dfr,\\n    DiacriticalAcute,\\n    DiacriticalDot,\\n    DiacriticalDoubleAcute,\\n    DiacriticalGrave,\\n    DiacriticalTilde,\\n    Diamond,\\n    DifferentialD,\\n    Dopf,\\n    Dot,\\n    DotDot,\\n    DotEqual,\\n    DoubleContourIntegral,\\n    DoubleDot,\\n    DoubleDownArrow,\\n    DoubleLeftArrow,\\n    DoubleLeftRightArrow,\\n    DoubleLeftTee,\\n    DoubleLongLeftArrow,\\n    DoubleLongLeftRightArrow,\\n    DoubleLongRightArrow,\\n    DoubleRightArrow,\\n    DoubleRightTee,\\n    DoubleUpArrow,\\n    DoubleUpDownArrow,\\n    DoubleVerticalBar,\\n    DownArrow,\\n    DownArrowBar,\\n    DownArrowUpArrow,\\n    DownBreve,\\n    DownLeftRightVector,\\n    DownLeftTeeVector,\\n    DownLeftVector,\\n    DownLeftVectorBar,\\n    DownRightTeeVector,\\n    DownRightVector,\\n    DownRightVectorBar,\\n    DownTee,\\n    DownTeeArrow,\\n    Downarrow,\\n    Dscr,\\n    Dstrok,\\n    ENG,\\n    ETH,\\n    Eacute,\\n    Ecaron,\\n    Ecirc,\\n    Ecy,\\n    Edot,\\n    Efr,\\n    Egrave,\\n    Element,\\n    Emacr,\\n    EmptySmallSquare,\\n    EmptyVerySmallSquare,\\n    Eogon,\\n    Eopf,\\n    Epsilon,\\n    Equal,\\n    EqualTilde,\\n    Equilibrium,\\n    Escr,\\n    Esim,\\n    Eta,\\n    Euml,\\n    Exists,\\n    ExponentialE,\\n    Fcy,\\n    Ffr,\\n    FilledSmallSquare,\\n    FilledVerySmallSquare,\\n    Fopf,\\n    ForAll,\\n    Fouriertrf,\\n    Fscr,\\n    GJcy,\\n    GT,\\n    Gamma,\\n    Gammad,\\n    Gbreve,\\n    Gcedil,\\n    Gcirc,\\n    Gcy,\\n    Gdot,\\n    Gfr,\\n    Gg,\\n    Gopf,\\n    GreaterEqual,\\n    GreaterEqualLess,\\n    GreaterFullEqual,\\n    GreaterGreater,\\n    GreaterLess,\\n    GreaterSlantEqual,\\n    GreaterTilde,\\n    Gscr,\\n    Gt,\\n    HARDcy,\\n    Hacek,\\n    Hat,\\n    Hcirc,\\n    Hfr,\\n    HilbertSpace,\\n    Hopf,\\n    HorizontalLine,\\n    Hscr,\\n    Hstrok,\\n    HumpDownHump,\\n    HumpEqual,\\n    IEcy,\\n    IJlig,\\n    IOcy,\\n    Iacute,\\n    Icirc,\\n    Icy,\\n    Idot,\\n    Ifr,\\n    Igrave,\\n    Im,\\n    Imacr,\\n    ImaginaryI,\\n    Implies,\\n    Int,\\n    Integral,\\n    Intersection,\\n    InvisibleComma,\\n    InvisibleTimes,\\n    Iogon,\\n    Iopf,\\n    Iota,\\n    Iscr,\\n    Itilde,\\n    Iukcy,\\n    Iuml,\\n    Jcirc,\\n    Jcy,\\n    Jfr,\\n    Jopf,\\n    Jscr,\\n    Jsercy,\\n    Jukcy,\\n    KHcy,\\n    KJcy,\\n    Kappa,\\n    Kcedil,\\n    Kcy,\\n    Kfr,\\n    Kopf,\\n    Kscr,\\n    LJcy,\\n    LT,\\n    Lacute,\\n    Lambda,\\n    Lang,\\n    Laplacetrf,\\n    Larr,\\n    Lcaron,\\n    Lcedil,\\n    Lcy,\\n    LeftAngleBracket,\\n    LeftArrow,\\n    LeftArrowBar,\\n    LeftArrowRightArrow,\\n    LeftCeiling,\\n    LeftDoubleBracket,\\n    LeftDownTeeVector,\\n    LeftDownVector,\\n    LeftDownVectorBar,\\n    LeftFloor,\\n    LeftRightArrow,\\n    LeftRightVector,\\n    LeftTee,\\n    LeftTeeArrow,\\n    LeftTeeVector,\\n    LeftTriangle,\\n    LeftTriangleBar,\\n    LeftTriangleEqual,\\n    LeftUpDownVector,\\n    LeftUpTeeVector,\\n    LeftUpVector,\\n    LeftUpVectorBar,\\n    LeftVector,\\n    LeftVectorBar,\\n    Leftarrow,\\n    Leftrightarrow,\\n    LessEqualGreater,\\n    LessFullEqual,\\n    LessGreater,\\n    LessLess,\\n    LessSlantEqual,\\n    LessTilde,\\n    Lfr,\\n    Ll,\\n    Lleftarrow,\\n    Lmidot,\\n    LongLeftArrow,\\n    LongLeftRightArrow,\\n    LongRightArrow,\\n    Longleftarrow,\\n    Longleftrightarrow,\\n    Longrightarrow,\\n    Lopf,\\n    LowerLeftArrow,\\n    LowerRightArrow,\\n    Lscr,\\n    Lsh,\\n    Lstrok,\\n    Lt,\\n    Mcy,\\n    MediumSpace,\\n    Mellintrf,\\n    Mfr,\\n    MinusPlus,\\n    Mopf,\\n    Mscr,\\n    Mu,\\n    NJcy,\\n    Nacute,\\n    Ncaron,\\n    Ncedil,\\n    Ncy,\\n    NegativeMediumSpace,\\n    NegativeThickSpace,\\n    NegativeThinSpace,\\n    NegativeVeryThinSpace,\\n    NestedGreaterGreater,\\n    NestedLessLess,\\n    NewLine,\\n    Nfr,\\n    NoBreak,\\n    NonBreakingSpace,\\n    Nopf,\\n    Not,\\n    NotCongruent,\\n    NotCupCap,\\n    NotDoubleVerticalBar,\\n    NotElement,\\n    NotEqual,\\n    NotEqualTilde,\\n    NotExists,\\n    NotGreater,\\n    NotGreaterEqual,\\n    NotGreaterFullEqual,\\n    NotGreaterGreater,\\n    NotGreaterLess,\\n    NotGreaterSlantEqual,\\n    NotGreaterTilde,\\n    NotHumpDownHump,\\n    NotHumpEqual,\\n    NotLeftTriangle,\\n    NotLeftTriangleBar,\\n    NotLeftTriangleEqual,\\n    NotLess,\\n    NotLessEqual,\\n    NotLessGreater,\\n    NotLessLess,\\n    NotLessSlantEqual,\\n    NotLessTilde,\\n    NotNestedGreaterGreater,\\n    NotNestedLessLess,\\n    NotPrecedes,\\n    NotPrecedesEqual,\\n    NotPrecedesSlantEqual,\\n    NotReverseElement,\\n    NotRightTriangle,\\n    NotRightTriangleBar,\\n    NotRightTriangleEqual,\\n    NotSquareSubset,\\n    NotSquareSubsetEqual,\\n    NotSquareSuperset,\\n    NotSquareSupersetEqual,\\n    NotSubset,\\n    NotSubsetEqual,\\n    NotSucceeds,\\n    NotSucceedsEqual,\\n    NotSucceedsSlantEqual,\\n    NotSucceedsTilde,\\n    NotSuperset,\\n    NotSupersetEqual,\\n    NotTilde,\\n    NotTildeEqual,\\n    NotTildeFullEqual,\\n    NotTildeTilde,\\n    NotVerticalBar,\\n    Nscr,\\n    Ntilde,\\n    Nu,\\n    OElig,\\n    Oacute,\\n    Ocirc,\\n    Ocy,\\n    Odblac,\\n    Ofr,\\n    Ograve,\\n    Omacr,\\n    Omega,\\n    Omicron,\\n    Oopf,\\n    OpenCurlyDoubleQuote,\\n    OpenCurlyQuote,\\n    Or,\\n    Oscr,\\n    Oslash,\\n    Otilde,\\n    Otimes,\\n    Ouml,\\n    OverBar,\\n    OverBrace,\\n    OverBracket,\\n    OverParenthesis,\\n    PartialD,\\n    Pcy,\\n    Pfr,\\n    Phi,\\n    Pi,\\n    PlusMinus,\\n    Poincareplane,\\n    Popf,\\n    Pr,\\n    Precedes,\\n    PrecedesEqual,\\n    PrecedesSlantEqual,\\n    PrecedesTilde,\\n    Prime,\\n    Product,\\n    Proportion,\\n    Proportional,\\n    Pscr,\\n    Psi,\\n    QUOT,\\n    Qfr,\\n    Qopf,\\n    Qscr,\\n    RBarr,\\n    REG,\\n    Racute,\\n    Rang,\\n    Rarr,\\n    Rarrtl,\\n    Rcaron,\\n    Rcedil,\\n    Rcy,\\n    Re,\\n    ReverseElement,\\n    ReverseEquilibrium,\\n    ReverseUpEquilibrium,\\n    Rfr,\\n    Rho,\\n    RightAngleBracket,\\n    RightArrow,\\n    RightArrowBar,\\n    RightArrowLeftArrow,\\n    RightCeiling,\\n    RightDoubleBracket,\\n    RightDownTeeVector,\\n    RightDownVector,\\n    RightDownVectorBar,\\n    RightFloor,\\n    RightTee,\\n    RightTeeArrow,\\n    RightTeeVector,\\n    RightTriangle,\\n    RightTriangleBar,\\n    RightTriangleEqual,\\n    RightUpDownVector,\\n    RightUpTeeVector,\\n    RightUpVector,\\n    RightUpVectorBar,\\n    RightVector,\\n    RightVectorBar,\\n    Rightarrow,\\n    Ropf,\\n    RoundImplies,\\n    Rrightarrow,\\n    Rscr,\\n    Rsh,\\n    RuleDelayed,\\n    SHCHcy,\\n    SHcy,\\n    SOFTcy,\\n    Sacute,\\n    Sc,\\n    Scaron,\\n    Scedil,\\n    Scirc,\\n    Scy,\\n    Sfr,\\n    ShortDownArrow,\\n    ShortLeftArrow,\\n    ShortRightArrow,\\n    ShortUpArrow,\\n    Sigma,\\n    SmallCircle,\\n    Sopf,\\n    Sqrt,\\n    Square,\\n    SquareIntersection,\\n    SquareSubset,\\n    SquareSubsetEqual,\\n    SquareSuperset,\\n    SquareSupersetEqual,\\n    SquareUnion,\\n    Sscr,\\n    Star,\\n    Sub,\\n    Subset,\\n    SubsetEqual,\\n    Succeeds,\\n    SucceedsEqual,\\n    SucceedsSlantEqual,\\n    SucceedsTilde,\\n    SuchThat,\\n    Sum,\\n    Sup,\\n    Superset,\\n    SupersetEqual,\\n    Supset,\\n    THORN,\\n    TRADE,\\n    TSHcy,\\n    TScy,\\n    Tab,\\n    Tau,\\n    Tcaron,\\n    Tcedil,\\n    Tcy,\\n    Tfr,\\n    Therefore,\\n    Theta,\\n    ThickSpace,\\n    ThinSpace,\\n    Tilde,\\n    TildeEqual,\\n    TildeFullEqual,\\n    TildeTilde,\\n    Topf,\\n    TripleDot,\\n    Tscr,\\n    Tstrok,\\n    Uacute,\\n    Uarr,\\n    Uarrocir,\\n    Ubrcy,\\n    Ubreve,\\n    Ucirc,\\n    Ucy,\\n    Udblac,\\n    Ufr,\\n    Ugrave,\\n    Umacr,\\n    UnderBar,\\n    UnderBrace,\\n    UnderBracket,\\n    UnderParenthesis,\\n    Union,\\n    UnionPlus,\\n    Uogon,\\n    Uopf,\\n    UpArrow,\\n    UpArrowBar,\\n    UpArrowDownArrow,\\n    UpDownArrow,\\n    UpEquilibrium,\\n    UpTee,\\n    UpTeeArrow,\\n    Uparrow,\\n    Updownarrow,\\n    UpperLeftArrow,\\n    UpperRightArrow,\\n    Upsi,\\n    Upsilon,\\n    Uring,\\n    Uscr,\\n    Utilde,\\n    Uuml,\\n    VDash,\\n    Vbar,\\n    Vcy,\\n    Vdash,\\n    Vdashl,\\n    Vee,\\n    Verbar,\\n    Vert,\\n    VerticalBar,\\n    VerticalLine,\\n    VerticalSeparator,\\n    VerticalTilde,\\n    VeryThinSpace,\\n    Vfr,\\n    Vopf,\\n    Vscr,\\n    Vvdash,\\n    Wcirc,\\n    Wedge,\\n    Wfr,\\n    Wopf,\\n    Wscr,\\n    Xfr,\\n    Xi,\\n    Xopf,\\n    Xscr,\\n    YAcy,\\n    YIcy,\\n    YUcy,\\n    Yacute,\\n    Ycirc,\\n    Ycy,\\n    Yfr,\\n    Yopf,\\n    Yscr,\\n    Yuml,\\n    ZHcy,\\n    Zacute,\\n    Zcaron,\\n    Zcy,\\n    Zdot,\\n    ZeroWidthSpace,\\n    Zeta,\\n    Zfr,\\n    Zopf,\\n    Zscr,\\n    aacute,\\n    abreve,\\n    ac,\\n    acE,\\n    acd,\\n    acirc,\\n    acute,\\n    acy,\\n    aelig,\\n    af,\\n    afr,\\n    agrave,\\n    alefsym,\\n    aleph,\\n    alpha,\\n    amacr,\\n    amalg,\\n    amp,\\n    and,\\n    andand,\\n    andd,\\n    andslope,\\n    andv,\\n    ang,\\n    ange,\\n    angle,\\n    angmsd,\\n    angmsdaa,\\n    angmsdab,\\n    angmsdac,\\n    angmsdad,\\n    angmsdae,\\n    angmsdaf,\\n    angmsdag,\\n    angmsdah,\\n    angrt,\\n    angrtvb,\\n    angrtvbd,\\n    angsph,\\n    angst,\\n    angzarr,\\n    aogon,\\n    aopf,\\n    ap,\\n    apE,\\n    apacir,\\n    ape,\\n    apid,\\n    apos,\\n    approx,\\n    approxeq,\\n    aring,\\n    ascr,\\n    ast,\\n    asymp,\\n    asympeq,\\n    atilde,\\n    auml,\\n    awconint,\\n    awint,\\n    bNot,\\n    backcong,\\n    backepsilon,\\n    backprime,\\n    backsim,\\n    backsimeq,\\n    barvee,\\n    barwed,\\n    barwedge,\\n    bbrk,\\n    bbrktbrk,\\n    bcong,\\n    bcy,\\n    bdquo,\\n    becaus,\\n    because,\\n    bemptyv,\\n    bepsi,\\n    bernou,\\n    beta,\\n    beth,\\n    between,\\n    bfr,\\n    bigcap,\\n    bigcirc,\\n    bigcup,\\n    bigodot,\\n    bigoplus,\\n    bigotimes,\\n    bigsqcup,\\n    bigstar,\\n    bigtriangledown,\\n    bigtriangleup,\\n    biguplus,\\n    bigvee,\\n    bigwedge,\\n    bkarow,\\n    blacklozenge,\\n    blacksquare,\\n    blacktriangle,\\n    blacktriangledown,\\n    blacktriangleleft,\\n    blacktriangleright,\\n    blank,\\n    blk12,\\n    blk14,\\n    blk34,\\n    block,\\n    bne,\\n    bnequiv,\\n    bnot,\\n    bopf,\\n    bot,\\n    bottom,\\n    bowtie,\\n    boxDL,\\n    boxDR,\\n    boxDl,\\n    boxDr,\\n    boxH,\\n    boxHD,\\n    boxHU,\\n    boxHd,\\n    boxHu,\\n    boxUL,\\n    boxUR,\\n    boxUl,\\n    boxUr,\\n    boxV,\\n    boxVH,\\n    boxVL,\\n    boxVR,\\n    boxVh,\\n    boxVl,\\n    boxVr,\\n    boxbox,\\n    boxdL,\\n    boxdR,\\n    boxdl,\\n    boxdr,\\n    boxh,\\n    boxhD,\\n    boxhU,\\n    boxhd,\\n    boxhu,\\n    boxminus,\\n    boxplus,\\n    boxtimes,\\n    boxuL,\\n    boxuR,\\n    boxul,\\n    boxur,\\n    boxv,\\n    boxvH,\\n    boxvL,\\n    boxvR,\\n    boxvh,\\n    boxvl,\\n    boxvr,\\n    bprime,\\n    breve,\\n    brvbar,\\n    bscr,\\n    bsemi,\\n    bsim,\\n    bsime,\\n    bsol,\\n    bsolb,\\n    bsolhsub,\\n    bull,\\n    bullet,\\n    bump,\\n    bumpE,\\n    bumpe,\\n    bumpeq,\\n    cacute,\\n    cap,\\n    capand,\\n    capbrcup,\\n    capcap,\\n    capcup,\\n    capdot,\\n    caps,\\n    caret,\\n    caron,\\n    ccaps,\\n    ccaron,\\n    ccedil,\\n    ccirc,\\n    ccups,\\n    ccupssm,\\n    cdot,\\n    cedil,\\n    cemptyv,\\n    cent,\\n    centerdot,\\n    cfr,\\n    chcy,\\n    check,\\n    checkmark,\\n    chi,\\n    cir,\\n    cirE,\\n    circ,\\n    circeq,\\n    circlearrowleft,\\n    circlearrowright,\\n    circledR,\\n    circledS,\\n    circledast,\\n    circledcirc,\\n    circleddash,\\n    cire,\\n    cirfnint,\\n    cirmid,\\n    cirscir,\\n    clubs,\\n    clubsuit,\\n    colon,\\n    colone,\\n    coloneq,\\n    comma,\\n    commat,\\n    comp,\\n    compfn,\\n    complement,\\n    complexes,\\n    cong,\\n    congdot,\\n    conint,\\n    copf,\\n    coprod,\\n    copy,\\n    copysr,\\n    crarr,\\n    cross,\\n    cscr,\\n    csub,\\n    csube,\\n    csup,\\n    csupe,\\n    ctdot,\\n    cudarrl,\\n    cudarrr,\\n    cuepr,\\n    cuesc,\\n    cularr,\\n    cularrp,\\n    cup,\\n    cupbrcap,\\n    cupcap,\\n    cupcup,\\n    cupdot,\\n    cupor,\\n    cups,\\n    curarr,\\n    curarrm,\\n    curlyeqprec,\\n    curlyeqsucc,\\n    curlyvee,\\n    curlywedge,\\n    curren,\\n    curvearrowleft,\\n    curvearrowright,\\n    cuvee,\\n    cuwed,\\n    cwconint,\\n    cwint,\\n    cylcty,\\n    dArr,\\n    dHar,\\n    dagger,\\n    daleth,\\n    darr,\\n    dash,\\n    dashv,\\n    dbkarow,\\n    dblac,\\n    dcaron,\\n    dcy,\\n    dd,\\n    ddagger,\\n    ddarr,\\n    ddotseq,\\n    default: entities$1,\\n    deg,\\n    delta,\\n    demptyv,\\n    dfisht,\\n    dfr,\\n    dharl,\\n    dharr,\\n    diam,\\n    diamond,\\n    diamondsuit,\\n    diams,\\n    die,\\n    digamma,\\n    disin,\\n    div,\\n    divide,\\n    divideontimes,\\n    divonx,\\n    djcy,\\n    dlcorn,\\n    dlcrop,\\n    dollar,\\n    dopf,\\n    dot,\\n    doteq,\\n    doteqdot,\\n    dotminus,\\n    dotplus,\\n    dotsquare,\\n    doublebarwedge,\\n    downarrow,\\n    downdownarrows,\\n    downharpoonleft,\\n    downharpoonright,\\n    drbkarow,\\n    drcorn,\\n    drcrop,\\n    dscr,\\n    dscy,\\n    dsol,\\n    dstrok,\\n    dtdot,\\n    dtri,\\n    dtrif,\\n    duarr,\\n    duhar,\\n    dwangle,\\n    dzcy,\\n    dzigrarr,\\n    eDDot,\\n    eDot,\\n    eacute,\\n    easter,\\n    ecaron,\\n    ecir,\\n    ecirc,\\n    ecolon,\\n    ecy,\\n    edot,\\n    ee,\\n    efDot,\\n    efr,\\n    eg,\\n    egrave,\\n    egs,\\n    egsdot,\\n    el,\\n    elinters,\\n    ell,\\n    els,\\n    elsdot,\\n    emacr,\\n    empty,\\n    emptyset,\\n    emptyv,\\n    emsp,\\n    emsp13,\\n    emsp14,\\n    eng,\\n    ensp,\\n    eogon,\\n    eopf,\\n    epar,\\n    eparsl,\\n    eplus,\\n    epsi,\\n    epsilon,\\n    epsiv,\\n    eqcirc,\\n    eqcolon,\\n    eqsim,\\n    eqslantgtr,\\n    eqslantless,\\n    equals,\\n    equest,\\n    equiv,\\n    equivDD,\\n    eqvparsl,\\n    erDot,\\n    erarr,\\n    escr,\\n    esdot,\\n    esim,\\n    eta,\\n    eth,\\n    euml,\\n    euro,\\n    excl,\\n    exist,\\n    expectation,\\n    exponentiale,\\n    fallingdotseq,\\n    fcy,\\n    female,\\n    ffilig,\\n    fflig,\\n    ffllig,\\n    ffr,\\n    filig,\\n    fjlig,\\n    flat,\\n    fllig,\\n    fltns,\\n    fnof,\\n    fopf,\\n    forall,\\n    fork,\\n    forkv,\\n    fpartint,\\n    frac12,\\n    frac13,\\n    frac14,\\n    frac15,\\n    frac16,\\n    frac18,\\n    frac23,\\n    frac25,\\n    frac34,\\n    frac35,\\n    frac38,\\n    frac45,\\n    frac56,\\n    frac58,\\n    frac78,\\n    frasl,\\n    frown,\\n    fscr,\\n    gE,\\n    gEl,\\n    gacute,\\n    gamma,\\n    gammad,\\n    gap,\\n    gbreve,\\n    gcirc,\\n    gcy,\\n    gdot,\\n    ge,\\n    gel,\\n    geq,\\n    geqq,\\n    geqslant,\\n    ges,\\n    gescc,\\n    gesdot,\\n    gesdoto,\\n    gesdotol,\\n    gesl,\\n    gesles,\\n    gfr,\\n    gg,\\n    ggg,\\n    gimel,\\n    gjcy,\\n    gl,\\n    glE,\\n    gla,\\n    glj,\\n    gnE,\\n    gnap,\\n    gnapprox,\\n    gne,\\n    gneq,\\n    gneqq,\\n    gnsim,\\n    gopf,\\n    grave,\\n    gscr,\\n    gsim,\\n    gsime,\\n    gsiml,\\n    gt,\\n    gtcc,\\n    gtcir,\\n    gtdot,\\n    gtlPar,\\n    gtquest,\\n    gtrapprox,\\n    gtrarr,\\n    gtrdot,\\n    gtreqless,\\n    gtreqqless,\\n    gtrless,\\n    gtrsim,\\n    gvertneqq,\\n    gvnE,\\n    hArr,\\n    hairsp,\\n    half,\\n    hamilt,\\n    hardcy,\\n    harr,\\n    harrcir,\\n    harrw,\\n    hbar,\\n    hcirc,\\n    hearts,\\n    heartsuit,\\n    hellip,\\n    hercon,\\n    hfr,\\n    hksearow,\\n    hkswarow,\\n    hoarr,\\n    homtht,\\n    hookleftarrow,\\n    hookrightarrow,\\n    hopf,\\n    horbar,\\n    hscr,\\n    hslash,\\n    hstrok,\\n    hybull,\\n    hyphen,\\n    iacute,\\n    ic,\\n    icirc,\\n    icy,\\n    iecy,\\n    iexcl,\\n    iff,\\n    ifr,\\n    igrave,\\n    ii,\\n    iiiint,\\n    iiint,\\n    iinfin,\\n    iiota,\\n    ijlig,\\n    imacr,\\n    image,\\n    imagline,\\n    imagpart,\\n    imath,\\n    imof,\\n    imped,\\n    incare,\\n    infin,\\n    infintie,\\n    inodot,\\n    int,\\n    intcal,\\n    integers,\\n    intercal,\\n    intlarhk,\\n    intprod,\\n    iocy,\\n    iogon,\\n    iopf,\\n    iota,\\n    iprod,\\n    iquest,\\n    iscr,\\n    isin,\\n    isinE,\\n    isindot,\\n    isins,\\n    isinsv,\\n    isinv,\\n    it,\\n    itilde,\\n    iukcy,\\n    iuml,\\n    jcirc,\\n    jcy,\\n    jfr,\\n    jmath,\\n    jopf,\\n    jscr,\\n    jsercy,\\n    jukcy,\\n    kappa,\\n    kappav,\\n    kcedil,\\n    kcy,\\n    kfr,\\n    kgreen,\\n    khcy,\\n    kjcy,\\n    kopf,\\n    kscr,\\n    lAarr,\\n    lArr,\\n    lAtail,\\n    lBarr,\\n    lE,\\n    lEg,\\n    lHar,\\n    lacute,\\n    laemptyv,\\n    lagran,\\n    lambda,\\n    lang,\\n    langd,\\n    langle,\\n    lap,\\n    laquo,\\n    larr,\\n    larrb,\\n    larrbfs,\\n    larrfs,\\n    larrhk,\\n    larrlp,\\n    larrpl,\\n    larrsim,\\n    larrtl,\\n    lat,\\n    latail,\\n    late,\\n    lates,\\n    lbarr,\\n    lbbrk,\\n    lbrace,\\n    lbrack,\\n    lbrke,\\n    lbrksld,\\n    lbrkslu,\\n    lcaron,\\n    lcedil,\\n    lceil,\\n    lcub,\\n    lcy,\\n    ldca,\\n    ldquo,\\n    ldquor,\\n    ldrdhar,\\n    ldrushar,\\n    ldsh,\\n    le,\\n    leftarrow,\\n    leftarrowtail,\\n    leftharpoondown,\\n    leftharpoonup,\\n    leftleftarrows,\\n    leftrightarrow,\\n    leftrightarrows,\\n    leftrightharpoons,\\n    leftrightsquigarrow,\\n    leftthreetimes,\\n    leg,\\n    leq,\\n    leqq,\\n    leqslant,\\n    les,\\n    lescc,\\n    lesdot,\\n    lesdoto,\\n    lesdotor,\\n    lesg,\\n    lesges,\\n    lessapprox,\\n    lessdot,\\n    lesseqgtr,\\n    lesseqqgtr,\\n    lessgtr,\\n    lesssim,\\n    lfisht,\\n    lfloor,\\n    lfr,\\n    lg,\\n    lgE,\\n    lhard,\\n    lharu,\\n    lharul,\\n    lhblk,\\n    ljcy,\\n    ll,\\n    llarr,\\n    llcorner,\\n    llhard,\\n    lltri,\\n    lmidot,\\n    lmoust,\\n    lmoustache,\\n    lnE,\\n    lnap,\\n    lnapprox,\\n    lne,\\n    lneq,\\n    lneqq,\\n    lnsim,\\n    loang,\\n    loarr,\\n    lobrk,\\n    longleftarrow,\\n    longleftrightarrow,\\n    longmapsto,\\n    longrightarrow,\\n    looparrowleft,\\n    looparrowright,\\n    lopar,\\n    lopf,\\n    loplus,\\n    lotimes,\\n    lowast,\\n    lowbar,\\n    loz,\\n    lozenge,\\n    lozf,\\n    lpar,\\n    lparlt,\\n    lrarr,\\n    lrcorner,\\n    lrhar,\\n    lrhard,\\n    lrm,\\n    lrtri,\\n    lsaquo,\\n    lscr,\\n    lsh,\\n    lsim,\\n    lsime,\\n    lsimg,\\n    lsqb,\\n    lsquo,\\n    lsquor,\\n    lstrok,\\n    lt,\\n    ltcc,\\n    ltcir,\\n    ltdot,\\n    lthree,\\n    ltimes,\\n    ltlarr,\\n    ltquest,\\n    ltrPar,\\n    ltri,\\n    ltrie,\\n    ltrif,\\n    lurdshar,\\n    luruhar,\\n    lvertneqq,\\n    lvnE,\\n    mDDot,\\n    macr,\\n    male,\\n    malt,\\n    maltese,\\n    map,\\n    mapsto,\\n    mapstodown,\\n    mapstoleft,\\n    mapstoup,\\n    marker,\\n    mcomma,\\n    mcy,\\n    mdash,\\n    measuredangle,\\n    mfr,\\n    mho,\\n    micro,\\n    mid,\\n    midast,\\n    midcir,\\n    middot,\\n    minus,\\n    minusb,\\n    minusd,\\n    minusdu,\\n    mlcp,\\n    mldr,\\n    mnplus,\\n    models,\\n    mopf,\\n    mp,\\n    mscr,\\n    mstpos,\\n    mu,\\n    multimap,\\n    mumap,\\n    nGg,\\n    nGt,\\n    nGtv,\\n    nLeftarrow,\\n    nLeftrightarrow,\\n    nLl,\\n    nLt,\\n    nLtv,\\n    nRightarrow,\\n    nVDash,\\n    nVdash,\\n    nabla,\\n    nacute,\\n    nang,\\n    nap,\\n    napE,\\n    napid,\\n    napos,\\n    napprox,\\n    natur,\\n    natural,\\n    naturals,\\n    nbsp,\\n    nbump,\\n    nbumpe,\\n    ncap,\\n    ncaron,\\n    ncedil,\\n    ncong,\\n    ncongdot,\\n    ncup,\\n    ncy,\\n    ndash,\\n    ne,\\n    neArr,\\n    nearhk,\\n    nearr,\\n    nearrow,\\n    nedot,\\n    nequiv,\\n    nesear,\\n    nesim,\\n    nexist,\\n    nexists,\\n    nfr,\\n    ngE,\\n    nge,\\n    ngeq,\\n    ngeqq,\\n    ngeqslant,\\n    nges,\\n    ngsim,\\n    ngt,\\n    ngtr,\\n    nhArr,\\n    nharr,\\n    nhpar,\\n    ni,\\n    nis,\\n    nisd,\\n    niv,\\n    njcy,\\n    nlArr,\\n    nlE,\\n    nlarr,\\n    nldr,\\n    nle,\\n    nleftarrow,\\n    nleftrightarrow,\\n    nleq,\\n    nleqq,\\n    nleqslant,\\n    nles,\\n    nless,\\n    nlsim,\\n    nlt,\\n    nltri,\\n    nltrie,\\n    nmid,\\n    nopf,\\n    not,\\n    notin,\\n    notinE,\\n    notindot,\\n    notinva,\\n    notinvb,\\n    notinvc,\\n    notni,\\n    notniva,\\n    notnivb,\\n    notnivc,\\n    npar,\\n    nparallel,\\n    nparsl,\\n    npart,\\n    npolint,\\n    npr,\\n    nprcue,\\n    npre,\\n    nprec,\\n    npreceq,\\n    nrArr,\\n    nrarr,\\n    nrarrc,\\n    nrarrw,\\n    nrightarrow,\\n    nrtri,\\n    nrtrie,\\n    nsc,\\n    nsccue,\\n    nsce,\\n    nscr,\\n    nshortmid,\\n    nshortparallel,\\n    nsim,\\n    nsime,\\n    nsimeq,\\n    nsmid,\\n    nspar,\\n    nsqsube,\\n    nsqsupe,\\n    nsub,\\n    nsubE,\\n    nsube,\\n    nsubset,\\n    nsubseteq,\\n    nsubseteqq,\\n    nsucc,\\n    nsucceq,\\n    nsup,\\n    nsupE,\\n    nsupe,\\n    nsupset,\\n    nsupseteq,\\n    nsupseteqq,\\n    ntgl,\\n    ntilde,\\n    ntlg,\\n    ntriangleleft,\\n    ntrianglelefteq,\\n    ntriangleright,\\n    ntrianglerighteq,\\n    nu,\\n    num,\\n    numero,\\n    numsp,\\n    nvDash,\\n    nvHarr,\\n    nvap,\\n    nvdash,\\n    nvge,\\n    nvgt,\\n    nvinfin,\\n    nvlArr,\\n    nvle,\\n    nvlt,\\n    nvltrie,\\n    nvrArr,\\n    nvrtrie,\\n    nvsim,\\n    nwArr,\\n    nwarhk,\\n    nwarr,\\n    nwarrow,\\n    nwnear,\\n    oS,\\n    oacute,\\n    oast,\\n    ocir,\\n    ocirc,\\n    ocy,\\n    odash,\\n    odblac,\\n    odiv,\\n    odot,\\n    odsold,\\n    oelig,\\n    ofcir,\\n    ofr,\\n    ogon,\\n    ograve,\\n    ogt,\\n    ohbar,\\n    ohm,\\n    oint,\\n    olarr,\\n    olcir,\\n    olcross,\\n    oline,\\n    olt,\\n    omacr,\\n    omega,\\n    omicron,\\n    omid,\\n    ominus,\\n    oopf,\\n    opar,\\n    operp,\\n    oplus,\\n    or,\\n    orarr,\\n    ord,\\n    order,\\n    orderof,\\n    ordf,\\n    ordm,\\n    origof,\\n    oror,\\n    orslope,\\n    orv,\\n    oscr,\\n    oslash,\\n    osol,\\n    otilde,\\n    otimes,\\n    otimesas,\\n    ouml,\\n    ovbar,\\n    par,\\n    para,\\n    parallel,\\n    parsim,\\n    parsl,\\n    part,\\n    pcy,\\n    percnt,\\n    period,\\n    permil,\\n    perp,\\n    pertenk,\\n    pfr,\\n    phi,\\n    phiv,\\n    phmmat,\\n    phone,\\n    pi,\\n    pitchfork,\\n    piv,\\n    planck,\\n    planckh,\\n    plankv,\\n    plus,\\n    plusacir,\\n    plusb,\\n    pluscir,\\n    plusdo,\\n    plusdu,\\n    pluse,\\n    plusmn,\\n    plussim,\\n    plustwo,\\n    pm,\\n    pointint,\\n    popf,\\n    pound,\\n    pr,\\n    prE,\\n    prap,\\n    prcue,\\n    pre,\\n    prec,\\n    precapprox,\\n    preccurlyeq,\\n    preceq,\\n    precnapprox,\\n    precneqq,\\n    precnsim,\\n    precsim,\\n    prime,\\n    primes,\\n    prnE,\\n    prnap,\\n    prnsim,\\n    prod,\\n    profalar,\\n    profline,\\n    profsurf,\\n    prop,\\n    propto,\\n    prsim,\\n    prurel,\\n    pscr,\\n    psi,\\n    puncsp,\\n    qfr,\\n    qint,\\n    qopf,\\n    qprime,\\n    qscr,\\n    quaternions,\\n    quatint,\\n    quest,\\n    questeq,\\n    quot,\\n    rAarr,\\n    rArr,\\n    rAtail,\\n    rBarr,\\n    rHar,\\n    race,\\n    racute,\\n    radic,\\n    raemptyv,\\n    rang,\\n    rangd,\\n    range,\\n    rangle,\\n    raquo,\\n    rarr,\\n    rarrap,\\n    rarrb,\\n    rarrbfs,\\n    rarrc,\\n    rarrfs,\\n    rarrhk,\\n    rarrlp,\\n    rarrpl,\\n    rarrsim,\\n    rarrtl,\\n    rarrw,\\n    ratail,\\n    ratio,\\n    rationals,\\n    rbarr,\\n    rbbrk,\\n    rbrace,\\n    rbrack,\\n    rbrke,\\n    rbrksld,\\n    rbrkslu,\\n    rcaron,\\n    rcedil,\\n    rceil,\\n    rcub,\\n    rcy,\\n    rdca,\\n    rdldhar,\\n    rdquo,\\n    rdquor,\\n    rdsh,\\n    real,\\n    realine,\\n    realpart,\\n    reals,\\n    rect,\\n    reg,\\n    rfisht,\\n    rfloor,\\n    rfr,\\n    rhard,\\n    rharu,\\n    rharul,\\n    rho,\\n    rhov,\\n    rightarrow,\\n    rightarrowtail,\\n    rightharpoondown,\\n    rightharpoonup,\\n    rightleftarrows,\\n    rightleftharpoons,\\n    rightrightarrows,\\n    rightsquigarrow,\\n    rightthreetimes,\\n    ring,\\n    risingdotseq,\\n    rlarr,\\n    rlhar,\\n    rlm,\\n    rmoust,\\n    rmoustache,\\n    rnmid,\\n    roang,\\n    roarr,\\n    robrk,\\n    ropar,\\n    ropf,\\n    roplus,\\n    rotimes,\\n    rpar,\\n    rpargt,\\n    rppolint,\\n    rrarr,\\n    rsaquo,\\n    rscr,\\n    rsh,\\n    rsqb,\\n    rsquo,\\n    rsquor,\\n    rthree,\\n    rtimes,\\n    rtri,\\n    rtrie,\\n    rtrif,\\n    rtriltri,\\n    ruluhar,\\n    rx,\\n    sacute,\\n    sbquo,\\n    sc,\\n    scE,\\n    scap,\\n    scaron,\\n    sccue,\\n    sce,\\n    scedil,\\n    scirc,\\n    scnE,\\n    scnap,\\n    scnsim,\\n    scpolint,\\n    scsim,\\n    scy,\\n    sdot,\\n    sdotb,\\n    sdote,\\n    seArr,\\n    searhk,\\n    searr,\\n    searrow,\\n    sect,\\n    semi,\\n    seswar,\\n    setminus,\\n    setmn,\\n    sext,\\n    sfr,\\n    sfrown,\\n    sharp,\\n    shchcy,\\n    shcy,\\n    shortmid,\\n    shortparallel,\\n    shy,\\n    sigma,\\n    sigmaf,\\n    sigmav,\\n    sim,\\n    simdot,\\n    sime,\\n    simeq,\\n    simg,\\n    simgE,\\n    siml,\\n    simlE,\\n    simne,\\n    simplus,\\n    simrarr,\\n    slarr,\\n    smallsetminus,\\n    smashp,\\n    smeparsl,\\n    smid,\\n    smile,\\n    smt,\\n    smte,\\n    smtes,\\n    softcy,\\n    sol,\\n    solb,\\n    solbar,\\n    sopf,\\n    spades,\\n    spadesuit,\\n    spar,\\n    sqcap,\\n    sqcaps,\\n    sqcup,\\n    sqcups,\\n    sqsub,\\n    sqsube,\\n    sqsubset,\\n    sqsubseteq,\\n    sqsup,\\n    sqsupe,\\n    sqsupset,\\n    sqsupseteq,\\n    squ,\\n    square,\\n    squarf,\\n    squf,\\n    srarr,\\n    sscr,\\n    ssetmn,\\n    ssmile,\\n    sstarf,\\n    star,\\n    starf,\\n    straightepsilon,\\n    straightphi,\\n    strns,\\n    sub,\\n    subE,\\n    subdot,\\n    sube,\\n    subedot,\\n    submult,\\n    subnE,\\n    subne,\\n    subplus,\\n    subrarr,\\n    subset,\\n    subseteq,\\n    subseteqq,\\n    subsetneq,\\n    subsetneqq,\\n    subsim,\\n    subsub,\\n    subsup,\\n    succ,\\n    succapprox,\\n    succcurlyeq,\\n    succeq,\\n    succnapprox,\\n    succneqq,\\n    succnsim,\\n    succsim,\\n    sum,\\n    sung,\\n    sup,\\n    sup1,\\n    sup2,\\n    sup3,\\n    supE,\\n    supdot,\\n    supdsub,\\n    supe,\\n    supedot,\\n    suphsol,\\n    suphsub,\\n    suplarr,\\n    supmult,\\n    supnE,\\n    supne,\\n    supplus,\\n    supset,\\n    supseteq,\\n    supseteqq,\\n    supsetneq,\\n    supsetneqq,\\n    supsim,\\n    supsub,\\n    supsup,\\n    swArr,\\n    swarhk,\\n    swarr,\\n    swarrow,\\n    swnwar,\\n    szlig,\\n    target,\\n    tau,\\n    tbrk,\\n    tcaron,\\n    tcedil,\\n    tcy,\\n    tdot,\\n    telrec,\\n    tfr,\\n    there4,\\n    therefore,\\n    theta,\\n    thetasym,\\n    thetav,\\n    thickapprox,\\n    thicksim,\\n    thinsp,\\n    thkap,\\n    thksim,\\n    thorn,\\n    tilde,\\n    times,\\n    timesb,\\n    timesbar,\\n    timesd,\\n    tint,\\n    toea,\\n    top,\\n    topbot,\\n    topcir,\\n    topf,\\n    topfork,\\n    tosa,\\n    tprime,\\n    trade,\\n    triangle,\\n    triangledown,\\n    triangleleft,\\n    trianglelefteq,\\n    triangleq,\\n    triangleright,\\n    trianglerighteq,\\n    tridot,\\n    trie,\\n    triminus,\\n    triplus,\\n    trisb,\\n    tritime,\\n    trpezium,\\n    tscr,\\n    tscy,\\n    tshcy,\\n    tstrok,\\n    twixt,\\n    twoheadleftarrow,\\n    twoheadrightarrow,\\n    uArr,\\n    uHar,\\n    uacute,\\n    uarr,\\n    ubrcy,\\n    ubreve,\\n    ucirc,\\n    ucy,\\n    udarr,\\n    udblac,\\n    udhar,\\n    ufisht,\\n    ufr,\\n    ugrave,\\n    uharl,\\n    uharr,\\n    uhblk,\\n    ulcorn,\\n    ulcorner,\\n    ulcrop,\\n    ultri,\\n    umacr,\\n    uml,\\n    uogon,\\n    uopf,\\n    uparrow,\\n    updownarrow,\\n    upharpoonleft,\\n    upharpoonright,\\n    uplus,\\n    upsi,\\n    upsih,\\n    upsilon,\\n    upuparrows,\\n    urcorn,\\n    urcorner,\\n    urcrop,\\n    uring,\\n    urtri,\\n    uscr,\\n    utdot,\\n    utilde,\\n    utri,\\n    utrif,\\n    uuarr,\\n    uuml,\\n    uwangle,\\n    vArr,\\n    vBar,\\n    vBarv,\\n    vDash,\\n    vangrt,\\n    varepsilon,\\n    varkappa,\\n    varnothing,\\n    varphi,\\n    varpi,\\n    varpropto,\\n    varr,\\n    varrho,\\n    varsigma,\\n    varsubsetneq,\\n    varsubsetneqq,\\n    varsupsetneq,\\n    varsupsetneqq,\\n    vartheta,\\n    vartriangleleft,\\n    vartriangleright,\\n    vcy,\\n    vdash,\\n    vee,\\n    veebar,\\n    veeeq,\\n    vellip,\\n    verbar,\\n    vert,\\n    vfr,\\n    vltri,\\n    vnsub,\\n    vnsup,\\n    vopf,\\n    vprop,\\n    vrtri,\\n    vscr,\\n    vsubnE,\\n    vsubne,\\n    vsupnE,\\n    vsupne,\\n    vzigzag,\\n    wcirc,\\n    wedbar,\\n    wedge,\\n    wedgeq,\\n    weierp,\\n    wfr,\\n    wopf,\\n    wp,\\n    wr,\\n    wreath,\\n    wscr,\\n    xcap,\\n    xcirc,\\n    xcup,\\n    xdtri,\\n    xfr,\\n    xhArr,\\n    xharr,\\n    xi,\\n    xlArr,\\n    xlarr,\\n    xmap,\\n    xnis,\\n    xodot,\\n    xopf,\\n    xoplus,\\n    xotime,\\n    xrArr,\\n    xrarr,\\n    xscr,\\n    xsqcup,\\n    xuplus,\\n    xutri,\\n    xvee,\\n    xwedge,\\n    yacute,\\n    yacy,\\n    ycirc,\\n    ycy,\\n    yen,\\n    yfr,\\n    yicy,\\n    yopf,\\n    yscr,\\n    yucy,\\n    yuml,\\n    zacute,\\n    zcaron,\\n    zcy,\\n    zdot,\\n    zeetrf,\\n    zeta,\\n    zfr,\\n    zhcy,\\n    zigrarr,\\n    zopf,\\n    zscr,\\n    zwj,\\n    zwnj\\n  },\\n  require$$0 = getAugmentedNamespace(entities$2);\\nvar entities = require$$0,\\n  regex$4 =\\n    /[!-#%-\\\\*,-\\\\/:;\\\\?@\\\\[-\\\\]_\\\\{\\\\}\\\\xA1\\\\xA7\\\\xAB\\\\xB6\\\\xB7\\\\xBB\\\\xBF\\\\u037E\\\\u0387\\\\u055A-\\\\u055F\\\\u0589\\\\u058A\\\\u05BE\\\\u05C0\\\\u05C3\\\\u05C6\\\\u05F3\\\\u05F4\\\\u0609\\\\u060A\\\\u060C\\\\u060D\\\\u061B\\\\u061E\\\\u061F\\\\u066A-\\\\u066D\\\\u06D4\\\\u0700-\\\\u070D\\\\u07F7-\\\\u07F9\\\\u0830-\\\\u083E\\\\u085E\\\\u0964\\\\u0965\\\\u0970\\\\u09FD\\\\u0A76\\\\u0AF0\\\\u0C84\\\\u0DF4\\\\u0E4F\\\\u0E5A\\\\u0E5B\\\\u0F04-\\\\u0F12\\\\u0F14\\\\u0F3A-\\\\u0F3D\\\\u0F85\\\\u0FD0-\\\\u0FD4\\\\u0FD9\\\\u0FDA\\\\u104A-\\\\u104F\\\\u10FB\\\\u1360-\\\\u1368\\\\u1400\\\\u166D\\\\u166E\\\\u169B\\\\u169C\\\\u16EB-\\\\u16ED\\\\u1735\\\\u1736\\\\u17D4-\\\\u17D6\\\\u17D8-\\\\u17DA\\\\u1800-\\\\u180A\\\\u1944\\\\u1945\\\\u1A1E\\\\u1A1F\\\\u1AA0-\\\\u1AA6\\\\u1AA8-\\\\u1AAD\\\\u1B5A-\\\\u1B60\\\\u1BFC-\\\\u1BFF\\\\u1C3B-\\\\u1C3F\\\\u1C7E\\\\u1C7F\\\\u1CC0-\\\\u1CC7\\\\u1CD3\\\\u2010-\\\\u2027\\\\u2030-\\\\u2043\\\\u2045-\\\\u2051\\\\u2053-\\\\u205E\\\\u207D\\\\u207E\\\\u208D\\\\u208E\\\\u2308-\\\\u230B\\\\u2329\\\\u232A\\\\u2768-\\\\u2775\\\\u27C5\\\\u27C6\\\\u27E6-\\\\u27EF\\\\u2983-\\\\u2998\\\\u29D8-\\\\u29DB\\\\u29FC\\\\u29FD\\\\u2CF9-\\\\u2CFC\\\\u2CFE\\\\u2CFF\\\\u2D70\\\\u2E00-\\\\u2E2E\\\\u2E30-\\\\u2E4E\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3014-\\\\u301F\\\\u3030\\\\u303D\\\\u30A0\\\\u30FB\\\\uA4FE\\\\uA4FF\\\\uA60D-\\\\uA60F\\\\uA673\\\\uA67E\\\\uA6F2-\\\\uA6F7\\\\uA874-\\\\uA877\\\\uA8CE\\\\uA8CF\\\\uA8F8-\\\\uA8FA\\\\uA8FC\\\\uA92E\\\\uA92F\\\\uA95F\\\\uA9C1-\\\\uA9CD\\\\uA9DE\\\\uA9DF\\\\uAA5C-\\\\uAA5F\\\\uAADE\\\\uAADF\\\\uAAF0\\\\uAAF1\\\\uABEB\\\\uFD3E\\\\uFD3F\\\\uFE10-\\\\uFE19\\\\uFE30-\\\\uFE52\\\\uFE54-\\\\uFE61\\\\uFE63\\\\uFE68\\\\uFE6A\\\\uFE6B\\\\uFF01-\\\\uFF03\\\\uFF05-\\\\uFF0A\\\\uFF0C-\\\\uFF0F\\\\uFF1A\\\\uFF1B\\\\uFF1F\\\\uFF20\\\\uFF3B-\\\\uFF3D\\\\uFF3F\\\\uFF5B\\\\uFF5D\\\\uFF5F-\\\\uFF65]|\\\\uD800[\\\\uDD00-\\\\uDD02\\\\uDF9F\\\\uDFD0]|\\\\uD801\\\\uDD6F|\\\\uD802[\\\\uDC57\\\\uDD1F\\\\uDD3F\\\\uDE50-\\\\uDE58\\\\uDE7F\\\\uDEF0-\\\\uDEF6\\\\uDF39-\\\\uDF3F\\\\uDF99-\\\\uDF9C]|\\\\uD803[\\\\uDF55-\\\\uDF59]|\\\\uD804[\\\\uDC47-\\\\uDC4D\\\\uDCBB\\\\uDCBC\\\\uDCBE-\\\\uDCC1\\\\uDD40-\\\\uDD43\\\\uDD74\\\\uDD75\\\\uDDC5-\\\\uDDC8\\\\uDDCD\\\\uDDDB\\\\uDDDD-\\\\uDDDF\\\\uDE38-\\\\uDE3D\\\\uDEA9]|\\\\uD805[\\\\uDC4B-\\\\uDC4F\\\\uDC5B\\\\uDC5D\\\\uDCC6\\\\uDDC1-\\\\uDDD7\\\\uDE41-\\\\uDE43\\\\uDE60-\\\\uDE6C\\\\uDF3C-\\\\uDF3E]|\\\\uD806[\\\\uDC3B\\\\uDE3F-\\\\uDE46\\\\uDE9A-\\\\uDE9C\\\\uDE9E-\\\\uDEA2]|\\\\uD807[\\\\uDC41-\\\\uDC45\\\\uDC70\\\\uDC71\\\\uDEF7\\\\uDEF8]|\\\\uD809[\\\\uDC70-\\\\uDC74]|\\\\uD81A[\\\\uDE6E\\\\uDE6F\\\\uDEF5\\\\uDF37-\\\\uDF3B\\\\uDF44]|\\\\uD81B[\\\\uDE97-\\\\uDE9A]|\\\\uD82F\\\\uDC9F|\\\\uD836[\\\\uDE87-\\\\uDE8B]|\\\\uD83A[\\\\uDD5E\\\\uDD5F]/,\\n  mdurl = {},\\n  encode_1,\\n  hasRequiredEncode;\\nfunction requireEncode() {\\n  if (hasRequiredEncode) return encode_1;\\n  hasRequiredEncode = 1;\\n  var i = {};\\n  function q(a) {\\n    var s,\\n      n,\\n      o = i[a];\\n    if (o) return o;\\n    for (o = i[a] = [], s = 0; s < 128; s++)\\n      (n = String.fromCharCode(s)),\\n        /^[0-9a-z]$/i.test(n)\\n          ? o.push(n)\\n          : o.push('%' + ('0' + s.toString(16).toUpperCase()).slice(-2));\\n    for (s = 0; s < a.length; s++) o[a.charCodeAt(s)] = a[s];\\n    return o;\\n  }\\n  function p(a, s, n) {\\n    var o,\\n      u,\\n      m,\\n      y,\\n      e,\\n      S = '';\\n    for (\\n      typeof s != 'string' && ((n = s), (s = p.defaultChars)),\\n        typeof n > 'u' && (n = !0),\\n        e = q(s),\\n        o = 0,\\n        u = a.length;\\n      o < u;\\n      o++\\n    ) {\\n      if (\\n        ((m = a.charCodeAt(o)),\\n        n &&\\n          m === 37 &&\\n          o + 2 < u &&\\n          /^[0-9a-f]{2}$/i.test(a.slice(o + 1, o + 3)))\\n      ) {\\n        (S += a.slice(o, o + 3)), (o += 2);\\n        continue;\\n      }\\n      if (m < 128) {\\n        S += e[m];\\n        continue;\\n      }\\n      if (m >= 55296 && m <= 57343) {\\n        if (\\n          m >= 55296 &&\\n          m <= 56319 &&\\n          o + 1 < u &&\\n          ((y = a.charCodeAt(o + 1)), y >= 56320 && y <= 57343)\\n        ) {\\n          (S += encodeURIComponent(a[o] + a[o + 1])), o++;\\n          continue;\\n        }\\n        S += '%EF%BF%BD';\\n        continue;\\n      }\\n      S += encodeURIComponent(a[o]);\\n    }\\n    return S;\\n  }\\n  return (\\n    (p.defaultChars = \\\";/?:@&=+$,-_.!~*'()#\\\"),\\n    (p.componentChars = \\\"-_.!~*'()\\\"),\\n    (encode_1 = p),\\n    encode_1\\n  );\\n}\\nvar decode_1, hasRequiredDecode;\\nfunction requireDecode() {\\n  if (hasRequiredDecode) return decode_1;\\n  hasRequiredDecode = 1;\\n  var i = {};\\n  function q(a) {\\n    var s,\\n      n,\\n      o = i[a];\\n    if (o) return o;\\n    for (o = i[a] = [], s = 0; s < 128; s++)\\n      (n = String.fromCharCode(s)), o.push(n);\\n    for (s = 0; s < a.length; s++)\\n      (n = a.charCodeAt(s)),\\n        (o[n] = '%' + ('0' + n.toString(16).toUpperCase()).slice(-2));\\n    return o;\\n  }\\n  function p(a, s) {\\n    var n;\\n    return (\\n      typeof s != 'string' && (s = p.defaultChars),\\n      (n = q(s)),\\n      a.replace(/(%[a-f0-9]{2})+/gi, function (o) {\\n        var u,\\n          m,\\n          y,\\n          e,\\n          S,\\n          O,\\n          x,\\n          C = '';\\n        for (u = 0, m = o.length; u < m; u += 3) {\\n          if (((y = parseInt(o.slice(u + 1, u + 3), 16)), y < 128)) {\\n            C += n[y];\\n            continue;\\n          }\\n          if (\\n            (y & 224) === 192 &&\\n            u + 3 < m &&\\n            ((e = parseInt(o.slice(u + 4, u + 6), 16)), (e & 192) === 128)\\n          ) {\\n            (x = ((y << 6) & 1984) | (e & 63)),\\n              x < 128 ? (C += '\\\\uFFFD\\\\uFFFD') : (C += String.fromCharCode(x)),\\n              (u += 3);\\n            continue;\\n          }\\n          if (\\n            (y & 240) === 224 &&\\n            u + 6 < m &&\\n            ((e = parseInt(o.slice(u + 4, u + 6), 16)),\\n            (S = parseInt(o.slice(u + 7, u + 9), 16)),\\n            (e & 192) === 128 && (S & 192) === 128)\\n          ) {\\n            (x = ((y << 12) & 61440) | ((e << 6) & 4032) | (S & 63)),\\n              x < 2048 || (x >= 55296 && x <= 57343)\\n                ? (C += '\\\\uFFFD\\\\uFFFD\\\\uFFFD')\\n                : (C += String.fromCharCode(x)),\\n              (u += 6);\\n            continue;\\n          }\\n          if (\\n            (y & 248) === 240 &&\\n            u + 9 < m &&\\n            ((e = parseInt(o.slice(u + 4, u + 6), 16)),\\n            (S = parseInt(o.slice(u + 7, u + 9), 16)),\\n            (O = parseInt(o.slice(u + 10, u + 12), 16)),\\n            (e & 192) === 128 && (S & 192) === 128 && (O & 192) === 128)\\n          ) {\\n            (x =\\n              ((y << 18) & 1835008) |\\n              ((e << 12) & 258048) |\\n              ((S << 6) & 4032) |\\n              (O & 63)),\\n              x < 65536 || x > 1114111\\n                ? (C += '\\\\uFFFD\\\\uFFFD\\\\uFFFD\\\\uFFFD')\\n                : ((x -= 65536),\\n                  (C += String.fromCharCode(\\n                    55296 + (x >> 10),\\n                    56320 + (x & 1023)\\n                  ))),\\n              (u += 9);\\n            continue;\\n          }\\n          C += '\\\\uFFFD';\\n        }\\n        return C;\\n      })\\n    );\\n  }\\n  return (\\n    (p.defaultChars = ';/?:@&=+$,#'),\\n    (p.componentChars = ''),\\n    (decode_1 = p),\\n    decode_1\\n  );\\n}\\nvar format, hasRequiredFormat;\\nfunction requireFormat() {\\n  return (\\n    hasRequiredFormat ||\\n      ((hasRequiredFormat = 1),\\n      (format = function (q) {\\n        var p = '';\\n        return (\\n          (p += q.protocol || ''),\\n          (p += q.slashes ? '//' : ''),\\n          (p += q.auth ? q.auth + '@' : ''),\\n          q.hostname && q.hostname.indexOf(':') !== -1\\n            ? (p += '[' + q.hostname + ']')\\n            : (p += q.hostname || ''),\\n          (p += q.port ? ':' + q.port : ''),\\n          (p += q.pathname || ''),\\n          (p += q.search || ''),\\n          (p += q.hash || ''),\\n          p\\n        );\\n      })),\\n    format\\n  );\\n}\\nvar parse, hasRequiredParse;\\nfunction requireParse() {\\n  if (hasRequiredParse) return parse;\\n  hasRequiredParse = 1;\\n  function i() {\\n    (this.protocol = null),\\n      (this.slashes = null),\\n      (this.auth = null),\\n      (this.port = null),\\n      (this.hostname = null),\\n      (this.hash = null),\\n      (this.search = null),\\n      (this.pathname = null);\\n  }\\n  var q = /^([a-z0-9.+-]+:)/i,\\n    p = /:[0-9]*$/,\\n    a = /^(\\\\/\\\\/?(?!\\\\/)[^\\\\?\\\\s]*)(\\\\?[^\\\\s]*)?$/,\\n    s = [\\n      '<',\\n      '>',\\n      '\\\"',\\n      '`',\\n      ' ',\\n      '\\\\r',\\n      `\\n`,\\n      '\\t'\\n    ],\\n    n = ['{', '}', '|', '\\\\\\\\', '^', '`'].concat(s),\\n    o = [\\\"'\\\"].concat(n),\\n    u = ['%', '/', '?', ';', '#'].concat(o),\\n    m = ['/', '?', '#'],\\n    y = 255,\\n    e = /^[+a-z0-9A-Z_-]{0,63}$/,\\n    S = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\\n    O = { javascript: !0, 'javascript:': !0 },\\n    x = {\\n      http: !0,\\n      https: !0,\\n      ftp: !0,\\n      gopher: !0,\\n      file: !0,\\n      'http:': !0,\\n      'https:': !0,\\n      'ftp:': !0,\\n      'gopher:': !0,\\n      'file:': !0\\n    };\\n  function C(v, g) {\\n    if (v && v instanceof i) return v;\\n    var h = new i();\\n    return h.parse(v, g), h;\\n  }\\n  return (\\n    (i.prototype.parse = function (v, g) {\\n      var h,\\n        T,\\n        z,\\n        c,\\n        l,\\n        r = v;\\n      if (((r = r.trim()), !g && v.split('#').length === 1)) {\\n        var d = a.exec(r);\\n        if (d)\\n          return (this.pathname = d[1]), d[2] && (this.search = d[2]), this;\\n      }\\n      var w = q.exec(r);\\n      if (\\n        (w &&\\n          ((w = w[0]),\\n          (z = w.toLowerCase()),\\n          (this.protocol = w),\\n          (r = r.substr(w.length))),\\n        (g || w || r.match(/^\\\\/\\\\/[^@\\\\/]+@[^@\\\\/]+/)) &&\\n          ((l = r.substr(0, 2) === '//'),\\n          l && !(w && O[w]) && ((r = r.substr(2)), (this.slashes = !0))),\\n        !O[w] && (l || (w && !x[w])))\\n      ) {\\n        var E = -1;\\n        for (h = 0; h < m.length; h++)\\n          (c = r.indexOf(m[h])), c !== -1 && (E === -1 || c < E) && (E = c);\\n        var R, N;\\n        for (\\n          E === -1 ? (N = r.lastIndexOf('@')) : (N = r.lastIndexOf('@', E)),\\n            N !== -1 &&\\n              ((R = r.slice(0, N)), (r = r.slice(N + 1)), (this.auth = R)),\\n            E = -1,\\n            h = 0;\\n          h < u.length;\\n          h++\\n        )\\n          (c = r.indexOf(u[h])), c !== -1 && (E === -1 || c < E) && (E = c);\\n        E === -1 && (E = r.length), r[E - 1] === ':' && E--;\\n        var V = r.slice(0, E);\\n        (r = r.slice(E)),\\n          this.parseHost(V),\\n          (this.hostname = this.hostname || '');\\n        var I =\\n          this.hostname[0] === '[' &&\\n          this.hostname[this.hostname.length - 1] === ']';\\n        if (!I) {\\n          var t = this.hostname.split(/\\\\./);\\n          for (h = 0, T = t.length; h < T; h++) {\\n            var f = t[h];\\n            if (f && !f.match(e)) {\\n              for (var D = '', L = 0, P = f.length; L < P; L++)\\n                f.charCodeAt(L) > 127 ? (D += 'x') : (D += f[L]);\\n              if (!D.match(e)) {\\n                var B = t.slice(0, h),\\n                  A = t.slice(h + 1),\\n                  k = f.match(S);\\n                k && (B.push(k[1]), A.unshift(k[2])),\\n                  A.length && (r = A.join('.') + r),\\n                  (this.hostname = B.join('.'));\\n                break;\\n              }\\n            }\\n          }\\n        }\\n        this.hostname.length > y && (this.hostname = ''),\\n          I &&\\n            (this.hostname = this.hostname.substr(1, this.hostname.length - 2));\\n      }\\n      var F = r.indexOf('#');\\n      F !== -1 && ((this.hash = r.substr(F)), (r = r.slice(0, F)));\\n      var $ = r.indexOf('?');\\n      return (\\n        $ !== -1 && ((this.search = r.substr($)), (r = r.slice(0, $))),\\n        r && (this.pathname = r),\\n        x[z] && this.hostname && !this.pathname && (this.pathname = ''),\\n        this\\n      );\\n    }),\\n    (i.prototype.parseHost = function (v) {\\n      var g = p.exec(v);\\n      g &&\\n        ((g = g[0]),\\n        g !== ':' && (this.port = g.substr(1)),\\n        (v = v.substr(0, v.length - g.length))),\\n        v && (this.hostname = v);\\n    }),\\n    (parse = C),\\n    parse\\n  );\\n}\\nvar hasRequiredMdurl;\\nfunction requireMdurl() {\\n  return (\\n    hasRequiredMdurl ||\\n      ((hasRequiredMdurl = 1),\\n      (mdurl.encode = requireEncode()),\\n      (mdurl.decode = requireDecode()),\\n      (mdurl.format = requireFormat()),\\n      (mdurl.parse = requireParse())),\\n    mdurl\\n  );\\n}\\nvar uc_micro = {},\\n  regex$3,\\n  hasRequiredRegex$3;\\nfunction requireRegex$3() {\\n  return (\\n    hasRequiredRegex$3 ||\\n      ((hasRequiredRegex$3 = 1),\\n      (regex$3 =\\n        /[\\\\0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]/)),\\n    regex$3\\n  );\\n}\\nvar regex$2, hasRequiredRegex$2;\\nfunction requireRegex$2() {\\n  return (\\n    hasRequiredRegex$2 ||\\n      ((hasRequiredRegex$2 = 1), (regex$2 = /[\\\\0-\\\\x1F\\\\x7F-\\\\x9F]/)),\\n    regex$2\\n  );\\n}\\nvar regex$1, hasRequiredRegex$1;\\nfunction requireRegex$1() {\\n  return (\\n    hasRequiredRegex$1 ||\\n      ((hasRequiredRegex$1 = 1),\\n      (regex$1 =\\n        /[\\\\xAD\\\\u0600-\\\\u0605\\\\u061C\\\\u06DD\\\\u070F\\\\u08E2\\\\u180E\\\\u200B-\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u2066-\\\\u206F\\\\uFEFF\\\\uFFF9-\\\\uFFFB]|\\\\uD804[\\\\uDCBD\\\\uDCCD]|\\\\uD82F[\\\\uDCA0-\\\\uDCA3]|\\\\uD834[\\\\uDD73-\\\\uDD7A]|\\\\uDB40[\\\\uDC01\\\\uDC20-\\\\uDC7F]/)),\\n    regex$1\\n  );\\n}\\nvar regex, hasRequiredRegex;\\nfunction requireRegex() {\\n  return (\\n    hasRequiredRegex ||\\n      ((hasRequiredRegex = 1),\\n      (regex = /[ \\\\xA0\\\\u1680\\\\u2000-\\\\u200A\\\\u2028\\\\u2029\\\\u202F\\\\u205F\\\\u3000]/)),\\n    regex\\n  );\\n}\\nvar hasRequiredUc_micro;\\nfunction requireUc_micro() {\\n  return (\\n    hasRequiredUc_micro ||\\n      ((hasRequiredUc_micro = 1),\\n      (uc_micro.Any = requireRegex$3()),\\n      (uc_micro.Cc = requireRegex$2()),\\n      (uc_micro.Cf = requireRegex$1()),\\n      (uc_micro.P = regex$4),\\n      (uc_micro.Z = requireRegex())),\\n    uc_micro\\n  );\\n}\\n(function (i) {\\n  function q(t) {\\n    return Object.prototype.toString.call(t);\\n  }\\n  function p(t) {\\n    return q(t) === '[object String]';\\n  }\\n  var a = Object.prototype.hasOwnProperty;\\n  function s(t, f) {\\n    return a.call(t, f);\\n  }\\n  function n(t) {\\n    var f = Array.prototype.slice.call(arguments, 1);\\n    return (\\n      f.forEach(function (D) {\\n        if (D) {\\n          if (typeof D != 'object') throw new TypeError(D + 'must be object');\\n          Object.keys(D).forEach(function (L) {\\n            t[L] = D[L];\\n          });\\n        }\\n      }),\\n      t\\n    );\\n  }\\n  function o(t, f, D) {\\n    return [].concat(t.slice(0, f), D, t.slice(f + 1));\\n  }\\n  function u(t) {\\n    return !(\\n      (t >= 55296 && t <= 57343) ||\\n      (t >= 64976 && t <= 65007) ||\\n      (t & 65535) === 65535 ||\\n      (t & 65535) === 65534 ||\\n      (t >= 0 && t <= 8) ||\\n      t === 11 ||\\n      (t >= 14 && t <= 31) ||\\n      (t >= 127 && t <= 159) ||\\n      t > 1114111\\n    );\\n  }\\n  function m(t) {\\n    if (t > 65535) {\\n      t -= 65536;\\n      var f = 55296 + (t >> 10),\\n        D = 56320 + (t & 1023);\\n      return String.fromCharCode(f, D);\\n    }\\n    return String.fromCharCode(t);\\n  }\\n  var y = /\\\\\\\\([!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@[\\\\\\\\\\\\]^_`{|}~])/g,\\n    e = /&([a-z#][a-z0-9]{1,31});/gi,\\n    S = new RegExp(y.source + '|' + e.source, 'gi'),\\n    O = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i,\\n    x = entities;\\n  function C(t, f) {\\n    var D = 0;\\n    return s(x, f)\\n      ? x[f]\\n      : f.charCodeAt(0) === 35 &&\\n          O.test(f) &&\\n          ((D =\\n            f[1].toLowerCase() === 'x'\\n              ? parseInt(f.slice(2), 16)\\n              : parseInt(f.slice(1), 10)),\\n          u(D))\\n        ? m(D)\\n        : t;\\n  }\\n  function v(t) {\\n    return t.indexOf('\\\\\\\\') < 0 ? t : t.replace(y, '$1');\\n  }\\n  function g(t) {\\n    return t.indexOf('\\\\\\\\') < 0 && t.indexOf('&') < 0\\n      ? t\\n      : t.replace(S, function (f, D, L) {\\n          return D || C(f, L);\\n        });\\n  }\\n  var h = /[&<>\\\"]/,\\n    T = /[&<>\\\"]/g,\\n    z = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\\\"': '&quot;' };\\n  function c(t) {\\n    return z[t];\\n  }\\n  function l(t) {\\n    return h.test(t) ? t.replace(T, c) : t;\\n  }\\n  var r = /[.?*+^$[\\\\]\\\\\\\\(){}|-]/g;\\n  function d(t) {\\n    return t.replace(r, '\\\\\\\\$&');\\n  }\\n  function w(t) {\\n    switch (t) {\\n      case 9:\\n      case 32:\\n        return !0;\\n    }\\n    return !1;\\n  }\\n  function E(t) {\\n    if (t >= 8192 && t <= 8202) return !0;\\n    switch (t) {\\n      case 9:\\n      case 10:\\n      case 11:\\n      case 12:\\n      case 13:\\n      case 32:\\n      case 160:\\n      case 5760:\\n      case 8239:\\n      case 8287:\\n      case 12288:\\n        return !0;\\n    }\\n    return !1;\\n  }\\n  var R = regex$4;\\n  function N(t) {\\n    return R.test(t);\\n  }\\n  function V(t) {\\n    switch (t) {\\n      case 33:\\n      case 34:\\n      case 35:\\n      case 36:\\n      case 37:\\n      case 38:\\n      case 39:\\n      case 40:\\n      case 41:\\n      case 42:\\n      case 43:\\n      case 44:\\n      case 45:\\n      case 46:\\n      case 47:\\n      case 58:\\n      case 59:\\n      case 60:\\n      case 61:\\n      case 62:\\n      case 63:\\n      case 64:\\n      case 91:\\n      case 92:\\n      case 93:\\n      case 94:\\n      case 95:\\n      case 96:\\n      case 123:\\n      case 124:\\n      case 125:\\n      case 126:\\n        return !0;\\n      default:\\n        return !1;\\n    }\\n  }\\n  function I(t) {\\n    return t.trim().replace(/\\\\s+/g, ' ').toUpperCase();\\n  }\\n  (i.lib = {}),\\n    (i.lib.mdurl = requireMdurl()),\\n    (i.lib.ucmicro = requireUc_micro()),\\n    (i.assign = n),\\n    (i.isString = p),\\n    (i.has = s),\\n    (i.unescapeMd = v),\\n    (i.unescapeAll = g),\\n    (i.isValidEntityCode = u),\\n    (i.fromCodePoint = m),\\n    (i.escapeHtml = l),\\n    (i.arrayReplaceAt = o),\\n    (i.isSpace = w),\\n    (i.isWhiteSpace = E),\\n    (i.isMdAsciiPunct = V),\\n    (i.isPunctChar = N),\\n    (i.escapeRE = d),\\n    (i.normalizeReference = I);\\n})(utils);\\nconst pangu = pangu_minExports,\\n  { escapeHtml, isWhiteSpace } = utils;\\nfunction getPrevChar(i, q) {\\n  let p = '';\\n  for (let a = q - 1; a >= 0; a -= 1) {\\n    const { content: s, type: n } = i[a];\\n    if (n === 'html_inline') break;\\n    if (s && s.length) {\\n      p = s.slice(-1);\\n      break;\\n    }\\n  }\\n  return p;\\n}\\nvar src = (i, q = {}) => {\\n  const { additionalRules: p = ['code_inline'] } = q;\\n  (i.renderer.rules.text = (a, s, n, o, u) => {\\n    const m = getPrevChar(a, s);\\n    return escapeHtml(pangu.spacing(m + a[s].content).slice(m.length));\\n  }),\\n    p.forEach((a) => {\\n      const s = i.renderer.rules[a];\\n      s &&\\n        (i.renderer.rules[a] = (n, o, u, m, y) => {\\n          let e = s(n, o, u, m, y);\\n          return (\\n            e.length &&\\n              (o > 0 && !isWhiteSpace(e.charAt(0)) && (e = ' ' + e),\\n              o < n.length - 1 &&\\n                !isWhiteSpace(e.charAt(e.length - 1)) &&\\n                (e += ' ')),\\n            e\\n          );\\n        });\\n    });\\n};\\nconst index = getDefaultExportFromCjs(src);\\nmodule.exports = index;\\n\",\"type\":\"application/javascript\",\"module-type\":\"markdownit\"}}}"}