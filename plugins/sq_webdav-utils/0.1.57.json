{"title":"$:/plugins/sq/webdav-utils","name":"WebDAV Utilities for a wiki farm","description":"Saver, FileUploader & FileExplorer","author":"Saq Imtiaz","core-version":">=5.3.0","list":"readme settings","version":"0.1.57","dependents":"$:/plugins/commons/file-uploads","plugin-type":"plugin","type":"application/json","text":"{\"tiddlers\":{\"$:/config/webdav/backupPath\":{\"title\":\"$:/config/webdav/backupPath\",\"text\":\"backups/<<filebasename>>_backups/<<filebasename>>-<<now YYYY0MM0DD0hh0mm0ssXXX>>.html\"},\"$:/config/file-uploads/webdav/defaultUploadDirectory\":{\"title\":\"$:/config/file-uploads/webdav/defaultUploadDirectory\",\"description\":\"Default upload directory relative to server root.\",\"text\":\"files/\"},\"$:/config/webdav/enableBackups\":{\"title\":\"$:/config/webdav/enableBackups\",\"description\":\"Enable backups\",\"caption\":\"Enable backups\",\"text\":\"yes\"},\"$:/config/file-uploads/webdav/generateUniqueURIs\":{\"title\":\"$:/config/file-uploads/webdav/generateUniqueURIs\",\"description\":\"Generate a unique canonical_uri for each tiddler\",\"caption\":\"Generate a unique canonical_uri for each tiddler\",\"text\":\"yes\"},\"$:/config/sq/webdav/new-wiki/selected-edition\":{\"title\":\"$:/config/sq/webdav/new-wiki/selected-edition\",\"text\":\"$:/editions/tiddlywiki\"},\"$:/config/sq/webdav/new-wiki/selected-plugins\":{\"title\":\"$:/config/sq/webdav/new-wiki/selected-plugins\",\"type\":\"application/json\",\"text\":\"{\\n    \\\"$:/plugins/commons/file-uploads\\\": \\\"yes\\\",\\n    \\\"$:/plugins/sq/webdav-utils\\\": \\\"yes\\\"\\n}\"},\"$:/config/sq/webdav/new-wiki/tiddlers-filter/default-WebDAV-configuration\":{\"title\":\"$:/config/sq/webdav/new-wiki/tiddlers-filter/default-WebDAV-configuration\",\"text\":\"$:/config/fileUploader\\n$:/config/AutoSave\"},\"$:/config/sq/webdav/new-wiki/selected-tiddlers-option\":{\"title\":\"$:/config/sq/webdav/new-wiki/selected-tiddlers-option\",\"text\":\"default-WebDAV-configuration\"},\"$:/config/file-uploads/webdav/uploadPathFilters\":{\"title\":\"$:/config/file-uploads/webdav/uploadPathFilters\",\"text\":\"\\\\\\\\ in all images, replace forward and back slashes and place it in the images directory inside the default upload directory\\n[is[image]search-replace:g:regexp[/|\\\\\\\\],[_]addprefix[images/]addprefix{$:/config/file-uploads/webdav/defaultUploadDirectory}]\\n\\\\\\\\ last filter matches all remaining tiddlers. replace forward and back slashes and place it inside the default upload directory\\n[search-replace:g:regexp[/|\\\\\\\\],[_]addprefix{$:/config/file-uploads/webdav/defaultUploadDirectory}]\"},\"$:/editions/tiddlywiki-prerelease\":{\"title\":\"$:/editions/tiddlywiki-prerelease\",\"tags\":\"$:/tags/Edition\",\"url\":\"https://tiddlywiki.com/prerelease/empty.html\",\"text\":\"TiddlyWiki pre-release\"},\"$:/editions/tiddlywiki\":{\"title\":\"$:/editions/tiddlywiki\",\"tags\":\"$:/tags/Edition\",\"url\":\"https://tiddlywiki.com/empty.html\",\"text\":\"TiddlyWiki latest stable version\"},\"$:/plugins/sq/webdav-utils/icon\":{\"title\":\"$:/plugins/sq/webdav-utils/icon\",\"text\":\"<svg viewBox=\\\"139.775 60.038 144.347 86.304\\\" width=\\\"32pt\\\" height=\\\"32pt\\\">\\n  <path d=\\\"M 159.925 92.411 L 159.925 128.518 L 144.859 128.518 L 144.859 77.864 L 164.49 77.864 Q 177.404 77.864 184.714 83.727 Q 193.398 90.741 193.398 102.764 Q 193.398 114.268 185.976 121.541 Q 178.554 128.815 166.865 128.815 Q 165.492 128.815 162.375 128.666 L 162.375 113.786 L 164.787 113.786 Q 177.961 113.786 177.961 102.764 Q 177.961 92.411 165.009 92.411 Z M 219.842 103.098 L 219.842 116.457 L 215.5 116.457 L 215.5 128.518 L 200.434 128.518 L 200.434 96.307 Q 200.434 86.956 205.537 81.779 Q 210.639 76.602 219.879 76.602 Q 228.786 76.602 233.053 81.296 Q 237.321 85.991 237.321 95.788 L 237.321 128.518 L 222.254 128.518 L 222.254 96.79 Q 222.254 93.821 221.549 92.67 Q 220.844 91.52 219.026 91.52 Q 215.5 91.52 215.5 96.79 L 215.5 103.098 Z M 283.85 77.864 L 261.77 131.413 L 239.838 77.864 L 257.28 77.864 L 261.918 93.672 L 267.039 77.864 Z\\\" style=\\\"fill: rgb(51, 51, 51); white-space: pre;\\\"/>\\n</svg>\"},\"$:/plugins/sq/webdav-utils/images/file-explorer\":{\"title\":\"$:/plugins/sq/webdav-utils/images/file-explorer\",\"text\":\"<svg viewBox=\\\"274 310.523 22 22\\\" width=\\\"22\\\" height=\\\"22\\\">\\n  <path d=\\\"m274.343 311.239-.308.635h8.515l-.314-.635h-3.789c-.127.001-.229-.093-.229-.208v-.508h-3.24v.504c.001.118-.102.213-.231.212h-.404Zm13.088 17.044.557 3.977a.274.274 0 0 0 .262.263h6.766c.157 0 .244-.14.263-.268l.721-3.972h-8.569Zm.344-1.034-.309.639h8.506l-.315-.639h-3.789c-.125 0-.228-.093-.228-.21v-.506h-3.234v.503c0 .117-.102.21-.227.21l-.404.003Zm-.848-6.793.558 3.979c0 .135.114.25.261.262h6.766c.156 0 .243-.14.262-.269l.721-3.972h-8.568Zm.345-1.033-.311.639h8.515l-.313-.639h-3.797c-.127 0-.228-.095-.227-.211v-.501h-3.236v.503c-.001.115-.103.209-.229.209h-.402Zm-8.405 2.315h6.48v1.073h-6.48v7.519h6.417v1.075h-7.575v-14.13h1.158v4.463Zm-4.867-9.47.557 3.983c.002.138.117.251.263.263h6.766c.157 0 .244-.141.262-.267l.727-3.979H274Z\\\" fill-rule=\\\"evenodd\\\" bx:origin=\\\"0 0\\\"/>\\n</svg>\\n\"},\"$:/plugins/sq/webdav-utils/webdav-saver.js\":{\"title\":\"$:/plugins/sq/webdav-utils/webdav-saver.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/webdav-utils/webdav-saver.js\\ntype: application/javascript\\nmodule-type: saver\\n\\nSaves to Webdav and creates a backup\\n\\n\\\\*/\\n(function(){\\n\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nconst createPath = require(\\\"$:/plugins/sq/webdav-utils/createPath.js\\\").createPath;\\n\\n/*\\nRetrieve ETag if available\\n*/\\nvar retrieveETag = function(self) {\\n\\tvar headers = {\\n\\t\\tAccept: \\\"*/*;charset=UTF-8\\\"\\n\\t};\\n\\t$tw.utils.httpRequest({\\n\\t\\turl: self.uri(),\\n\\t\\ttype: \\\"HEAD\\\",\\n\\t\\theaders: headers,\\n\\t\\tcallback: function(err,data,xhr) {\\n\\t\\t\\tif(err) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tvar etag = xhr.getResponseHeader(\\\"ETag\\\");\\n\\t\\t\\tif(!etag) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tself.etag = etag.replace(/^W\\\\//,\\\"\\\");\\n\\t\\t}\\n\\t});\\n};\\n\\n\\n/*\\nSelect the appropriate saver module and set it up\\n*/\\nvar WebDAVSaver = function(wiki) {\\n\\tthis.wiki = wiki;\\n\\tvar self = this;\\n\\tvar uri = this.uri();\\n\\t// Async server probe. Until probe finishes, save will fail fast\\n\\t// See also https://github.com/Jermolene/TiddlyWiki5/issues/2276\\n\\t$tw.utils.httpRequest({\\n\\t\\turl: uri,\\n\\t\\ttype: \\\"OPTIONS\\\",\\n\\t\\tcallback: function(err,data,xhr) {\\n\\t\\t\\t// Check DAV header http://www.webdav.org/specs/rfc2518.html#rfc.section.9.1\\n\\t\\t\\tif(!err) {\\n\\t\\t\\t\\tself.serverAcceptsPuts = xhr.status === 200 && !!xhr.getResponseHeader(\\\"dav\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\tretrieveETag(this);\\n};\\n\\nWebDAVSaver.prototype.uri = function() {\\n\\tvar uri = document.location.toString().split(\\\"#\\\")[0];\\n\\t// if the uri does not end in a filename\\n\\tif(uri.split(\\\"/\\\").pop().indexOf(\\\".\\\") === -1) {\\n\\t\\t//add a trailing slash if needed and a filename\\n\\t\\turi = `${uri}${(/\\\\/$/.test(uri)) ? \\\"\\\" : \\\"/\\\"}index.html`;\\n\\t}\\n\\treturn uri;\\n};\\n\\n\\n\\n/*\\nbackupConfig tiddler:\\n\\n\\\\define filename() abc.html\\n\\n\\\\backups\\\\<<filename>>_backups\\\\<<filename>>-<<now YYYY0MM0DD0hh0mm0ssXXX>>.html\\n\\n*/\\nfunction getBackupPath(filename,configTiddler) {\\n\\tvar wikifyParser = $tw.wiki.parseText(\\\"text/vnd.tiddlywiki\\\",$tw.wiki.getTiddlerText(configTiddler,\\\"\\\"),{\\n\\t\\t\\tparseAsInline: true\\n\\t\\t});\\n\\t// Create the widget tree \\n\\tvar wikifyWidgetNode = $tw.wiki.makeWidget(wikifyParser,{\\n\\t\\t\\tdocument: $tw.fakeDocument,\\n\\t\\t\\tparentWidget: $tw.rootWidget,\\n\\t\\t\\tvariables: {\\n\\t\\t\\t\\t\\\"filename\\\": filename,\\n\\t\\t\\t\\t\\\"filebasename\\\": filename.substr(0,filename.lastIndexOf('.'))\\n\\t\\t\\t}\\n\\t\\t});\\n\\t// Render the widget tree to the container\\n\\tvar wikifyContainer = $tw.fakeDocument.createElement(\\\"div\\\");\\n\\twikifyWidgetNode.render(wikifyContainer,null);\\n\\tvar wikifyResult = wikifyContainer.textContent;\\n\\treturn wikifyResult;\\n};\\n\\n\\nWebDAVSaver.prototype.saveBackup = async function(pathInfo) {\\n\\t//check if the backup directory exists, if not then create it\\n\\ttry {\\n//\\t\\tawait createPath(pathInfo.backupFileDirectory);\\n\\t\\tawait createPath(`${new URL(pathInfo.backupFileDirectory,pathInfo.serverURI)}`)\\n\\t} catch(err) {\\n\\t\\tconst errorMessage = `Error creating or confirming that backup directory exists: ${pathInfo.backupFileDirectory}. Details: ${err.message}`;\\n\\t\\tthis.logger.log(errorMessage);\\n\\t\\tthrow new Error(errorMessage);\\n\\t\\t//return;\\n\\t}\\n\\n\\t//create the backup file\\n\\tconst backupResponse = await fetch(this.uri(),{\\n\\t\\tmethod: \\\"COPY\\\",\\n\\t\\theaders: {\\n\\t\\t\\t'Destination': `${new URL(pathInfo.backupFilePath,pathInfo.serverURI)}`\\n\\t\\t}\\n\\t})\\n\\tif(!backupResponse.ok) {\\n\\t\\tconst message = `Error saving backup ${backupResponse.status}`;\\n\\t\\tthis.logger.log(message, backupResponse);\\n\\t\\tthrow new Error(message);\\n\\t\\t//return;\\n\\t}\\n\\tthis.logger.log(`Backup saved: ${pathInfo.backupFilePath}`);\\n};\\n\\n// TODO: in case of edit conflict\\n// Prompt: Do you want to save over this? Y/N\\n// Merging would be ideal, and may be possible using future generic merge flow\\nWebDAVSaver.prototype.save = async function(text,method,callback) {\\n\\tif(!this.serverAcceptsPuts) {\\n\\t\\treturn false;\\n\\t}\\n\\tif(!this.logger) {\\n\\t\\tthis.logger = new $tw.utils.Logger(\\\"WebDAVSaver\\\");\\n\\t}\\n\\tvar self = this,\\n\\t\\theaders = {\\n\\t\\t\\t\\\"Content-Type\\\": \\\"text/html;charset=UTF-8\\\"\\n\\t\\t},\\n\\t\\tpathInfo = Object.create(null);\\n\\tif(this.etag) {\\n\\t\\theaders[\\\"If-Match\\\"] = this.etag;\\n\\t}\\n\\tconst doBackup = $tw.wiki.getTiddlerText(\\\"$:/config/webdav/enableBackups\\\",\\\"yes\\\") === \\\"yes\\\";\\n\\tif(doBackup) {\\n\\t\\t// TODO? replace all \\\\ with /\\n\\t\\tpathInfo.filename = this.uri().split(\\\"/\\\").pop() || \\\"index.html\\\";\\n\\t\\tpathInfo.basename = pathInfo.filename.substr(0,pathInfo.filename.lastIndexOf('.'));\\n\\t\\tpathInfo.serverURI = this.uri().replace(/\\\\/[^\\\\/]+?\\\\.[^\\\\/]+?$/, '/');\\n\\t\\tpathInfo.backupFilePath = getBackupPath(pathInfo.filename,\\\"$:/config/webdav/backupPath\\\");\\n\\t\\tpathInfo.backupFileDirectory = pathInfo.backupFilePath.substring(0,pathInfo.backupFilePath.lastIndexOf(\\\"/\\\"));\\n\\t\\t\\n\\t\\t//save backup\\n\\t\\ttry {\\n\\t\\t\\tawait this.saveBackup(pathInfo);\\n\\t\\t} catch(err) {\\n\\t\\t\\tthis.logger.alert(`<p><strong>Error: Could not save backup to ${pathInfo.backupFilePath}.</strong></p><p>${err.message}</p>`);\\n\\t\\t}\\t\\t\\n\\t}\\n\\n\\t$tw.notifier.display(\\\"$:/language/Notifications/Save/Starting\\\");\\n\\n\\t//save the wiki, we save even if the backup failed\\n\\t$tw.utils.httpRequest({\\n\\t\\turl: this.uri(),\\n\\t\\ttype: \\\"PUT\\\",\\n\\t\\theaders: headers,\\n\\t\\tdata: text,\\n\\t\\tcallback: function(err,data,xhr) {\\n\\t\\t\\tif(err) {\\n\\t\\t\\t\\tvar status = xhr.status,\\n\\t\\t\\t\\t\\terrorMsg = err;\\n\\t\\t\\t\\tif(status === 412) { // file changed on server\\n\\t\\t\\t\\t\\terrorMsg = $tw.language.getString(\\\"Error/PutEditConflict\\\");\\n\\t\\t\\t\\t} else if(status === 401) { // authentication required\\n\\t\\t\\t\\t\\terrorMsg = $tw.language.getString(\\\"Error/PutUnauthorized\\\");\\n\\t\\t\\t\\t} else if(status === 403) { // permission denied\\n\\t\\t\\t\\t\\terrorMsg = $tw.language.getString(\\\"Error/PutForbidden\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (xhr.responseText) {\\n\\t\\t\\t\\t\\t// treat any server response like a plain text error explanation\\n\\t\\t\\t\\t\\terrorMsg = errorMsg + \\\"\\\\n\\\\n\\\" + xhr.responseText;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcallback(errorMsg); // fail\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tself.etag = xhr.getResponseHeader(\\\"ETag\\\");\\n\\t\\t\\t\\tif(self.etag == null) {\\n\\t\\t\\t\\t\\tretrieveETag(self);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcallback(null); // success\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\treturn true;\\n};\\n\\n/*\\nInformation about this saver\\n*/\\nWebDAVSaver.prototype.info = {\\n\\tname: \\\"webdav\\\",\\n\\tpriority: 2001,\\n\\tcapabilities: [\\\"save\\\",\\\"autosave\\\"]\\n};\\n\\n/*\\nStatic method that returns true if this saver is capable of working\\n*/\\nexports.canSave = function(wiki) {\\n\\treturn /^https?:/.test(location.protocol);\\n};\\n\\n/*\\nCreate an instance of this saver\\n*/\\nexports.create = function(wiki) {\\n\\treturn new WebDAVSaver(wiki);\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"saver\"},\"$:/plugins/sq/webdav-utils/startup-webdavls.js\":{\"title\":\"$:/plugins/sq/webdav-utils/startup-webdavls.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/webdav-utils/startup-webdavls.js\\ntype: application/javascript\\nmodule-type: startup\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.name = \\\"webav-ls\\\";\\nexports.platforms = [\\\"browser\\\"];\\nexports.after = [\\\"startup\\\"];\\nexports.before = [\\\"story\\\"];\\n\\nexports.startup = function() {\\n\\t$tw.rootWidget.addEventListener(\\\"tm-webdav-ls\\\",function(event) {\\n\\t\\tvar options = {\\n\\t\\t\\t\\\"tiddlerTitlePrefix\\\" : event.paramObject[\\\"tiddlerTitlePrefix\\\"] || \\\"$:/temp/webdav/filesystem\\\",\\n\\t\\t\\t\\\"depth\\\": event.paramObject[\\\"depth\\\"] || \\\"1\\\"\\n\\t\\t};\\n\\t\\tindexDirectory(event.param,options);\\n\\t});\\n};\\n\\nasync function indexDirectory(root,options) {\\n\\ttry {\\n\\t\\tconst response = await fetch(root,{\\n\\t\\t\\t\\\"method\\\": \\\"PROPFIND\\\",\\n\\t\\t\\t\\\"headers\\\": {\\n\\t\\t\\t\\t\\\"Depth\\\": options.depth,\\n\\t\\t\\t\\t\\\"Content-Type\\\": \\\"text/xml\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"body\\\": propfindXML\\n\\t\\t})\\n\\t\\t\\n\\t\\tif(!response.ok) {\\n\\t\\t\\tvar status = response.status,\\n\\t\\t\\t\\tmsg = `Network error: ${response.status}`;\\n\\t\\t\\tif(status === 401) { // authentication required\\n\\t\\t\\t\\tmsg = $tw.language.getString(\\\"Error/PutUnauthorized\\\");\\n\\t\\t\\t} else if(status === 403) { // permission denied\\n\\t\\t\\t\\tmsg = $tw.language.getString(\\\"Error/PutForbidden\\\");\\n\\t\\t\\t} else if(status === 404) {\\n\\t\\t\\t\\tmsg = \\\"404: The directory does not exist\\\";\\n\\t\\t\\t}\\t\\t\\t\\n\\t\\t\\tthrow new Error(msg);\\n\\t\\t} else {\\n\\t\\t\\tconst xml = await response.text();\\n\\t\\t\\tconst parser = new DOMParser(),\\n\\t\\t\\t\\txmlDOM = parser.parseFromString(xml,\\\"text/xml\\\"),\\n\\t\\t\\t\\tnodes = Array.from(xmlDOM.getElementsByTagName(\\\"D:response\\\"));\\n\\t\\t\\tlet jsonData = {tiddlers: {}};\\n\\t\\t\\tnodes.forEach((item)=> {\\n\\t\\t\\t\\tlet href = item.getElementsByTagName(\\\"D:href\\\")[0].textContent,\\n\\t\\t\\t\\t\\turi = item.getElementsByTagName(\\\"D:href\\\")[0].textContent,\\n\\t\\t\\t\\t\\ttype = item.getElementsByTagName(\\\"D:collection\\\").length ? \\\"directory\\\" : \\\"file\\\";\\n\\t\\t\\t\\t//jsonData[uri] = type;\\n\\t\\t\\t\\tjsonData.tiddlers[uri] = Object.create(null);\\n\\t\\t\\t\\tjsonData.tiddlers[uri].title = uri;\\n\\t\\t\\t\\tjsonData.tiddlers[uri][\\\"item-type\\\"] = type;\\n\\t\\t\\t\\tjsonData.tiddlers[uri][\\\"text\\\"] = \\\"\\\";\\n\\t\\t\\t});\\n\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler({\\n\\t\\t\\t\\ttitle: `${options.tiddlerTitlePrefix}/directory${root === \\\"/\\\" ? \\\"/root/\\\" : root}`,\\n\\t\\t\\t\\ttext : JSON.stringify(jsonData),\\n\\t\\t\\t\\ttype: \\\"application/json\\\"\\n\\t\\t\\t}));\\t\\n\\t\\t\\t\\n\\t\\t}\\n\\t} catch(err) {\\n\\t\\t//console.log(err);\\n\\t\\tif(!$tw.webdavlslogger) {\\n\\t\\t\\t$tw.webdavlslogger = new $tw.utils.Logger(\\\"WebDAV-LS\\\");\\n\\t\\t}\\n\\t\\t$tw.webdavlslogger.alert(`<p><strong>Error: Could not retrieve the contents of the directory ${root}.</strong></p><p>${err.message}</p>`);\\n\\t}\\n};\\n\\nconst propfindXML = `<propfind xmlns=\\\"DAV:\\\">\\n  <prop>\\n    <resourcetype xmlns=\\\"DAV:\\\"/>\\n  </prop>\\n</propfind>`;\\n\\n})();\\n\\n\\n/*\\nhttp://www.webdav.org/specs/rfc4918.html#METHOD_PROPFIND\\n<getlastmodified xmlns=\\\"DAV:\\\"/>\\n<getcontentlength xmlns=\\\"DAV:\\\"/>\\n<executable xmlns=\\\"http://apache.org/dav/props/\\\"/>\\n*/\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/sq/webdav-utils/uploader.js\":{\"title\":\"$:/plugins/sq/webdav-utils/uploader.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/webdav-utils/uploader.js\\ntype: application/javascript\\nmodule-type: uploader\\n\\nUploads to Webdav\\n\\n\\\\*/\\n(function(){\\n\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.name = \\\"webdav\\\";\\n\\nexports.create = function(params) {\\n\\treturn new WebDAV(params);\\n};\\n\\nconst createPath = require(\\\"$:/plugins/sq/webdav-utils/createPath.js\\\").createPath;\\nconst getUploadPath = require(\\\"$:/plugins/sq/webdav-utils/getUploadPath.js\\\").getUploadPath;\\n\\nfunction WebDAV(params) {\\n\\tthis.params = params || {};\\n\\tthis.items = [];\\n\\tthis.logger = new $tw.utils.Logger(\\\"webdav-uploader\\\");\\n\\tthis.logger.log(\\\"\\\",params);\\n};\\n\\nWebDAV.prototype.initialize = function(callback) {\\n\\tthis.logger.log(\\\"uploader initialize\\\");\\n\\tcallback();\\n};\\n\\nWebDAV.prototype._getCanonicalURI = function(uploadItem) {\\n\\treturn encodeURI(getUploadPath(uploadItem.title,\\\"$:/config/file-uploads/webdav/uploadPathFilters\\\",{\\n\\t\\t\\\"wiki\\\": $tw.wiki,\\n\\t\\t\\\"unique\\\": ($tw.wiki.getTiddlerText(\\\"$:/config/file-uploads/webdav/generateUniqueURIs\\\") === \\\"yes\\\") ? true : false\\n\\t}));\\n};\\n\\nasync function handleUploadFile(uploadItem,canonical_uri) {\\n\\tvar self = this;\\n\\tconst data = uploadItem.isBase64 ? uploadItem.getBlob() : uploadItem.text;\\n\\ttry {\\n\\t\\tawait createPath(canonical_uri.substring(0,canonical_uri.lastIndexOf(\\\"/\\\")));\\n\\t} catch(err) {\\n\\t\\tconst errorMessage = `Error creating or confirming that upload directory exists. Details: ${err.message}`;\\n\\t\\tself.logger.log(errorMessage);\\n\\t\\tthrow new Error(errorMessage);\\n\\t}\\n\\t\\n\\tconst response = await fetch(canonical_uri,{ \\n\\t\\tmethod: \\\"PUT\\\",\\n\\t\\tbody: data\\n\\t});\\n\\tif(!response.ok) {\\n\\t\\tvar status = response.status,\\n\\t\\t\\tmsg = `Network error: ${response.status}`;\\n\\t\\tif(status === 401) { // authentication required\\n\\t\\t\\tmsg = $tw.language.getString(\\\"Error/PutUnauthorized\\\");\\n\\t\\t} else if(status === 403) { // permission denied\\n\\t\\t\\tmsg = $tw.language.getString(\\\"Error/PutForbidden\\\");\\n\\t\\t} else if(status === 404) {\\n\\t\\t\\tmsg = \\\"404: The upload directory does not exist\\\";\\n\\t\\t}\\n\\t\\tthrow new Error(msg);\\n\\t}\\n}\\n\\n/*\\nArguments:\\nuploadItem: object of type UploadItem representing tiddler to be uploaded\\ncallback accepts two arguments:\\n\\terr: error object if there was an error\\n\\tuploadItemInfo: object corresponding to the tiddler being uploaded with the following properties set:\\n\\t- title\\n\\t- canonical_uri (if available)\\n\\t- uploadComplete (boolean)\\n\\t- getUint8Array()\\n\\t- getBlob()\\n*/\\nWebDAV.prototype.uploadFile = function(uploadItem,callback) {\\n\\tvar self = this,\\n\\t\\tuploadInfo = {title: uploadItem.title},\\n\\t\\tcanonical_uri = this._getCanonicalURI(uploadItem);\\n\\tif(!canonical_uri) {\\n\\t\\tself.logger.alert(`<p><strong>Error: Could not save file ${uploadItem.title}, no valid path filter available.</strong></p>`);\\n\\t\\tcallback(Error(\\\"No valid path filter available\\\"),uploadInfo);\\n\\t}\\n\\t\\n\\thandleUploadFile(uploadItem,canonical_uri)\\n\\t\\t.then(function(status){\\n\\t\\t\\tuploadInfo.canonical_uri = canonical_uri;\\n\\t\\t\\tself.logger.log(`Saved to ${uploadItem.filename} with canonical_uri ${canonical_uri}`);\\n\\t\\t\\t// Set updateProgress to true if the progress bar should be updated\\n\\t\\t\\t// For some uploaders where the data is just being added to the payload with no uploading taking place we may not want to update the progress bar\\n\\t\\t\\tuploadInfo.updateProgress = true;\\n\\t\\t\\t// Set uploadComplete to true if the uploaded file has been persisted and is available at the canonical_uri\\n\\t\\t\\t// This flag triggers the creation of a canonical_uri tiddler corresponding to the uploaded file\\n\\t\\t\\t// Here we set uploadComplete to false since with Fission the file uploaded will not be persisted until we call publish()\\n\\t\\t\\tuploadInfo.uploadComplete = true;\\n\\t\\t\\tcallback(null,uploadInfo);\\n\\t\\t}).catch(function(err){\\n\\t\\t\\tself.logger.alert(`<p><strong>Error: Could not save file ${uploadItem.filename} to ${canonical_uri}.</strong></p><p>${err.message}</p>`);\\n\\t\\t\\tcallback(err,uploadInfo);\\n\\t\\t});\\n\\n};\\n\\n/*\\nArguments:\\ncallback accepts two arguments:\\n\\tstatus: true if there was no error, otherwise false\\n\\tuploadInfoArray (optional): array of uploadInfo objects corresponding to the tiddlers that have been uploaded\\n\\t\\tthis is needed and should set the canonical_uri for each uploadItem if:\\n\\t\\t- (a) uploadInfo.uploadComplete was not set to true in uploadFile AND \\n\\t\\t- (b) uploadInfo.canonical_uri was not set in uploadFile\\n*/\\nWebDAV.prototype.deinitialize = function(callback) {\\n\\t// Mock finishing up operations that will complete the upload and persist the files\\n\\tthis.logger.log(\\\"uploader deinitialize\\\");\\n\\tcallback();\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"uploader\"},\"$:/plugins/sq/webdav-utils/createPath.js\":{\"title\":\"$:/plugins/sq/webdav-utils/createPath.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/webdav-utils/createPath.js\\ntype: application/javascript\\nmodule-type: library\\n\\n//check if path exists, and if not then create it\\n\\n\\\\*/\\n(function(){\\n\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nlet relativeToRoot;\\n\\nasync function checkDirectory(path) {\\n\\tconst propfindXML = `<?xml version=\\\"1.0\\\"?>\\n\\t<propfind xmlns=\\\"DAV:\\\">\\n\\t   <prop>\\n\\t      <resourcetype />\\n\\t   </prop>\\n\\t</propfind>`;\\n\\t\\n\\tlet response = await fetch(path,{\\n\\t\\t\\\"method\\\": \\\"PROPFIND\\\",\\n\\t\\t\\\"headers\\\": {\\n\\t\\t\\t\\\"Depth\\\": \\\"0\\\",\\n\\t\\t\\t\\\"Content-Type\\\": \\\"text/xml\\\"\\n\\t\\t},\\n\\t\\t\\\"body\\\": propfindXML\\n\\t});\\n\\tif(!response.ok) {\\n\\t\\t//console.log(response.status);\\n\\t\\treturn false;\\n\\t} else if(response.ok && response.status === 207) {\\n\\t\\t//console.log(\\\"exists\\\");\\n\\t\\treturn true;\\n\\t}\\n};\\n\\nasync function checkDirectories(filesPath) {\\n\\tlet dirExists = false,\\n\\t\\tdir = filesPath;\\t\\n\\tdo {\\n        //console.log(\\\"checking\\\",dir);\\n\\t\\tdirExists = await checkDirectory(dir);\\n\\t\\tif(!dirExists) {\\n\\t\\t\\tconst matches = dir.match(/^(.*)\\\\/.+/);\\n\\t\\t\\tif(matches) {\\n\\t\\t\\t\\tdir = matches[1];\\n\\t\\t\\t} else {\\n\\t            dir = \\\"\\\";\\n\\t        }\\n\\t\\t}\\n\\t} while(!dirExists && dir.length)\\n\\treturn dir;\\n};\\n\\nasync function mkDir(path) {\\n\\tlet response = await fetch(path,{\\n\\t\\t\\\"method\\\": \\\"MKCOL\\\"\\n\\t});\\n\\tif(!response.ok) {\\n\\t\\tthrow new Error(`Error: could not create backup directory ${path}. Response status: ${response.status}`);\\n\\t} else {\\n\\t\\treturn true;\\n\\t}\\n};\\n\\nasync function mkDirs(filesPath,dir) {\\n\\tif(filesPath === dir) {\\n\\t\\t//console.log(\\\"original folder exists\\\");\\n\\t\\treturn;\\n\\t} else {\\n\\t\\t//console.log(`exists until ${dir} from ${filesPath}`);\\n\\t\\tlet missingPath = filesPath;\\n\\t\\tif(filesPath.startsWith(dir)) {\\n\\t\\t\\tmissingPath = filesPath.substring(dir.length).replace(/^\\\\/|\\\\/$/gm,\\\"\\\");\\n\\t\\t\\t//console.log(`missing path ${missingPath}`)\\n\\t\\t}\\n\\t\\tlet missingDirs = missingPath.split(\\\"/\\\");\\n\\t\\tif(relativeToRoot) {\\n\\t\\t\\tmissingDirs[0] = \\\"/\\\" + missingDirs[0];\\n\\t\\t}\\n\\t\\twhile(missingDirs.length) {\\n\\t\\t\\tlet newDir = missingDirs.shift(),\\n\\t\\t\\t\\tdirToCreate = dir.length ? `${dir}/${newDir}` : newDir;\\n\\t\\t\\tawait mkDir(dirToCreate);\\n\\t\\t\\tdir = dirToCreate;\\n\\t\\t}\\n\\t}\\n};\\n\\nasync function createPath(filesPath) {\\n\\t\\trelativeToRoot = filesPath.startsWith(\\\"/\\\");\\n\\t\\tfilesPath = filesPath.trim().replace(/\\\\/$/gm,\\\"\\\");\\n\\t\\tlet dir = await checkDirectories(filesPath);\\n\\t\\tawait mkDirs(filesPath,dir);\\n};\\n\\nexports.createPath = createPath;\\n\\t\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/sq/webdav-utils/getUploadPath.js\":{\"title\":\"$:/plugins/sq/webdav-utils/getUploadPath.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/sq/webdav-utils/getUploadPath.js\\ntype: application/javascript\\nmodule-type: library\\n\\nEvaluate a cascade of filters to get an upload path for a tiddler\\nIf option.unique is true, the path generated is a unique canonical_uri in the tiddler, by means of incrementing the file name\\n\\n\\\\*/\\n(function(){\\n\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\ngetUploadPath(\\\"myimage.jpg\\\",\\\"uploadPathConfig\\\",{\\n\\t\\\"defaultUploadPath\\\": \\\"files\\\",\\n\\t\\\"wiki\\\": $tw.wiki,\\n\\t\\\"unique\\\" : true //dont allow two tidders to have same canonical_uri, increment the filename\\n}); // => 'files/morefiles/myimage.jpg'\\n*/\\nfunction getUploadPath(title,configTiddler,options) {\\n\\tvar pathFilters,\\n\\t\\tuploadPath,\\n\\t\\tsource = options.wiki.makeTiddlerIterator([title]),\\n\\t\\tresult = options.wiki.filterTiddlers(`[all[]] :cascade[{${configTiddler}}split[\\\\n]!prefix[\\\\\\\\]]`,null,source);\\n\\tif(result.length) {\\n\\t\\tuploadPath = result[0];\\n\\t}\\n\\tif(!uploadPath) {\\n\\t\\treturn null;\\n\\t}\\n\\tvar ext = \\\"\\\",\\n\\t\\tfilename = uploadPath.substring(0,uploadPath.lastIndexOf(\\\".\\\"));\\n\\tif(!filename.length) {\\n\\t\\tfilename = uploadPath;\\n\\t\\tvar tiddlerType = (options.wiki.getTiddler(title)).fields.type;\\n\\t\\tif(tiddlerType && $tw.config.contentTypeInfo[tiddlerType]) {\\n\\t\\t\\text = $tw.config.contentTypeInfo[tiddlerType].extension;\\n\\t\\t}\\n\\t} else {\\n\\t\\text = `.${uploadPath.split(\\\".\\\").pop()}`;\\n\\t}\\n\\t\\n\\tif(options.unique) {\\n\\t\\tvar matches,\\n\\t\\t\\tcount = 1;\\n\\t\\twhile(!!(matches = options.wiki.filterTiddlers(`[_canonical_uri[${filename}${ext}]]`)) && matches.length) {\\n\\t\\t\\tif((matches.length === 1) && (matches[0] === title)) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tfilename = `${filename}_${count}`;\\n\\t\\t\\tcount++;\\t\\t\\t\\n\\t\\t}\\n\\t}\\n\\t\\n\\treturn `${filename}${ext}`;\\n};\\n\\nexports.getUploadPath = getUploadPath;\\n\\t\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/sq/webdav-utils/readme\":{\"title\":\"$:/plugins/sq/webdav-utils/readme\",\"text\":\"@@color:red;''Experimental plugin - no support available. Use at your own risk.''@@\\n\\n* Improved ~WebDAV saver that creates backups\\n** Recommend disabling ~AutoSave when backups are enabled\\n* ~FileUploads plugin support for ~WebDAV\\n** supports a path filter cascade to customize the upload path\\n** See settings for ~FileUploads to determine which tiddlers are uploaded\\n* A file explorer showing what files are present on the server $:/FileExplorer\\n** affordances to retrieve the list of contents of folders on the server via the widget message `tm-webdav-ls`\\n\"},\"$:/plugins/sq/webdav-utils/startup-actions\":{\"title\":\"$:/plugins/sq/webdav-utils/startup-actions\",\"tags\":\"$:/tags/StartupAction/PostRender\",\"text\":\"<$list filter=\\\"[prefix[$:/state/webdav/exporer/current-root]get[text]]\\\" emptyMessage=\\\"\\\"\\\"\\n    <$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=\\\"/\\\" />\\n\\\"\\\"\\\">\\n    <$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=<<currentTiddler>> />\\n</$list>\\n\"},\"$:/plugins/sq/webdav-utils/styles/file-explorer\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/file-explorer\",\"tags\":\"$:/tags/Stylesheet\",\"creator\":\"telumire\",\"text\":\"<!--\\n/* by Telumire */\\n-->\\n\\\\rules except dash list\\n\\n\\\\procedure url(svg)\\n<$wikify name=\\\"svgtext\\\" text=`<$transclude $tiddler=\\\"$(svg)$\\\"/>`  output=\\\"html\\\" mode=\\\"inline\\\">\\n<$text text=\\\"\\\"\\\"url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22pt\\\" height=\\\"22pt\\\">\\\"\\\"\\\"/><$text text={{{ [<svgtext>search-replace:g[#],[%23]search-replace:g[\\n],[]] }}}/></svg></$wikify>')\\n\\\\end\\n\\n/*\\n\\nTODO: \\n\\n- Try the same layout but with grid and see what works best.\\n- Check if accessibility can be improved further (color contrasts ? Touch screens ?)\\n- Make the layout entirely dynamic with widgets (and avoid useless html generation)\\n- Fix the overflow issue on small screen width\\n\\n*/\\n\\n/* reset */\\n.explorer :is(ul,li,menu){\\n\\tall:unset;\\n}\\n\\n/* CSS variables */\\n.explorer{\\n/* border:solid 2px <<color modal-border>>;*/\\n\\tborder-radius:3px;\\n\\t<<box-shadow \\\"1px 1px 5px rgba(0, 0, 0, 0.3)\\\">>\\n\\n/* sizes */\\n\\t--line-height:50px;\\n\\t--icon-height:20px;\\n\\t--icon-margin:calc((var(--line-height) - var(--icon-height)) / 2);\\n\\n/* colors */\\n\\t--color-muted:<<color muted-foreground>>;\\n\\t--color-icon-muted:<<color tiddler-controls-foreground>>;\\n\\t--color-icon-selected:<<color tiddler-controls-foreground-hover>>;\\n\\t--color-separator:<<color table-border>>;\\n\\t--border-separator:1px solid var(--color-separator);\\n\\t--background-hover:<<color \\\"table-header-background\\\">>;\\n\\n/* icons */\\n\\t--icon-file: <<url \\\"$:/core/images/file\\\">>;\\n\\t--icon-folder: <<url \\\"$:/core/images/folder\\\">>;\\n\\t--icon-open: <<url \\\"$:/core/images/open-window\\\">>;\\n\\t--icon-new: <<url \\\"$:/core/images/new-button\\\">>;\\n\\t--icon-more: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='22pt' height='22pt' class='tc-image-button' viewBox='0 0 20 20'%3E%3Cpath d='M10.001 7.8a2.2 2.2 0 1 0 0 4.402A2.2 2.2 0 0 0 10 7.8zm0-2.6A2.2 2.2 0 1 0 9.999.8a2.2 2.2 0 0 0 .002 4.4zm0 9.6a2.2 2.2 0 1 0 0 4.402 2.2 2.2 0 0 0 0-4.402z'/%3E%3C/svg%3E\\\");\\n\\n/*\\nNote: Using CSS svg masks remove the need for svg HTML elements.\\n*/\\n}\\n\\n.explorer [role=\\\"treeitem\\\"]{\\n\\tdisplay:flex;\\n\\tflex-direction:column;\\n}\\n\\n/* Separators */\\n\\n/*\\n.explorer [role=\\\"treeitem\\\"]:not(:first-child){\\n\\tborder-top:var(--border-separator);\\n}\\n*/\\n\\n.explorer :not(:first-child) [role=\\\"treeitem\\\"]{\\n\\tborder-top:var(--border-separator);\\n}\\n\\n/* Menu */\\n.explorer [role=\\\"menubar\\\"]:not(.root-folder):hover{\\n\\tbackground-color:var(--background-hover);\\n}\\n\\n.explorer :is([role=\\\"menubar\\\"],[role=\\\"menuitem\\\"]){\\n\\tdisplay: flex;\\n\\talign-items: center;\\n}\\n\\n.explorer [role=\\\"menubar\\\"]:not(.root-folder),\\n.explorer .more-options[role=\\\"menuitem\\\"] {\\n\\tcursor:pointer;\\n}\\n\\n.explorer [role=\\\"menuitem\\\"]:before,\\n.explorer [role=\\\"menubar\\\"].file .location:after{\\n\\taspect-ratio:1/1;\\n\\tbackground-color:var(--color-icon-muted);\\n\\tcontent:\\\"\\\";\\n\\tdisplay:inline-block;\\n\\t-webkit-mask: center / contain no-repeat var(--mask);\\n\\tmask: center / contain no-repeat var(--mask);\\n\\theight:var(--icon-height);\\n\\tmargin:var(--icon-margin);\\n/* <<transition \\\"background 150ms ease-in-out\\\">> */\\n}\\n\\n.explorer [role=\\\"menubar\\\"] [role=\\\"menuitem\\\"]:hover:before,\\n.explorer [role=\\\"menubar\\\"] [role=\\\"menuitem\\\"].more-options.popup-active:before,\\n.explorer [role=\\\"menubar\\\"]:is(:focus-within,:hover) .folder:before,\\n.explorer [role=\\\"menubar\\\"].file:hover .location:after{\\n\\tbackground-color:var(--color-icon-selected);\\n}\\n\\n/*\\n.explorer [role=\\\"menuitem\\\"]:not(:first-child, .open){\\n\\tborder-left:solid 1px var(--color-separator);\\n}\\n*/\\n\\n.explorer [role=\\\"menuitem\\\"]:first-child {\\n\\tborder-right: solid 1px var(--color-separator);\\n}\\n\\n.explorer .location{\\n\\tmargin-left:calc(var(--line-height) / 2  * var(--depth));\\n\\tflex: 1;\\n/*    height: var(--line-height);*/\\n}\\n\\n.explorer .location,\\n.explorer .location span {\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n\\twhite-space: nowrap;\\n}\\n\\n.explorer .folder .location:before{\\n\\t--mask:var(--icon-folder);\\n}\\n\\n.explorer .file .location:before{\\n\\t--mask:var(--icon-file);\\n}\\n\\n\\n.explorer [role=\\\"menubar\\\"].file .location:after{\\n\\t--mask:var(--icon-open);\\n\\tmargin-left: auto;\\n}\\n\\n\\n.explorer .more-options:before{\\n\\t--mask:var(--icon-more); \\n\\t/*background:unset;\\n\\tcontent:\\\"\\\\2026\\\";\\n\\tfont-weight: bolder;\\n\\tfont-size: x-large;*/\\n}\\n\\n.explorer .more-options.popup-active {\\n    background-color:var(--background-hover);\\n}\\n\\n/* Breadcrumbs */\\n\\n\\n/*\\n\\n.explorer ul[aria-label=\\\"breadcrumbs\\\"] {\\n\\tdisplay:flex;\\n\\tlist-style:none;\\n\\talign-items: center;\\n\\theight: 100%;\\n}\\n\\n.explorer ul[aria-label=\\\"breadcrumbs\\\"] li {\\n\\talign-items: center;\\n\\theight: 100%;\\n\\tdisplay: inline-flex;\\n}\\n*/\\n\\n.explorer ul[aria-label=\\\"breadcrumbs\\\"] button {\\n\\theight: calc(var(--line-height) - 10px);\\n\\tborder-radius: 5px;\\n}\\n\\n.explorer [aria-label=\\\"breadcrumbs\\\"] li:not(:last-child,:hover){\\n\\topacity:.6;\\n}\\n\\n.explorer [aria-label=\\\"breadcrumbs\\\"] li:not(:last-child):after{\\n\\tcontent:\\\"/\\\";\\n\\twidth:1ch;\\n\\tpadding:0ch;\\n\\topacity:.33;\\n}\\n\\n.explorer .root-folder[role=\\\"menubar\\\"]:hover button{\\n\\tbackground-color:var(--background-hover);\\n}\\n\\n.explorer .root-folder[role=\\\"menubar\\\"] button,\\n.explorer [aria-label=\\\"breadcrumbs\\\"] [aria-current=\\\"location\\\"] {\\n\\tpadding: 5px 10px;\\n\\twhite-space: nowrap;\\n}\\n\\n/* Hide items not opened */\\n\\n/*\\n.explorer [role=\\\"treeitem\\\"]:not(:focus-within,[aria-expanded=\\\"true\\\"]) [role=\\\"group\\\"] {\\n\\tdisplay: none;\\n}\\n*/\\n\\n/*\\nHide the breadcrumbs except on active directory\\n*/\\n\\n/*\\n.explorer [role=\\\"treeitem\\\"]:not(:focus-within) [aria-label=\\\"breadcrumbs\\\"] a, \\n.explorer [role=\\\"treeitem\\\"]:not(:focus-within) [aria-label=\\\"breadcrumbs\\\"] li:after{\\ndisplay:none;\\n}\\n*/\"},\"$:/plugins/sq/webdav-utils/styles/popup-menu\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/popup-menu\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\".squi-contextmenu,\\n.squi-contextmenu.tc-drop-down {\\n\\tpadding: 12px 0;\\n\\tbox-shadow: <<color very-muted-foreground>> 0px 2px 20px;\\n\\tfont-family: \\\"Segoe UI\\\", Roboto, Helvetica, Arial;\\n\\tfont-size: 13px;\\n\\tmargin-top: 4px;\\n\\tmin-width: 100px;\\n\\tmax-width: 240px;\\n\\tleft: -16px;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tborder-radius: 6px;\\n\\tborder: 1px solid <<color code-border>>;\\n\\ttransition: opacity 200ms ease 0s, transform 200ms ease 0s;\\n}\\n\\n.squi-contextmenu .tc-menu-list-item {\\n\\tpadding: 0 18px;\\n\\tline-height: 24px;\\n\\twhite-space: nowrap;\\n\\tcolor: <<color foreground>>;\\n\\tcursor: default !important;\\n\\ttext-indent: 0;\\n}\\n\\n.squi-contextmenu-itemwrapper {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\talign-items: center;\\n\\tposition: relative;\\t\\n}\\n\\n.squi-contextmenu-itemtext {\\n\\tdisplay: flex;\\n\\twhite-space: nowrap;\\n\\ttext-overflow: ellipsis;\\n\\tflex-grow: 1;\\n\\toverflow: hidden;\\t\\n}\\n\\n.squi-contextmenu-itemicon {\\n\\tcolor: <<color very-muted-foreground>>;\\n\\tmargin-left: 16px;\\n\\tmin-width: 22px;\\t\\n}\\n\\n.squi-contextmenu-divider {\\n\\tborder-top-width: 1px;\\n\\tborder-top-color: <<color sidebar-tab-divider>>;\\n\\tborder-top-style: solid;\\n\\tmargin: 6px 0;\\n}\\n\"},\"$:/plugins/sq/webdav-utils/styles/squi-forms-radio\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/squi-forms-radio\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\"<!-- alpha does not work for colors not specified in hex\\n\\tconsider a macro that detects the color format and adjusts alpha\\n\\thttps://www.arclab.com/en/kb/htmlcss/html-css-color-names-rgb-rgba-hex-hsl-hsla.html\\n\\n\\n\\tfunction standardize_color(str){\\n    var ctx = document.createElement(\\\"canvas\\\").getContext(\\\"2d\\\");\\n    ctx.fillStyle = str;\\n    return ctx.fillStyle;\\n}\\n\\n\\n\\t-->\\n\\\\define custom-color(name color alpha)\\n<$list filter=\\\"[{$:/palette}!match[$:/palettes/Vanilla]]\\\" emptyMessage=<<__color__>>><$transclude tiddler={{$:/palette}} index=\\\"$name$\\\"><$transclude tiddler=\\\"$:/palettes/Vanilla\\\" index=\\\"$name$\\\"><$transclude tiddler=\\\"$:/config/DefaultColourMappings/$name$\\\"/></$transclude></$transclude>$alpha$</$list>\\n\\\\end\\n\\n.squi-radio {\\n\\tmargin: 0.5rem;\\n\\tline-height: 0.9;\\n}\\n\\n.squi-radio label.tc-radio-selected.tc-radio {\\n\\tcolor: #333;\\n}\\n\\n.squi-radio label.tc-radio {\\n\\tcolor: #888\\n}\\n\\n.squi-radio label.tc-radio {\\n\\tdisplay: block;\\n\\tmargin-bottom: 1em;\\n}\\n\\n.squi-radio input[type=\\\"radio\\\"] {\\n\\tposition: absolute;\\n\\topacity: 0;\\n}\\n\\n.squi-radio input[type=\\\"radio\\\"]+span:before {\\n\\tcontent: '';\\n\\tbackground: #f4f4f4;\\n\\tborder-radius: 100%;\\n\\tborder: 2px solid #3197ee;\\n\\tdisplay: inline-block;\\n\\twidth: 1.4em;\\n\\theight: 1.4em;\\n\\tposition: relative;\\n\\ttop: -0.2em;\\n\\tmargin-right: 0.5em;\\n\\tvertical-align: top;\\n\\tcursor: pointer;\\n\\ttext-align: center;\\n\\ttransition: all 250ms ease;\\n}\\n\\n.squi-radio input[type=\\\"radio\\\"]:checked+span:before {\\n\\tbackground-color: #3197ee;\\n\\tbox-shadow: inset 0 0 0 4px #f4f4f4;\\n}\\n\\n.squi-radio input[type=\\\"radio\\\"]:focus+span:before {\\n\\toutline: none;\\n\\tborder-color: #3197ee;\\n}\\n\\n.squi-radio input[type=\\\"radio\\\"]:disabled+span:before {\\n\\tbox-shadow: inset 0 0 0 4px #f4f4f4;\\n\\tborder-color: #b4b4b4;\\n\\tbackground: #b4b4b4;\\n}\\n\\n.squi-radio input[type=\\\"radio\\\"]+.span:empty:before {\\n\\tmargin-right: 0;\\n}\\n\\n\\n/**** radio alternative styling, pill style ****/\\n.squi-radio2 {\\n\\tmargin: 0.5em 1em;\\n\\tline-height: 0.9em;\\n}\\n\\n.squi-radio2 label {\\n\\tdisplay: flex;\\n\\tcursor: pointer;\\n\\tfont-weight: 500;\\n\\tposition: relative;\\n\\toverflow: hidden;\\n\\tmargin-bottom: 0.375em;\\n}\\n\\n.squi-radio2 label input {\\n\\tposition: absolute;\\n\\tleft: -9999px;\\n}\\n\\n.squi-radio2 label input:checked+span {\\n\\tbackground-color: <<custom-color \\\"primary\\\" \\\"#95b9f466\\\">>;\\n/*** d6d6e5**/\\n}\\n\\n.squi-radio2 label input:checked+span:before {\\n\\tbox-shadow: inset 0 0 0 0.4375em <<custom-color \\\"primary\\\" \\\"rgb(26,115,232)\\\">>;\\n/*#0005c*/\\n}\\n\\n.squi-radio2 label span {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tpadding: 0.375em 0.75em 0.375em 0.375em;\\n\\tborder-radius: 99em;\\n\\ttransition: 0.25s ease;\\n}\\n\\n.squi-radio2 label span:hover {\\n\\tbackground-color: <<custom-color \\\"primary\\\" \\\"#95b9f466\\\">>;\\n/*** d6d6e5**/\\n}\\n\\n.squi-radio2 label span:before {\\n\\tdisplay: flex;\\n\\tflex-shrink: 0;\\n\\tcontent: \\\"\\\";\\n\\tbackground-color: <<color background>>;\\n\\twidth: 1.5em;\\n\\theight: 1.5em;\\n\\tborder-radius: 50%;\\n\\tmargin-right: 0.375em;\\n\\ttransition: 0.25s ease;\\n\\tbox-shadow: inset 0 0 0 0.125em <<custom-color \\\"primary\\\" \\\"rgb(26,115,232)\\\">>;\\n/** 00005c**/\\n}\\n\"},\"$:/plugins/sq/webdav-utils/styles/squi-forms\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/squi-forms\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\"\\n/** checkbox switches start **/\\n/** https://www.w3schools.com/howto/howto_css_switch.asp **/\\n/* The switch - the box around the slider */\\nlabel.squi-form-switch {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\twidth: 36px;\\n\\theight: 12px;\\n}\\n\\n/* Hide default HTML checkbox */\\nlabel.squi-form-switch input {\\n\\topacity: 0;\\n\\twidth: 0;\\n\\theight: 0;\\n}\\n\\n/* The slider */\\nlabel.squi-form-switch span {\\n\\tposition: absolute;\\n\\tcursor: pointer;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\tbackground-color: <<color tiddler-controls-foreground>>;\\n\\t-webkit-transition: .2s;\\n\\ttransition: .2s;\\n}\\n\\nlabel.squi-form-switch span:before {\\n\\tposition: absolute;\\n\\tcontent: \\\"\\\";\\n\\theight: 20px;\\n\\twidth: 20px;\\n\\tleft: -1px;\\n\\ttop: -4px;\\n\\tbottom: 4px;\\n\\tbackground-color: <<color background>>;\\n\\t-webkit-transition: .2s;\\n\\ttransition: .2s;\\n\\tbox-shadow: 0 1px 3px 0 rgba(0,0,0,0.7);\\n}\\n\\nlabel.squi-form-switch input:checked + span {\\n\\tbackground-color: rgba(26,115,232,0.5);\\n}\\n\\nlabel.squi-form-switch input:checked + span:before {\\n\\tbackground-color: rgb(26,115,232);\\n\\topacity: 1;\\n}\\n\\nlabel.squi-form-switch input:focus + span {\\n\\tbox-shadow: 0 0 1px #2196F3;\\n}\\n\\nlabel.squi-form-switch input:checked + span:before {\\n\\t-webkit-transform: translateX(17px);\\n\\t-ms-transform: translateX(17px);\\n\\ttransform: translateX(17px);\\n}\\n\\nlabel.squi-form-switch span {\\n\\tborder-radius: 12px;\\n}\\n\\nlabel.squi-form-switch span:before {\\n\\tborder-radius: 50%;\\n}\\n\\ndiv.squi-form-label {\\n\\t\\n}\\n\\n/*** checkbox switches end ***/\\n\\n/** form select elements **/\\n.squi-form-select {\\n\\tappearance: none;\\n\\tbackground: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='12' fill='%235F6368'%3E%3Cpath d='M0 0h24L12 12z'/%3E%3C/svg%3E\\\") calc(100% - 8px) center no-repeat;\\n\\t/*background-color: rgb(241,243,244);*/\\n\\tbackground-color: #d7e3fa;\\n\\tbackground-size: 10px;\\n\\tborder: none;\\n\\tborder-radius: 4px;\\n\\tcolor: rgb(32,33,36);\\n\\tcursor: pointer;\\n\\tmax-width: 100%;\\n\\toutline: none;\\n\\tpadding: 6px 21px 6px 8px;\\n/*\\twidth: 200px;*/\\n}\\n\\n\\n/** form input elements **/\\n\\ninput.squi-form-input {\\n\\tborder: 1px solid <<color tiddler-controls-foreground>>;\\n\\tborder-radius: 3px;\\n\\tbackground-color: rgb(241,243,244);\\n\\tpadding: 6px;\\n}\\n\\ninput.squi-form-input:focus {\\n\\toutline-color: #ccc;\\n}\\n\\ninput.sq-search-input {\\n    display: block;\\n    width: 100%;\\n    height: calc(1.5em + .75rem + 2px);\\n    padding: .375rem .75rem;\\n    font-size: 0.8rem;\\n    font-weight: 400;\\n    line-height: 1.5;\\n    color: #495057;\\n    background-color:  <<color background>>;\\n    background-clip: padding-box;\\n    border: 1px solid #ced4da;\\n    border-radius: .25rem;\\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\n    margin-bottom: 0.75em;\\n}\\n\\ninput.sq-search-input:focus {\\n\\tcolor: #495057;\\n    background-color:  <<color background>>;\\n    border-color: #80bdff;\\n    outline: 0;\\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\\n}\\n\\n/** form textarea elements **/\\n\\n.squi-form-textarea {\\n    display: block;\\n    width: 100%;\\n    height: calc(1.5em + .75rem + 2px);\\n    padding: .375rem .75rem;\\n    font-size: 0.8rem;\\n    font-weight: 400;\\n    line-height: 1.5;\\n    color: #495057;\\n    background-color:  <<color background>>;\\n    background-clip: padding-box;\\n    border: 1px solid #ced4da;\\n    border-radius: .25rem;\\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\n    margin-bottom: 0.75em;\\n}\\n\\n.squi-form-textarea:focus {\\n\\tcolor: #495057;\\n    background-color:  <<color background>>;\\n    border-color: #80bdff;\\n    outline: 0;\\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\\n}\"},\"$:/plugins/sq/webdav-utils/styles/squi-lists\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/squi-lists\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\".squi-list-group {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tpadding-left: 0;\\n\\tmargin-bottom: 0;\\n\\tmargin-top: 0;\\n}\\n\\n.squi-list-group-box-shadow {\\n\\tbox-shadow:1px 1px 5px <<color foreground>>4d;\\t\\n\\tborder-radius: .25rem;\\n}\\n\\t\\n.squi-list-group-item\\t{\\n\\tposition: relative;\\n\\tdisplay: block;\\n\\tpadding: 0.75rem 1.25rem;\\n\\tbackground-color:  <<color background>>;\\n\\tborder: 1px solid <<color foreground>>20;\\n    margin-bottom: -1px;\\n}\\n\\n.squi-list-group-item:first-child {\\n\\tborder-top-left-radius: .25rem;\\n\\tborder-top-right-radius: .25rem;\\n}\\n\\n.squi-list-group-item:last-child {\\n\\tborder-bottom-left-radius: .25rem;\\n\\tborder-bottom-right-radius: .25rem;\\n}\\n\\n.squi-list-group-flush .squi-list-group-item {\\n    border-right: 0;\\n    border-left: 0;\\n    border-radius: 0;\\n}\\n\\n.squi-list-group-flush .squi-list-group-item:first-child {\\n    border-top: 0;\\n}\\n\\n\\n.squi-list-group-flush .squi-list-group-item:last-child {\\n    border-bottom: 0;\\n}\\n\"},\"$:/plugins/sq/webdav-utils/styles/squi-utils\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/squi-utils\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\"\\n.squi-justify-content-between {\\n    justify-content: space-between;\\n}\\n\\n.squi-justify-content-start {\\n    justify-content: flex-start;\\n}\\n\\n.squi-justify-content-start {\\n    justify-content: flex-end;\\n}\\n\\n.squi-align-items-center {\\n    align-items: center;\\n}\\n\\n.squi-messagebox.squi-messagebox-muted {\\n    color: <<color foreground>>;\\n    background-color: <<color tiddler-info-background>>;\\n    border-color: <<color tiddler-info-border>>;\\n}\\n\\n.squi-messagebox {\\n    position: relative;\\n    padding: 1rem 1.25rem;\\n    margin-bottom: 1rem;\\n    border: 1px solid transparent;\\n    border-radius: 0.5rem;\\n}\"},\"$:/plugins/sq/webdav-utils/styles/squi-webdav-demo\":{\"title\":\"$:/plugins/sq/webdav-utils/styles/squi-webdav-demo\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\"/rules except dash list\\n.sqtc-overview-col3 {\\n\\tflex: 1;\\n}\\n\\n.sq-fs-addwiki {\\n\\tmin-width: 500px;\\n}\\n\\n.sq-fs-addwiki fieldset {\\n\\tpadding: 0 0 0.5em 0;\\n\\tborder: none;\\n\\topacity: 1;\\n\\ttransition: opacity 1s ease-out;\\n}\\n\\n.sq-fs-addwiki .disabled {\\n\\topacity: 0.4;\\n}\\n\\n.sq-fs-addwiki label > :first-child,\\n.sq-fs-addwiki fieldset legend {\\n\\tfont-size: 110%;\\n\\tmargin-bottom: 0.2em;\\n}\\n\\n.sq-fs-addwiki .sq-search-input {\\n\\tmargin-top: 0.5em;\\n}\\n\\n.sq-fs-addwiki details {\\n\\tmargin-bottom: 0.5em;\\n}\\n\\n.sq-fs-addwiki details summary {\\n\\tcursor: pointer;\\n}\\n\\n.sq-fs-addplugins.sq-list-group {\\n\\twidth: 90%;\\n\\tmargin: 0 auto;\\n}\\n\\n.sq-fs-addplugins .sq-list-group-item {\\n\\tjustify-content: unset!important;\\n}\\n\\n.sq-fs-addplugins .squi-form-label {\\n\\tpadding-left : 1em;\\n}\\n\\n.sq-fs-list .sq-list-group-item svg.tc-image-open-window.tc-image-button,\\n.sq-fs-list .sq-list-group-item .tc-image-chevron-down.tc-image-button {\\n\\tfill: #00000026;\\n}\\n\\n.sq-fs-list .sq-list-group-item:hover svg.tc-image-open-window.tc-image-button,\\n.sq-fs-list .sq-list-group-item:hover .tc-image-chevron-down.tc-image-button {\\n\\tfill: #444;\\n}\\n\\n.sq-fs-list .sq-list-group .sq-list-group .sq-list-group-item {\\n\\tpadding-left: 2.5rem;\\n\\tborder-right: 0;\\n\\tborder-left: 0;\\n\\tborder-radius: 0;\\n}\\n\\n.sq-fs-list .sq-list-group-item {\\n\\tpadding-left: 2.5rem;\\n}\\n\\n.sq-fs-list .sq-fs-list-root .sq-list-group-item {\\n\\tpadding-left: 1.25rem;\\n}\\n\\n.sq-fs-list .sq-list-group .sq-list-group .sq-list-group .sq-list-group-item {\\n\\tpadding-left: 5rem;\\n}\\n\\n.sq-fs-list .sq-list-group .sq-list-group .sq-list-group .sq-list-group .sq-list-row-container .sq-list-group-item {\\n\\tpadding-left: 5rem;\\n}\\n\\n.sq-fs-list .sq-list-group .sq-list-group .sq-list-group .sq-list-group .sq-list-group-item {\\n\\tpadding-left: 7rem;\\n}\\n\\n.sq-fs-list .sq-list-group-box-shadow .sq-list-group-box-shadow {\\n\\tbox-shadow: none;\\n\\tborder-radius: 0;\\n}\\n\\n.sq-fs-list .sq-list-group+.sq-list-group-item {\\n\\tborder-top-width: 0;\\n}\\n\\n\\n/** nested **/\\n\\nspan+.sq-list-row-container {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-list-row-container {\\n\\twidth: 100%;\\n\\tdisplay: flex;\\n\\tborder: 1px solid rgba(0, 0, 0, .125);\\n}\\n\\n.sq-list-row-container .sq-list-group-item:first-child {\\n\\tborder-top-left-radius: 0;\\n\\tborder-top-right-radius: 0;\\n}\\n\\n.sq-list-row-container:last-child {\\n\\tborder-bottom-left-radius: .25rem;\\n\\tborder-bottom-right-radius: .25rem;\\n}\\n\\n.sq-fs-list .sq-list-row-container+.sq-list-row-container {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-fs-list .sq-list-group+.sq-list-row-container {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-fs-list .sq-list-row-container+.sq-list-group {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-fs-list .sq-list-row-container+.sq-list-group .sq-list-group-item {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-fs-list .sq-list-row-container+.sq-list-group .sq-list-row-container {\\n\\tborder-top-width: 0;\\n}\\n\\n.sq-list-group-item:first-child {\\n\\tborder-top-left-radius: .25rem;\\n\\tborder-top-right-radius: .25rem;\\n}\\n\\n.sq-list-row-container button {\\n\\tborder: none;\\n}\\n\\n.sq-fs-list button.sq-list-group-item {\\n\\tcursor: pointer;\\n\\twidth: 100%;\\n\\ttext-align: left;\\n\\tjustify-content: left!important;\\n}\\n\\nbutton.sq-list-group-item:focus,\\nbutton.sq-list-group-item:hover {\\n\\tz-index: 1;\\n\\tcolor: #495057;\\n\\ttext-decoration: none;\\n\\tbackground-color: #f8f9fa;\\n\\toutline-color: #fff;\\n}\\n\\n.sq-fs-list button.sqtc-overview-col-small.sqtc-overview-col-label {\\n\\twidth: 4em;\\n\\tposition: relative;\\n\\tdisplay: block;\\n\\tpadding: 0.75rem 1.25rem;\\n\\tbackground-color: #fff;\\n\\tcolor: #495057;\\n\\ttext-align: inherit;\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tjustify-content: space-between!important;\\n\\talign-items: center!important;\\n\\tword-spacing: 0.1em;\\n\\tborder-left: 1px solid rgba(0, 0, 0, .125);\\n\\tcursor: pointer;\\n}\\n\\n.sq-fs-list button.sqtc-overview-col-small.sqtc-overview-col-label svg {\\n\\tmargin-left: 0em;\\n\\tfill: #00000026;\\n}\\n\\nbutton.sqtc-overview-col-small.sqtc-overview-col-label:hover svg {\\n\\tfill: #444;\\n}\\n\\nbutton.sqtc-overview-col-small.sqtc-overview-col-label:focus,\\nbutton.sqtc-overview-col-small.sqtc-overview-col-label:hover {\\n\\tz-index: 1;\\n\\tcolor: #495057;\\n\\ttext-decoration: none;\\n\\tbackground-color: #f8f9fa;\\n\\toutline-color: #fff;\\n}\\n\\n.sq-list-row-container .sq-list-group-item:first-child {\\n\\tborder-top-left-radius: 0;\\n\\tborder-top-right-radius: 0;\\n}\\n\\n.sq-fs-list .sq-list-group-item .sq-list-icon {\\n\\tpadding-right: 0.3em;\\n}\\n\\n\\n/**** sq-ui-btn-big ****/\\n\\n.squi-btn-big {\\n\\tbox-shadow: inset 0px 1px 0px 0px #ffffff;\\n\\tbackground: linear-gradient(to bottom, #ffffff 5%, #dedbdb 100%);\\n\\t/* f6f6f6*/\\n\\tbackground-color: #ffffff;\\n\\tborder-radius: 6px;\\n\\tborder: 1px solid #dcdcdc;\\n\\tdisplay: inline-block;\\n\\tcursor: pointer;\\n\\tcolor: #666666;\\n\\tfont-family: Arial;\\n\\tfont-size: 18px;\\n\\tfont-weight: bold;\\n\\tpadding: 19px 32px;\\n\\ttext-decoration: none;\\n\\ttext-shadow: 0px 1px 0px #ffffff;\\n}\\n\\n.squi-btn-big:enabled:hover {\\n\\tbackground: linear-gradient(to bottom, #dedbdb 5%, #ffffff 100%);\\n\\tbackground-color: #f6f6f6;\\n}\\n\\n.squi-btn-big:disabled {\\n\\tbackground: linear-gradient(to bottom, #ccc 5%, #ccc 100%);\\n\\tbackground-color: #ccc;\\n\\topacity: 0.6;\\n\\tcursor: default;\\n}\\n\\n.squi-btn-big:active {\\n\\tposition: relative;\\n\\ttop: 1px;\\n}\\n\\n\\n/**** end sq-ui-btn-big ***/\\n\\n\\n\\n/** mobile **/\\n@media only screen and (max-width: 1000px)  {\\n\\t.tc-modal-centered.squi-modal-centered .tc-modal {\\n\\t\\ttop: 1em;\\n\\t\\tleft: 1em;\\n\\t\\ttransform:translateY(0px)!important;\\n\\t}\\n\\n\\t.sq-fs-addwiki {\\n\\t\\tmin-width: 300px;\\n\\t}\\n\\n}\\n\\n/** details **/\\n.sq-fs-addwiki details {\\n\\twidth: 100%;\\n\\tmin-height: 5px;\\n\\tmax-width: 700px;\\n\\tpadding: 0px;\\n\\tmargin: 0 auto;\\n\\tposition: relative;\\n\\tborder: 1px solid rgba(0, 0, 0, .1);\\n\\tbox-sizing: border-box;\\n\\ttransition: all .3s;\\n}\\n\\n.sq-fs-addwiki details[open]+details,\\n.sq-fs-addwiki details+details[open] {\\n\\tmargin-top: 20px;\\n}\\n\\n.sq-fs-addwiki details[open] {\\n\\tmin-height: 50px;\\n\\tbox-shadow: 2px 2px 20px rgba(0, 0, 0, .2);\\n}\\n\\n.sq-fs-addwiki details[open] summary,\\n.sq-fs-addwiki details summary:hover {\\n\\tbackground-color: #f6f7f8;\\n}\\n\\n.sq-fs-addwiki summary {\\n\\tcursor: pointer;\\n\\tpadding: 10px;\\n}\\n\\n.sq-fs-addwiki summary:focus {\\n\\toutline: none;\\n\\n}\\n\\n.sq-fs-addwiki details p {\\n\\tcolor: #96999d;\\n}\"},\"$:/plugins/sq/webdav-utils/templates/new-wiki-plugins\":{\"title\":\"$:/plugins/sq/webdav-utils/templates/new-wiki-plugins\",\"text\":\"`<script class=\\\"tiddlywiki-tiddler-store\\\" type=\\\"application/json\\\">[`\\n\\t<$let \\n\\t\\tnewline={{{ [charcode[10]] }}}\\n\\t\\tallTiddlers=\\\"[all[]]\\\"\\n\\t\\ttiddlerFilter={{{ [[$:/config/sq/webdav/new-wiki/selected-tiddlers-option]get[text]addprefix[$:/config/sq/webdav/new-wiki/tiddlers-filter/]get[text]!is[blank]] :else[<allTiddlers>] }}}\\n\\t>\\n\\t\\t<$text text=<<newline>>/>\\n\\t\\t<$list filter=\\\"[[$:/config/sq/webdav/new-wiki/selected-plugins]indexes[]] :filter[[$:/config/sq/webdav/new-wiki/selected-plugins]getindex<currentTiddler>match[yes]] [subfilter<tiddlerFilter>]\\\" counter=\\\"counter\\\">\\n\\t\\t\\t<$list filter=\\\"[<counter>!match[1]]\\\">`,`<$text text=<<newline>>/></$list><$jsontiddler tiddler=<<currentTiddler>> escapeUnsafeScriptChars=\\\"yes\\\"/>\\n\\t\\t</$list>\\n\\t\\t<$text text=<<newline>>/>\\n\\t</$let>\\n`]</script>`\"},\"$:/plugins/sq/webdav-utils/ui/templates/wiki-created\":{\"title\":\"$:/plugins/sq/webdav-utils/ui/templates/wiki-created\",\"text\":\"New wiki created at <$text text=<<path>> />\"},\"$:/plugins/sq/webdav-utils/todo\":{\"title\":\"$:/plugins/sq/webdav-utils/todo\",\"text\":\"! ~WebDAV-utils\\n* Provide a global filter that can be used to get the contents of a directory (files or directories). Will be easier with parameterized transclusions\\n\\n---\\n\\n! Explorer\\n* optimize template by creating macros for portions that repeat\\n* consider elements that do not have the attribute role set to button and are not button elements either\\n* consider removing special handling of root directory in terms of where data is stored\\n* refactor to use eventcatcher if performance becomes an issue\\n\\n---\\n\\n!! Breadcrumbs\\n* breadcrumbs need an overflow mechanism\\n** move them outside of the tree?\\n** consider limiting breadcrumbs to max 4 items and adding an ellipsis if there are more.\\n* optimize breadcrumbs with a recursive macro?\"},\"$:/plugins/sq/webdav-utils/ui/PageControls/file-explorer\":{\"title\":\"$:/plugins/sq/webdav-utils/ui/PageControls/file-explorer\",\"caption\":\"{{$:/plugins/sq/webdav-utils/images/file-explorer}} ~WebDAV File Explorer\",\"description\":\"~WebDAV File Explorer\",\"tags\":\"$:/tags/PageControls\",\"text\":\"\\\\whitespace trim\\n\\\\define webdav-filexplorer-button(class)\\n\\\\whitespace trim\\n<$button to=\\\"$:/FileExplorer\\\" tooltip=\\\"Open WebDAV File Explorer\\\" aria-label=\\\"Open ~WebDAV File Explorer\\\" class=\\\"\\\"\\\"$(tv-config-toolbar-class)$ $class$\\\"\\\"\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/plugins/sq/webdav-utils/images/file-explorer}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text=\\\"Open ~WebDAV File Explorer\\\"/></span>\\n</$list>\\n</$button>\\n\\\\end\\n\\n<$list filter=\\\"[list<tv-story-list>] +[field:title[$:/FileExplorer]]\\\" emptyMessage=<<webdav-filexplorer-button>>>\\n<<webdav-filexplorer-button \\\"tc-selected\\\">>\\n</$list>\"},\"$:/plugins/sq/webdav-utils/create-wiki-actions\":{\"title\":\"$:/plugins/sq/webdav-utils/create-wiki-actions\",\"text\":\"\\\\define createWikiActions(destinationURL)\\n\\n\\\\define saveNewWikiActions()\\n\\\\define saveNewWikiCallback()\\n\\\\define failureHandler()\\n<$action-log status=\\\"error saving new wiki to the server\\\"/>\\n<$action-setfield $tiddler={{{ [[$:/temp/webdav/error/]addsuffix<now [UTC]YYYY0MM0DD0hh0mm0ssXXX]>] }}} text={{{ [[There was an error creating the new wiki. ]addsuffix<error>] }}} component=\\\"WebDAV save new wiki\\\" tags=\\\"$:/tags/Alert\\\"/>\\n\\\\end failureHandler\\n<$list filter=\\\"201 204 :intersection[<status>]\\\" variable=\\\"null\\\" emptyMessage=<<saveNewWikiCallbackFailure>> >\\n\\t<$action-sendmessage $message=\\\"tm-notify\\\" $param=\\\"$:/plugins/sq/webdav-utils/ui/templates/wiki-created\\\" path=<<destinationURL>> />\\n\\t<$action-deletetiddler $filter=\\\"$:/temp/sq/fs/new-wiki-template-url $:/temp/sq/fs/new-wiki-name\\\"/>\\n\\t<$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param={{{ [<destinationURL>split[/]butlast[]join[/]trim[/]!is[blank]addsuffix[/]addprefix[/]] :else[[/]] }}} />\\n</$list>\\n\\\\end saveNewWikiCallback\\n<$wikify name=\\\"myplugins\\\" text={{$:/plugins/sq/webdav-utils/templates/new-wiki-plugins}}>\\n\\t<$action-sendmessage\\n\\t\\t$message=\\\"tm-http-request\\\"\\n\\t\\tmethod=\\\"PUT\\\"\\n\\t\\tbind-status=\\\"$:/state/webdav/http-status\\\"\\n\\t\\toncompletion=<<saveNewWikiCallback>>\\n\\t\\turl=<<destinationURL>>\\n\\t\\tbody={{{ [<data>addprefix<myplugins>] }}}\\n\\t\\tvar-destinationURL=<<destinationURL>>\\n\\t\\t>\\n</$wikify>\\n\\\\end saveNewWikiActions\\n\\n\\\\define getWikiTemplateCallback()\\n\\\\define failureHandler()\\n<$action-log status=\\\"error fetching the template for the new wiki\\\"/>\\n<$action-setfield $tiddler={{{ [[$:/temp/webdav/error/]addsuffix<now [UTC]YYYY0MM0DD0hh0mm0ssXXX]>] }}} text={{{ [[There was an error fetching the template for a new wiki. ]addsuffix<error>] }}} component=\\\"WebDAV get template for new wiki\\\" tags=\\\"$:/tags/Alert\\\"/>\\n\\\\end failureHandler\\n<$list filter=\\\"[<status>match[200]]\\\" variable=\\\"null\\\" emptyMessage=<<failureHandler>> >\\n\\t<$action-log data=<<data>> status=\\\"succcess\\\" destinationURL=<<destinationURL>> />\\n\\t<$macrocall $name=\\\"saveNewWikiActions\\\" />\\n</$list>\\n\\\\end getWikiTemplateCallback\\n\\n\\\\define getWikiTemplateActions()\\n\\t<$action-sendmessage\\n\\t\\t$message=\\\"tm-http-request\\\"\\n\\t\\tmethod=\\\"GET\\\"\\n\\t\\tbind-status=\\\"$:/state/webdav/http-status\\\"\\n\\t\\toncompletion=<<getWikiTemplateCallback>>\\n\\t\\turl=<<templateURL>>\\n\\t\\tvar-saveNewWikiActions=<<saveNewWikiActions>>\\n\\t\\tvar-destinationURL=<<destinationURL>>\\n\\t\\t>\\n\\\\end getWikiTemplateActions\\n\\n<$let\\n\\ttemplateURL={{{ [{$:/config/sq/webdav/new-wiki/selected-edition}match[FROMURL]then{$:/temp/sq/fs/new-wiki-template-url}!is[blank]] :else[{$:/config/sq/webdav/new-wiki/selected-edition}get[url]] }}}\\n\\t>\\n\\t<$macrocall $name=\\\"getWikiTemplateActions\\\"/>\\n</$let>\\n\\n\\\\end createWikiActions\\n\\n<$button actions=<<createWikiActions>> >\\ngo\\n</$button>\\n\\n<!--\\n\\thardcoded destination URL\\n\\n\\t$url={{{ [<currentDir>trim:suffix[/]addsuffix[/]addsuffix{$:/temp/sq/fs/new-wiki-name}] }}}\\n-->\"},\"$:/plugins/sq/webdav-utils/ui/file-explorer/prefix\":{\"title\":\"$:/plugins/sq/webdav-utils/ui/file-explorer/prefix\",\"text\":\"\\\\define dataTiddlerPrefix() $:/temp/webdav/filesystem/directory\\n\\\\define getDataTiddler() [<currentPath>match[/]then[/root/]else<currentPath>addprefix<dataTiddlerPrefix>]\\n\\\\define getDirectories() [<dataTiddler>get[text]jsonextract[tiddlers]jsonindexes[]] :filter[<dataTiddler>get[text]jsonget[tiddlers],<currentTiddler>,[item-type]match[directory]] :and[trim:prefix{$:/info/url/origin}] :except[<currentPath>]\\n\\\\define getFiles() [<dataTiddler>get[text]jsonextract[tiddlers]jsonindexes[]] :filter[<dataTiddler>get[text]jsonget[tiddlers],<currentTiddler>,[item-type]match[file]]\\n\"},\"$:/FileExplorer\":{\"title\":\"$:/FileExplorer\",\"text\":\"\\\\define FileExplorer()\\n<!-- \\n\\tfilters to get the contents of a directory\\n\\twould be desirable to not have to set the dataTiddler variable inside the widget tree\\n-->\\n\\\\import [[$:/plugins/sq/webdav-utils/ui/file-explorer/prefix]]\\n\\\\define displayTreeItem() [trim[/]split[/]last[]decodeuricomponent[]]\\n\\n\\\\define navigate-actions()\\n<$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=<<currentPath>> />\\n<$action-setfield $tiddler=<<treeState>> text=<<currentPath>>/>\\n\\\\end navigate-actions\\n\\n\\\\define file-click-actions()\\n<$action-sendmessage $message=\\\"tm-open-external-window\\\" $param=<<currentFile>>/>\\n\\\\end file-click-actions\\n\\n\\\\define breadcrumbs()\\n<ul aria-label=\\\"breadcrumbs\\\">\\n\\t<li>\\n\\t\\t<$let currentPath=\\\"/\\\">\\n\\t\\t\\t<$button class=\\\"tc-btn-invisible\\\" actions=<<navigate-actions>> >{{$:/core/images/home-button}}</$button>\\n\\t\\t</$let>\\n\\t</li>\\n\\t<$list filter=\\\"[<currentPath>split[/]!is[blank]]\\\" variable=\\\"location\\\" counter=\\\"count\\\">\\n\\t\\t<$let currentPath={{{ [<currentPath>split[/]!is[blank]first<count>join[/]addsuffix[/]addprefix[/]]  }}} >\\n\\t\\t\\t<!--\\n\\t\\t\\t\\tinstead of splitting currentPath and then resconstructing it, consider:\\n\\t\\t\\t\\t\\t- a recursive macro that starts at the root level and progresses on folder each time\\n\\t\\t\\t\\t\\t- for displaying the correct text, use the filter displayTreeItem to format it.\\n\\t\\t\\t-->\\n\\t\\t\\t<$list filter=\\\"[<count-last>!match[yes]]\\\" variable=\\\"ignore\\\">\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<$button class=\\\"tc-btn-invisible\\\" actions=<<navigate-actions>> >\\n\\t\\t\\t\\t\\t\\t<$text text={{{ [<location>decodeuricomponent[]] }}}/>\\n\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</$list>\\n\\t\\t\\t<$list filter=\\\"[<count-last>match[yes]]\\\" variable=\\\"ignore\\\">\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span aria-current=\\\"location\\\">\\n\\t\\t\\t\\t\\t\\t<$text text={{{ [<location>decodeuricomponent[]] }}}/>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</$list>\\n\\t\\t</$let>\\n\\t</$list>\\n</ul>\\n\\\\end breadcrumbs\\n<!-- idea: optional filter to show only files of a certain type or exclude files of a certain type-->\\n\\n\\\\define popup-more-menu()\\n\\\\define menu-item(title,subtitle:\\\"\\\",actions:\\\"\\\")\\n\\t<$button class=\\\"tc-menu-list-item tc-btn-invisible\\\" actions=<<__actions__>> >\\n\\t\\t<span class=\\\"squi-contextmenu-itemwrapper\\\">\\n\\t\\t\\t<span class=\\\"squi-contextmenu-itemtext\\\"><$text text=<<__title__>>/></span>\\n\\t\\t\\t<span class=\\\"squi-contextmenu-itemicon\\\"><$text text=<<__subtitle__>>/></span>\\n\\t\\t</span>\\n\\t</$button>\\n\\\\end menu-item\\n\\\\define menu-divider() <div class=\\\"squi-contextmenu-divider\\\"/>\\n\\t<$reveal tag=\\\"div\\\" type=\\\"popup\\\" state=<<popupMenuState>>  position=\\\"belowleft\\\" updatePopupPosition=\\\"yes\\\">\\n\\t\\t<div class=\\\"tc-drop-down squi-contextmenu\\\">\\n\\t\\t\\t<$let currentPath={{{ [<popupMenuState>get[current]] }}}\\n\\t\\t\\t\\tconditionFilter=\\\"[<currentTiddler>!has[condition]then[yes]] :else[subfilter{!!condition}]\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/file-explorer/more-popup-menu/menuitems]sort[sq-contextmenu-name]filter<conditionFilter>] :filter[lookup[$:/config/filexplorer/moremenu/visibility/]!match[hide]]\\\" variable=\\\"listItem\\\">\\n\\t\\t\\t\\t\\t<$macrocall\\n\\t\\t\\t\\t\\t\\t$name=\\\"menu-item\\\"\\n\\t\\t\\t\\t\\t\\ttitle={{{[<listItem>get[squi-contextmenu-name]]}}}\\n\\t\\t\\t\\t\\t\\tsubtitle={{{[<listItem>get[squi-contextmenu-subtitle]]}}}\\n\\t\\t\\t\\t\\t\\tactions={{{[<listItem>get[text]]}}}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</$list>\\n\\t\\t\\t</$let>\\n\\t\\t</div>\\n\\t</$reveal>\\n\\\\end popup-more-menu\\n\\n<$let\\n\\ttreeState=<<qualify $:/temp/webdav/exporer/current-root>>\\n\\tcurrentPath={{{ [<treeState>get[text]!is[blank]else[/]] }}}\\n\\tpopupMenuState=<<qualify $:/temp/webdav/explorer/more-popup>>\\n\\t>\\n\\t<$macrocall $name=\\\"popup-more-menu\\\"/>\\n\\t<nav class=\\\"explorer\\\" role=\\\"tree\\\">\\n\\t\\t<ul role=\\\"group\\\" style=\\\"--depth:0\\\">\\n\\t\\t\\t<li role=\\\"treeitem\\\" aria-expanded=\\\"true\\\" tabindex=\\\"0\\\">\\n\\t\\t\\t\\t<menu role=\\\"menubar\\\" class=\\\"folder root-folder\\\" title=\\\"breadcrumbs\\\">\\n\\t\\t\\t\\t\\t<$button class=\\\"location\\\"actions=<<navigate-action>> tag=\\\"li\\\" role=\\\"menuitem\\\" tooltip=\\\"navigate\\\">\\n\\t\\t\\t\\t\\t\\t<$macrocall $name=\\\"breadcrumbs\\\"/>\\n\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t\\t<$button role=\\\"menuitem\\\" class={{{ more-options [<popupMenuState>get[current]match<currentPath>then[popup-active]] :and[join[ ]] }}} tag=\\\"li\\\" title=\\\"more options\\\" popup=<<popupMenuState>> >\\n\\t\\t\\t\\t\\t\\t<$action-popup/>\\n\\t\\t\\t\\t\\t\\t<$action-setfield $tiddler=<<popupMenuState>> current=<<currentPath>> />\\n\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t</menu>\\n\\t\\t\\t\\t<ul role=\\\"group\\\" style=\\\"--depth:1\\\">\\n\\t\\t\\t\\t\\t<$let dataTiddler={{{ [subfilter<getDataTiddler>] }}}>\\n\\t\\t\\t\\t\\t\\t<$list filter=\\\"[subfilter<getDirectories>]\\\" variable=\\\"currentPath\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li role=\\\"treeitem\\\" tabindex=\\\"0\\\" item-type=\\\"directory\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<menu role=\\\"menubar\\\" class=\\\"folder\\\" title=\\\"Unfold folder\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<$button class=\\\"location\\\" actions=<<navigate-actions>> tag=\\\"li\\\" role=\\\"menuitem\\\" tooltip=\\\"navigate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span><$text text={{{ [<currentPath>subfilter<displayTreeItem>] }}}/></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li role=\\\"menuitem\\\" class=\\\"more-options\\\" title=\\\"more options\\\"></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<$button role=\\\"menuitem\\\" class={{{ more-options [<popupMenuState>get[current]match<currentPath>then[popup-active]] :and[join[ ]] }}} tag=\\\"li\\\" title=\\\"more options\\\" popup=<<popupMenuState>> >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<$action-popup/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<$action-setfield $tiddler=<<popupMenuState>> current=<<currentPath>> />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</menu>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t</$list>\\n\\t\\t\\t\\t\\t\\t<$list filter=\\\"[subfilter<getFiles>]\\\" variable=\\\"currentFile\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li role=\\\"treeitem\\\" tabindex=\\\"0\\\" item-type=\\\"file\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<menu role=\\\"menubar\\\" class=\\\"file\\\" title=\\\"Open\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<$button role=\\\"menuitem\\\" class=\\\"tc-btn-invisible location\\\" actions=<<file-click-actions>> >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<$text text={{{ [<currentFile>subfilter<displayTreeItem>] }}}/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</$button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- disabled until we have sensible actions that can be performed on wikis, such as delete, rename or clone\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talso disable the rule .explorer [role=\\\"menubar\\\"].file .location:after and .explorer [role=\\\"menubar\\\"].file .location:after\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li role=\\\"menuitem\\\" class=\\\"more-options\\\" title=\\\"more options\\\"></li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t-->\\n\\t\\t\\t\\t\\t\\t\\t\\t</menu>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t</$list>\\n\\t\\t\\t\\t\\t</$let>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</nav>\\n</$let>\\n\\\\end FileExplorer\\n\\n<$macrocall $name=\\\"FileExplorer\\\"/>\\n\\n<!-- \\nReferences:\\nBreadcrumbs: https://w3c.github.io/aria-practices/examples/breadcrumb/index.html\\n\\nTree:\\nhttps://w3c.github.io/aria-practices/examples/treeview/treeview-1/treeview-1a.html\\nhttps://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/treeitem_role\\nhttps://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tree_role\\n-->\"},\"$:/Gallery\":{\"title\":\"$:/Gallery\",\"text\":\"\\\\define gallery()\\n\\\\import [[$:/plugins/sq/webdav-utils/ui/file-explorer/prefix]]\\n\\\\define gallerystate() $:/temp/volatile/sq/webdav/gallery/activedirectory\\n\\\\define emptyMessage()\\n    <div class=\\\"squi-messagebox squi-messagebox-muted\\\" style=\\\"max-width: 80%;\\\">\\n        <$list filter=\\\"[<dataTiddler>is[tiddler]]\\\" emptyMessage=\\\"<p>The contents of this directory are not available.</p>\\\">\\n            <p> There are no photos to display.</p>\\n        </$list>\\n    </div>\\n\\\\end emptyMessage\\n\\\\parsermode inline\\n<p>\\n    Viewing the directory: <!-- \\n    <$edit-text tiddler=<<gallerystate>> tag=\\\"input\\\" class=\\\"squi-form-input\\\" default=\\\"/\\\" placeholder=\\\"WebDAV server path to view as gallery\\\" disabled=\\\"yes\\\"/> -->\\n    <$text text={{{ [<gallerystate>get[text]!is[blank]else[/]]}}}/>\\n</p>\\n<$let \\n    currentPath={{{ [<gallerystate>get[text]!is[blank]else[/]] }}}\\n    dataTiddler={{{ [subfilter<getDataTiddler>] }}}\\n>\\n    <$list filter=\\\"[subfilter<getFiles>regexp[(?i)\\\\.(jpg|jpeg|png|webp)$]] :and[format:titlelist[]join[ ]]\\\" variable=\\\"imgs\\\" emptyMessage=<<emptyMessage>> >\\n        <$macy columns=\\\"6\\\" breakAt=\\\"1300:5:15:15 940:3:10:10 520:2:5:5 400:1:1:1\\\">\\n            <$list filter=\\\"[enlist<imgs>]\\\" variable=\\\"img\\\">\\n                <$button class=\\\"tc-btn-invisible item-container\\\" tag=\\\"div\\\" role=\\\"button\\\" actions=\\\"\\\"\\\"\\n                    <$action-spotlight\\n                        $images=<<imgs>>\\n                        $start=<<img>>\\n                    />\\\"\\\"\\\">\\n                    <$image source=<<img>>  class=\\\"item\\\" />\\n                </$button>\\n            </$list>\\n        </$macy>\\n    </$list>\\n</$let>\\n\\\\end gallery\\n\\n<$macrocall $name=\\\"gallery\\\" />\"},\"$:/plugins/sq/webdav-utils/more-menu/menuitems/new-directory\":{\"title\":\"$:/plugins/sq/webdav-utils/more-menu/menuitems/new-directory\",\"squi-contextmenu-name\":\"Create a new directory\",\"tags\":\"$:/tags/file-explorer/more-popup-menu/menuitems\",\"condition\":\"[<currentPath>is[blank]]\",\"text\":\"\\n\\n\\\\define callback()\\n\\\\define failureHandler()\\n<$let message=\\\"[<status>match[405]then[The directory already exists.]else[There was an error creating the directory.]]\\\">\\n\\t<$action-setfield $tiddler={{{ [[$:/temp/webdav/error/]addsuffix<now [UTC]YYYY0MM0DD0hh0mm0ssXXX]>] }}} text={{{ [<message>addsuffix<error>] }}} component=\\\"WebDAV create new directory\\\" tags=\\\"$:/tags/Alert\\\"/>\\n</$let>\\n\\\\end failureHandler\\n<$list filter=\\\"[<status>match[201]]\\\" variable=\\\"null\\\" emptyValue=<<failureHandler>> >\\n\\t<$action-sendmessage $message=\\\"tm-notify\\\" $param=\\\"$:/plugins/sq/webdav-utils/ui/templates/wiki-created\\\" path=<<url>> />\\n\\t<$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=<<currentPath>>/>\\n</$list>\\n\\\\end callback\\n\\n<$action-sendmessage\\n\\t$message=\\\"tm-http-request\\\"\\n\\tmethod=\\\"MKCOL\\\"\\n\\tbind-status=\\\"$:/state/webdav/http-status\\\"\\n\\toncompletion=<<callback>>\\n\\turl={{{ [<currentPath>addsuffix[testfolder]] }}}\\n\\tvar-url={{{ {{{ [<currentPath>addsuffix[testfolder]] }}} }}}\\n\\t>\\n\"},\"$:/plugins/sq/webdav-utils/more-menu/menuitems/new-wiki\":{\"title\":\"$:/plugins/sq/webdav-utils/more-menu/menuitems/new-wiki\",\"squi-contextmenu-name\":\"Create a new wiki\",\"tags\":\"$:/tags/file-explorer/more-popup-menu/menuitems\",\"condition\":\"[<currentPath>!is[blank]]\",\"text\":\"<$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=<<currentPath>>/>\\n<$action-sendmessage $message=\\\"tm-modal\\\" $param=\\\"$:/plugins/sq/webdav-utils/ui/modal-new-wiki\\\" currentDir=<<currentPath>>/>\"},\"$:/plugins/sq/webdav-utils/more-menu/menuitems/refresh-directory\":{\"title\":\"$:/plugins/sq/webdav-utils/more-menu/menuitems/refresh-directory\",\"squi-contextmenu-name\":\"Refresh this directory\",\"tags\":\"$:/tags/file-explorer/more-popup-menu/menuitems\",\"condition\":\"[<currentPath>!is[blank]]\",\"text\":\"<$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=<<currentPath>> />\"},\"$:/plugins/sq/webdav-utils/more-menu/menuitems/view-as-gallery\":{\"title\":\"$:/plugins/sq/webdav-utils/more-menu/menuitems/view-as-gallery\",\"squi-contextmenu-name\":\"View as photo gallery\",\"tags\":\"$:/tags/file-explorer/more-popup-menu/menuitems\",\"condition\":\"[[$:/plugins/sq/macy]is[tiddler]]\",\"text\":\"<$action-sendmessage $message=\\\"tm-webdav-ls\\\" $param=<<currentPath>> />\\n<$action-setfield $tiddler=\\\"$:/temp/volatile/sq/webdav/gallery/activedirectory\\\" text=<<currentPath>> />\\n<$action-navigate $to=\\\"$:/Gallery\\\"/>\"},\"$:/plugins/sq/webdav-utils/ui/modal-new-wiki\":{\"title\":\"$:/plugins/sq/webdav-utils/ui/modal-new-wiki\",\"class\":\"tc-modal-centered squi-modal-centered\",\"footer\":\"<$button message=\\\"tm-close-tiddler\\\">Close</$button>\",\"subtitle\":\"Create a new wiki\",\"mask-closable\":\"yes\",\"text\":\"\\\\import [[$:/plugins/sq/webdav-utils/create-wiki-actions]] [[$:/plugins/sq/webdav-utils/ui/file-explorer/prefix]]\\n\\\\define filename-temp() $:/temp/sq/fs/new-wiki-name\\n\\n\\\\define create-new-wiki()\\n<$let\\n \\tcurrentDir={{{ [<currentDir>!is[blank]else[/]] }}}\\n\\tdestinationURL={{{ [<currentDir>trim:suffix[/]addsuffix[/]addsuffix{$:/temp/sq/fs/new-wiki-name}] }}}\\n\\tcurrentPath=<<currentDir>>\\n\\tdataTiddler={{{ [subfilter<getDataTiddler>] }}}\\n\\tfileExists={{{ [subfilter<getFiles>] :intersection[<destinationURL>] :and[count[]match[1]then[yes]else[no]] }}} \\n\\t>\\n\\t<$action-confirm $prompt=<<fileExists>> $message=\\\"This will overwrite an existing wiki. Do you wish to continue?\\\" >\\n\\t\\t<<createWikiActions>>\\n\\t</$action-confirm>\\n</$let>\\n\\\\end\\n\\\\parsermode inline\\n<div class=\\\"sq-fs-addwiki\\\">\\n\\t<fieldset>\\n\\t<label><div>1) Create a new ~TiddlyWiki file in ''<$text text={{{ [<currentDir>decodeuricomponent[]] }}}/>'' called:</div>\\n\\t\\t<$edit-text tiddler=<<filename-temp>> placeholder=\\\"filename.html\\\" tag=\\\"input\\\" default=\\\"\\\" class=\\\"sq-search-input\\\"/>\\n\\t</label>\\n\\t</fieldset>\\n\\t<fieldset class={{{ [<filename-temp>get[text]!is[blank]suffix[.html]then[]else[disabled]] }}}>\\n\\t<label>\\n\\t\\t<div>2) Use the template:</div>\\n\\t\\t<div class=\\\"squi-radio2\\\">\\n\\t\\t\\t<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/Edition]sort[name]]\\\">\\n\\t\\t\\t\\t<$radio tiddler=\\\"$:/config/sq/webdav/new-wiki/selected-edition\\\" field=\\\"text\\\" value=<<currentTiddler>>>\\n\\t\\t\\t\\t\\t<$text text={{!!text}}/>\\n\\t\\t\\t\\t</$radio>\\n\\t\\t\\t</$list>\\n\\t\\t\\t<$radio tiddler=\\\"$:/config/sq/webdav/new-wiki/selected-edition\\\" field=\\\"text\\\" value=\\\"FROMURL\\\">use the file from this URL:</$radio>\\n\\t\\t\\t<$list filter=\\\"[{$:/config/sq/webdav/new-wiki/selected-edition}match[FROMURL]]\\\" variable=\\\"null\\\">\\n\\t\\t\\t\\t<$edit-text tiddler=\\\"$:/temp/sq/fs/new-wiki-template-url\\\" placeholder=\\\"https://\\\" tag=\\\"input\\\" default=\\\"\\\" class=\\\"sq-search-input\\\" />\\n\\t\\t\\t</$list>\\n\\t\\t</div>\\n\\t</label>\\n\\t</fieldset>\\n\\t<fieldset class={{{ [<filename-temp>get[text]!is[blank]suffix[.html]then[]else[disabled]] }}}>\\n\\t\\t<legend>3) Customize new wiki:</legend>\\n\\t\\t<details>\\n\\t\\t\\t<summary>Add plugins</summary>\\n\\t\\t\\t<ul class=\\\"squi-list-group squi-list-group-flush sq-fs-addplugins\\\">\\n\\t\\t\\t\\t<$list filter=\\\"[plugin-type[plugin]sort[name]] -$:/core\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"squi-list-group-item tc-flex tc-flex-row squi-align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<$checkbox tiddler=\\\"$:/config/sq/webdav/new-wiki/selected-plugins\\\" index=<<currentTiddler>> checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\" class=\\\"squi-form-switch\\\"/>\\n\\t\\t\\t\\t\\t\\t<label class=\\\"squi-form-label\\\"><$link tooltip={{!!name}}><$text text={{!!name}}/></$link></label>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</$list>\\n\\t\\t\\t</ul>\\n\\t\\t</details>\\n\\t\\t<details>\\n\\t\\t\\t<summary>Include additional tiddlers</summary>\\n\\t\\t\\t<p class=\\\"tc-big-gap-right tc-big-gap-left\\\">\\n\\t\\t\\t\\t<$select tiddler=\\\"$:/config/sq/webdav/new-wiki/selected-tiddlers-option\\\" default=\\\"none\\\" class=\\\"squi-form-select\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"none\\\">none</option>\\n\\t\\t\\t\\t\\t<option value=\\\"default-WebDAV-configuration\\\">default ~WebDAV configuration</option>\\n\\t\\t\\t\\t\\t<option value=\\\"custom-filter\\\">custom filter</option>\\n\\t\\t\\t\\t</$select>\\n\\t\\t\\t\\t<$list filter=\\\"default-WebDAV-configuration custom-filter :intersection[[$:/config/sq/webdav/new-wiki/selected-tiddlers-option]get[text]]\\\" variable=\\\"selected-option\\\">\\n\\t\\t\\t\\t\\t<p><$edit-text tiddler={{{ [<selected-option>addprefix[$:/config/sq/webdav/new-wiki/tiddlers-filter/]] }}} placeholder=\\\"\\\" tag=\\\"textarea\\\" default=\\\"\\\" class=\\\"squi-form-textarea tc-max-width\\\" /></p>\\n\\t\\t\\t\\t</$list>\\n\\t\\t\\t</p>\\n\\t\\t</details>\\n\\t</fieldset>\\n\\t<$button class=\\\"squi-btn-big\\\" actions=<<create-new-wiki>> disabled={{{ [<filename-temp>get[text]!is[blank]suffix[.html]then[no]else[yes]] }}}>create new wiki</$button>\\n</div>\"},\"$:/plugins/sq/webdav-utils/settings/uploader\":{\"title\":\"$:/plugins/sq/webdav-utils/settings/uploader\",\"text\":\"[[Default upload directory|$:/config/file-uploads/webdav/defaultUploadDirectory]]: \\n<$edit-text tiddler=\\\"$:/config/file-uploads/webdav/defaultUploadDirectory\\\" field=\\\"text\\\" tag=\\\"input\\\" class=\\\"tc-edit-texteditor\\\"/>\\n\\n//Hint: use a leading `/` to specify a path relative to the root//\\n\\n[[Filters to customize file path for uploads|$:/config/file-uploads/webdav/uploadPathFilters]]:\\n\\n<$edit-text tiddler=\\\"$:/config/file-uploads/webdav/uploadPathFilters\\\" field=\\\"text\\\" tag=\\\"textarea\\\" class=\\\"tc-edit-texteditor\\\" />\\n\\n<$tiddler tiddler=\\\"$:/config/file-uploads/webdav/generateUniqueURIs\\\">\\n<div style=\\\"justify-content: space-between!important;display: flex;\\\">\\n<label class=\\\"squi-form-label\\\"><$link tooltip={{!!description}}>{{!!caption}}</$link></label><$checkbox field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" class=\\\"squi-form-switch\\\"/>\\n</div>\\n</$tiddler>\"},\"$:/plugins/sq/webdav-utils/settings\":{\"title\":\"$:/plugins/sq/webdav-utils/settings\",\"text\":\"! Uploader for File Uploads\\n\\n{{$:/plugins/sq/webdav-utils/settings/uploader}}\\n\\n---\\n\\n! Backups\\n\\n<$tiddler tiddler=\\\"$:/config/webdav/enableBackups\\\">\\n<div style=\\\"justify-content: space-between!important;display: flex;\\\">\\n<label class=\\\"squi-form-label\\\"><$link tooltip={{!!description}}>{{!!caption}}</$link></label><$checkbox field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" class=\\\"squi-form-switch\\\"/>\\n</div>\\n</$tiddler>\\n\\n[[WebDAV saver backup path (is wikified)|$:/config/webdav/backupPath]]\\n<$edit-text tiddler=\\\"$:/config/webdav/backupPath\\\" field=\\\"text\\\" tag=\\\"input\\\" class=\\\"tc-edit-texteditor\\\"/>\"}}}"}