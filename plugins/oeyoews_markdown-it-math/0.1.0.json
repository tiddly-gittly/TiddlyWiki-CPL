{"title":"$:/plugins/oeyoews/markdown-it-math","description":"markdown-it-math","author":"oeyoews","version":"0.1.0","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"markdown-it-math","meat#disabled":"yes","qrcode":"yes","created":"2024-01-29","parent-plugin":"$:/plugins/oeyoews/markdown-extensions-startup","list":"readme","dependents":"","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/markdown-it-math/readme\":{\"title\":\"$:/plugins/oeyoews/markdown-it-math/readme\",\"text\":\"## markdownit math\\n\",\"type\":\"text/markdown\",\"description\":\"markdown-it-math\"},\"$:/plugins/oeyoews/markdown-it-math/markdown-it-math.js\":{\"title\":\"$:/plugins/oeyoews/markdown-it-math/markdown-it-math.js\",\"text\":\"const MathPlugin = (md) => {\\n  const defaultFenceRender = md.renderer.rules.fence;\\n\\n  const customMathFenceRender = (tokens, idx, options = {}, env, slf) => {\\n    const token = tokens[idx];\\n    const code = token.content.trim();\\n    const [type] = token.info.split(' ');\\n    if (type.trim() !== 'math') {\\n      return defaultFenceRender(tokens, idx, (options = {}), env, slf);\\n    } else if (type.trim() === 'math') {\\n      try {\\n        return $tw.wiki.renderText(\\n          'text/html',\\n          'text/vnd.tiddlywiki',\\n          '$$\\\\n' + code + '\\\\n$$'\\n        );\\n      } catch (e) {\\n        return `<pre>${code}</pre>`;\\n      }\\n    }\\n  };\\n\\n  md.renderer.rules.fence = customMathFenceRender;\\n};\\n\\nmodule.exports = MathPlugin;\\n\",\"type\":\"application/javascript\",\"module-type\":\"markdownit\"}}}"}